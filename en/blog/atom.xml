<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ks6088ts.github.io/en/blog</id>
    <title>ks6088ts Blog</title>
    <updated>2024-12-13T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ks6088ts.github.io/en/blog"/>
    <subtitle>ks6088ts Blog</subtitle>
    <icon>https://ks6088ts.github.io/en/https://github.com/ks6088ts.png</icon>
    <entry>
        <title type="html"><![CDATA[GitHub Actions から OpenID Connect で Azure に接続する設定作業を Terraform で自動化する]]></title>
        <id>https://ks6088ts.github.io/en/blog/configure-oidc-azure</id>
        <link href="https://ks6088ts.github.io/en/blog/configure-oidc-azure"/>
        <updated>2024-12-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Microsoft Azure Tech Advent Calendar 2024 の 12/13 の投稿記事です。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://qiita.com/advent-calendar/2024/microsoft-azure-tech" target="_blank" rel="noopener noreferrer">Microsoft Azure Tech Advent Calendar 2024</a> の 12/13 の投稿記事です。</p>
<p>本記事では、GitHub Actions から OpenID Connect で Azure に接続する設定作業を Terraform で自動化する方法についてご紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#tldr" class="hash-link" aria-label="Direct link to TL;DR" title="Direct link to TL;DR">​</a></h2>
<ul>
<li>Terraform を利用して、GitHub Actions から OpenID Connect で Azure に接続するための設定作業を自動化しました</li>
<li>スクリプトと Terraform のサンプルは <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform" target="_blank" rel="noopener noreferrer">こちら</a> にて MIT ライセンスで公開しました</li>
<li>GitHub Codespaces と GitHub Actions のイベントトリガーからリソースのデプロイが実行できることを確認しました</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="全体構成">全体構成<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E5%85%A8%E4%BD%93%E6%A7%8B%E6%88%90" class="hash-link" aria-label="Direct link to 全体構成" title="Direct link to 全体構成">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="openid-connect-接続設定の自動化">OpenID Connect 接続設定の自動化<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#openid-connect-%E6%8E%A5%E7%B6%9A%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96" class="hash-link" aria-label="Direct link to OpenID Connect 接続設定の自動化" title="Direct link to OpenID Connect 接続設定の自動化">​</a></h3>
<p>GitHub Actions から OpenID Connect で Azure に接続するのに必要な設定作業を自動化する流れを示します。<br>
<!-- -->下図では、ローカル開発環境から Terraform を実行して、GitHub と Azure プラットフォーム上に必要な設定流し込むため、以下 2 つのシナリオを実行しています。
シナリオを分けて実行するのは、依存する Terraform provider が異なっていることや、ターゲットとなるプラットフォームが異なることから再利用性を高めるためです。</p>
<ol>
<li><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/main/infra/scenarios/configure_github_secrets/README.md" target="_blank" rel="noopener noreferrer">configure_github_secrets</a>: GitHub 側に Environment Secret を作成する処理が含まれます。</li>
<li><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/main/infra/scenarios/create_service_principal/README.md" target="_blank" rel="noopener noreferrer">create_service_principal</a>: Terraform を使用して、Azure 側にサービスプリンシパルを作成する処理</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/docs/images/configure_oidc_azure.png?raw=true" alt="configure_oidc_azure.png" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="openid-connect-接続で-github-actions-から-azure-にリソースをデプロイ">OpenID Connect 接続で GitHub Actions から Azure にリソースをデプロイ<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#openid-connect-%E6%8E%A5%E7%B6%9A%E3%81%A7-github-actions-%E3%81%8B%E3%82%89-azure-%E3%81%AB%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4" class="hash-link" aria-label="Direct link to OpenID Connect 接続で GitHub Actions から Azure にリソースをデプロイ" title="Direct link to OpenID Connect 接続で GitHub Actions から Azure にリソースをデプロイ">​</a></h3>
<p>上記の設定を行うと、GitHub Actions から OpenID Connect を利用して Azure に接続することができるようになります。
下図では、払い出された接続設定を利用して、GitHub Actions から Azure にリソースをデプロイするシナリオ (e.g. <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/main/infra/scenarios/tfstate_backend/README.md" target="_blank" rel="noopener noreferrer">tfstate_backend</a>) を実行した様子を示しています。</p>
<p><img decoding="async" loading="lazy" src="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/docs/images/deploy_tfstate_backend.png?raw=true" alt="deploy_tfstate_backend.png" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="github-actions-から-openid-connect-で-azure-に接続する設定作業を手動で行う">GitHub Actions から OpenID Connect で Azure に接続する設定作業を手動で行う<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#github-actions-%E3%81%8B%E3%82%89-openid-connect-%E3%81%A7-azure-%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E8%A8%AD%E5%AE%9A%E4%BD%9C%E6%A5%AD%E3%82%92%E6%89%8B%E5%8B%95%E3%81%A7%E8%A1%8C%E3%81%86" class="hash-link" aria-label="Direct link to GitHub Actions から OpenID Connect で Azure に接続する設定作業を手動で行う" title="Direct link to GitHub Actions から OpenID Connect で Azure に接続する設定作業を手動で行う">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="なぜ-openid-connect-を使って-azure-に接続するのか">なぜ OpenID Connect を使って Azure に接続するのか<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E3%81%AA%E3%81%9C-openid-connect-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-azure-%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8B" class="hash-link" aria-label="Direct link to なぜ OpenID Connect を使って Azure に接続するのか" title="Direct link to なぜ OpenID Connect を使って Azure に接続するのか">​</a></h3>
<p>まず、<code>GitHub Actions から OpenID Connect で Azure に接続する</code> とはどういうことか説明します。</p>
<p>GitHub と Azure を連携させるために、ここでは GitHub Actions を利用します。GitHub Actions は、GitHub が提供するソフトウェア開発のワークフローを自動化するサービスです。例えば、GitHub リポジトリにプッシュされたコードを自動的にビルド、テスト、デプロイするような CI/CD のユースケースなどに利用されます。</p>
<p>Azure 上で動作するアプリケーションを GitHub Actions からテストしたりデプロイする場合、Azure に接続するための認証が必要です。Azure には様々な認証方法が提供されています。従来は、Azure のサービスプリンシパルを作成し、クライアントシークレットを使って認証する方法が一般的でした。しかし、セキュリティ上の理由から、現在では OpenID Connect を使った認証方法が推奨されています。 (ref. <a href="https://learn.microsoft.com/ja-jp/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux" target="_blank" rel="noopener noreferrer">GitHub Actions を使用して Azure に接続する
</a>)</p>
<p>クライアントシークレットのような静的な認証情報は有効期限が長く、漏洩した場合のリスクが高いです。また、キーの管理も煩雑になります。<br>
<!-- -->一方で OpenID Connect を使うと、静的な認証情報を使用せず一時的なトークンで認証を行います。このトークンは有効期限が短く、アクセス元や対象リソースの権限範囲を細かく制限できるため、漏洩してもリスクが低くなります。
そのため、OpenID Connect を使った認証方法が推奨されています。</p>
<p>OpenID Connect を利用するメリットに関しては、<a href="https://amzn.to/3Co02xA" target="_blank" rel="noopener noreferrer">GitHub CI/CD 実践ガイド――持続可能なソフトウェア開発を支える GitHub Actions の設計と運用 エンジニア選書</a>の<code>第11章 OpenID Connectによるセキュアなクラウド連携</code>に詳しく書かれています。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="手動での接続設定は手間がかかるしミスが起きやすい">手動での接続設定は手間がかかるしミスが起きやすい<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E6%89%8B%E5%8B%95%E3%81%A7%E3%81%AE%E6%8E%A5%E7%B6%9A%E8%A8%AD%E5%AE%9A%E3%81%AF%E6%89%8B%E9%96%93%E3%81%8C%E3%81%8B%E3%81%8B%E3%82%8B%E3%81%97%E3%83%9F%E3%82%B9%E3%81%8C%E8%B5%B7%E3%81%8D%E3%82%84%E3%81%99%E3%81%84" class="hash-link" aria-label="Direct link to 手動での接続設定は手間がかかるしミスが起きやすい" title="Direct link to 手動での接続設定は手間がかかるしミスが起きやすい">​</a></h3>
<p>GitHub Actions から OpenID Connect で Azure に接続する設定作業は、手動で行うとざっくりと以下の流れになります。</p>
<p><strong>Azure Portal にて</strong></p>
<ul>
<li>アプリケーション登録する</li>
<li>登録したアプリケーションに対してフェデレーション資格情報を追加する</li>
<li>ロール割り当てを行う</li>
</ul>
<p><strong>GitHub にて</strong></p>
<ul>
<li>リポジトリに環境(=Environment)を作成する</li>
<li>リポジトリで作成した環境上にシークレットを登録する</li>
</ul>
<p>作業手順に関する一次情報は、<a href="https://learn.microsoft.com/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux" target="_blank" rel="noopener noreferrer">GitHub Actions を使用して Azure に接続する</a> にあります。<br>
<!-- -->残念なことに私はそれでもよくわからなかったので、調べてみたところ <a href="https://zenn.dev/dzeyelid/articles/5f20acbe549666" target="_blank" rel="noopener noreferrer">Check! GitHub Actions で OpenID Connect(OIDC) で Azure に安全に接続する</a> という記事を見つけました。GUI 操作のスクリーンショット付きで具体的な手順が解説されており、とても参考になりました。</p>
<p><img decoding="async" loading="lazy" src="https://res.cloudinary.com/zenn/image/fetch/s--jeiZgBuE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_1200/https://storage.googleapis.com/zenn-user-upload/deployed-images/4db01a487f4e1f7e8807f25c.png%3Fsha%3Db18c893e94c6fdeeeb28d1d181bb1d74d1ebbd8e" alt="GitHub Actions で OpenID Connect で Azure に接続する設定" class="img_ev3q"></p>
<p>手動で設定できたのは嬉しいですが、やはり手動での設定は面倒でミスが起きやすいです。実際、この作業を行う過程で何度かミスをしてしまいました。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="面倒で繰り返す作業は自動化すべし">面倒で繰り返す作業は自動化すべし<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E9%9D%A2%E5%80%92%E3%81%A7%E7%B9%B0%E3%82%8A%E8%BF%94%E3%81%99%E4%BD%9C%E6%A5%AD%E3%81%AF%E8%87%AA%E5%8B%95%E5%8C%96%E3%81%99%E3%81%B9%E3%81%97" class="hash-link" aria-label="Direct link to 面倒で繰り返す作業は自動化すべし" title="Direct link to 面倒で繰り返す作業は自動化すべし">​</a></h2>
<p>手動でこの作業を行うのは面倒でミスが起きやすいです。<br>
<!-- -->Azure と GitHub を使った CI/CD を含む本格的な開発環境を構築する場合、新しいプロジェクトを立ち上げるたびにこの設定作業を繰り返すことになります。
そのため、将来の自分のために自動化しておくとコストパフォーマンスが良いと感じ、自動化するモチベーションが湧きました。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="アプローチ-1-スクリプトを書いて自動化する">アプローチ 1. スクリプトを書いて自動化する<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81-1-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%82%92%E6%9B%B8%E3%81%84%E3%81%A6%E8%87%AA%E5%8B%95%E5%8C%96%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to アプローチ 1. スクリプトを書いて自動化する" title="Direct link to アプローチ 1. スクリプトを書いて自動化する">​</a></h3>
<p>Azure Portal などの Web UI は、ベンダー側の親切心で見た目や操作手順が変わることがあります。スクリーンショットを使った手順書は初心者にとって非常にわかりやすい反面、UI が変わるたびに更新が必要です。一方、フロントエンドが内部的にコールしている API は基本的に後方互換性が保たれることが多いため、API を使った自動化は保守性に優れています。<code>GUIは変わるがAPIは変わらない</code>という考え方は、自動化の観点から重要です。</p>
<p>操作手順を自動化するアプローチとして、正攻法としては UI 操作に対応する API をドキュメントや Copilot を使って調べ、CLI のコマンドやスクリプトに書き起こすことが考えられます。</p>
<p>場合に依ってはドキュメントがない場合もあります。以下のようなブラウザのツールを使ってリクエスト内容をキャプチャし、そこから観測できた挙動を元にスクリプトを書くことも技術的には可能です。
(※ ただし、これはプラットフォーマが明示的に API を定義したものではないため、あまり行儀の良い方法ではなく推奨されません。)</p>
<table><thead><tr><th>ブラウザ</th><th>リンク</th></tr></thead><tbody><tr><td>Microsoft Edge</td><td><a href="https://learn.microsoft.com/ja-jp/microsoft-edge/devtools-guide-chromium/network/" target="_blank" rel="noopener noreferrer">ネットワーク アクティビティの検査</a></td></tr><tr><td>Google Chrome</td><td><a href="https://developer.chrome.com/docs/devtools/network?hl=ja" target="_blank" rel="noopener noreferrer">ネットワーク パネルの使用</a></td></tr></tbody></table>
<p>スクリプトへの書き起こしは一昔前まではウェブ検索して解決していましたが、今は <a href="https://github.com/features/copilot" target="_blank" rel="noopener noreferrer">GitHub Copilot</a>にお任せすると早いです。チャットで聞くもよし、適当なファイル上でコメント補完の形で対話するもよしです。<br>
<!-- -->私は後者の手法をよく使います。やりかたは <a href="https://patterns.hattori.dev/ja/general/comment-to-code/" target="_blank" rel="noopener noreferrer">GitHub Copilot パターン&amp;エクササイズ &gt; コメントからコードを生成</a> を参考にしています。シェルスクリプトで目標としていた Azure と GitHub の設定を自動化するためのスクリプトを書いてみました。</p>
<ul>
<li><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/scripts/create-service-principal.sh" target="_blank" rel="noopener noreferrer">scripts/create-service-principal.sh</a>: サービスプリンシパルを作成して資格情報・権限割り当てを実行するシェルスクリプト</li>
<li><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/scripts/configure-github-secrets.sh" target="_blank" rel="noopener noreferrer">scripts/configure-github-secrets.sh</a>: GitHub の環境にシークレットを設定するシェルスクリプト</li>
</ul>
<p>長ったらしいシェルスクリプトではありますが、実行環境の依存関係はコンパクトに纏まっているので身軽に使えそうです。
ただ、途中でエラーが起きたりした場合は手動で修正する必要があるので、完全な自動化とは言えません。再現性にも問題があるので他の人に自信を持って渡すことはできません。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="アプローチ-2-iac-ツールを利用して自動化する">アプローチ 2. IaC ツールを利用して自動化する<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E3%82%A2%E3%83%97%E3%83%AD%E3%83%BC%E3%83%81-2-iac-%E3%83%84%E3%83%BC%E3%83%AB%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6%E8%87%AA%E5%8B%95%E5%8C%96%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to アプローチ 2. IaC ツールを利用して自動化する" title="Direct link to アプローチ 2. IaC ツールを利用して自動化する">​</a></h3>
<p>手順が複雑で重厚長大な成果物を他者に渡す場合は IaC ツールを利用することが多いです。
シェルスクリプトに比べると書くのに手間がかかりますが、再現性や保守性が高いので他者に渡す場合は IaC ツールを利用することが多いです。
IaC ツールとしては大きく Bicep, Terraform などが考えられます。
今回のユースケースにおいては、Azure と GitHub のリソースを管理する必要があるため Terraform が適していると思います。
IaC ツール選定に迷った場合は、<a href="https://learn.microsoft.com/ja-jp/azure/developer/terraform/comparing-terraform-and-bicep?tabs=comparing-bicep-terraform-integration-features#infrastructure-targets" target="_blank" rel="noopener noreferrer">Terraform と Bicep の比較</a> が参考になります。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="terraform-で実装する">Terraform で実装する<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#terraform-%E3%81%A7%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to Terraform で実装する" title="Direct link to Terraform で実装する">​</a></h2>
<p>基本的に CRUD 操作を行う Web API を提供しているプラットフォームには Terraform Provider を実装することができます。
幸い、今回ターゲットとしている各プラットフォーム向けに以下のプロバイダが提供されていますので、それを利用して設定を自動化してみます。</p>
<p>(仮にプロバイダが無い場合は、<a href="https://ks6088ts.github.io/blog/terraform-provider-soracom#2-soracom-%E5%90%91%E3%81%91%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E3%83%97%E3%83%AD%E3%83%90%E3%82%A4%E3%83%80%E3%81%AE%E5%AE%9F%E8%A3%85" target="_blank" rel="noopener noreferrer">2. SORACOM 向けカスタムプロバイダの実装</a>のような形でフルスクラッチでプロバイダを実装することもできます)</p>
<table><thead><tr><th>プラットフォーム</th><th>プロバイダ</th></tr></thead><tbody><tr><td>GitHub</td><td><a href="https://registry.terraform.io/providers/integrations/github/latest" target="_blank" rel="noopener noreferrer">integrations/github</a></td></tr><tr><td>Microsoft Entra ID(Azure AD)</td><td><a href="https://registry.terraform.io/providers/hashicorp/azuread/latest/docs" target="_blank" rel="noopener noreferrer">hashicorp/azuread</a></td></tr><tr><td>Azure</td><td><a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs" target="_blank" rel="noopener noreferrer">hashicorp/azurerm</a></td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="開発環境を整える">開発環境を整える<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92%E6%95%B4%E3%81%88%E3%82%8B" class="hash-link" aria-label="Direct link to 開発環境を整える" title="Direct link to 開発環境を整える">​</a></h3>
<p>エディタの拡張機能による決定論的なインテリセンス、GitHub Copilot による生成 AI ベースのインテリセンス、静的解析ツールによる品質保証など、事前に開発環境を整えることで生産性が向上します。</p>
<p>Visual Studio Code 上で開発する場合、VS Code 拡張として以下のものをインストールすると Terraform の開発が捗ります。いずれも HashiCorp が提供しているものです。</p>
<table><thead><tr><th>拡張機能名</th><th>リンク</th></tr></thead><tbody><tr><td>Terraform Extension for Visual Studio Code</td><td><a href="https://marketplace.visualstudio.com/items?itemName=HashiCorp.terraform" target="_blank" rel="noopener noreferrer">HashiCorp Terraform</a></td></tr><tr><td>HCL Extension for Visual Studio Code</td><td><a href="https://marketplace.visualstudio.com/items?itemName=HashiCorp.HCL" target="_blank" rel="noopener noreferrer">HashiCorp HCL</a></td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="静的解析を導入する">静的解析を導入する<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E9%9D%99%E7%9A%84%E8%A7%A3%E6%9E%90%E3%82%92%E5%B0%8E%E5%85%A5%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 静的解析を導入する" title="Direct link to 静的解析を導入する">​</a></h3>
<p>Terraform のコードに静的解析ツールを導入しておくと、コードの品質を保つのに役立ちます。今回は以下のツールを導入してみました。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="tflint"><strong><a href="https://github.com/terraform-linters/tflint" target="_blank" rel="noopener noreferrer">TFLint</a></strong><a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#tflint" class="hash-link" aria-label="Direct link to tflint" title="Direct link to tflint">​</a></h4>
<p>静的解析ツール。未使用変数とかがあると教えてくれます。例えば以下のように、未使用のデータソースがあることを指摘してくれます。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">2 issue(s) found:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Warning: data "azuread_client_config" "client_config" is declared but not used (terraform_unused_declarations)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  on scenarios/create_user_group/main.tf line 26:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  26: data "azuread_client_config" "client_config" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Reference: https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.2.2/docs/rules/terraform_unused_declarations.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Warning: data "azuread_service_principal" "msgraph" is declared but not used (terraform_unused_declarations)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  on scenarios/create_user_group/main.tf line 32:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  32: data "azuread_service_principal" "msgraph" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Reference: https://github.com/terraform-linters/tflint-ruleset-terraform/blob/v0.2.2/docs/rules/terraform_unused_declarations.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make: *** [Makefile:52: tflint] Error 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Error: Process completed with exit code 2.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="trivy"><strong><a href="https://github.com/aquasecurity/trivy" target="_blank" rel="noopener noreferrer">Trivy</a></strong><a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#trivy" class="hash-link" aria-label="Direct link to trivy" title="Direct link to trivy">​</a></h4>
<p>Trivy はコンテナイメージの脆弱性スキャンツールですが、Terraform のコードにも適用できます。<br>
<!-- -->セキュリティに関するベストプラクティスに沿っていないコードを指摘してくれます。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="参考-tfsec">(参考) <strong><a href="https://github.com/aquasecurity/tfsec" target="_blank" rel="noopener noreferrer">tfsec</a></strong><a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E5%8F%82%E8%80%83-tfsec" class="hash-link" aria-label="Direct link to 参考-tfsec" title="Direct link to 参考-tfsec">​</a></h4>
<p>セキュリティの静的解析ツールですが、現在は非推奨で Trivy に移行することが推奨されています。<br>
<a href="https://github.com/aquasecurity/tfsec/discussions/1994" target="_blank" rel="noopener noreferrer">tfsec is joining the Trivy family #1994</a> によると、tfsec は 2023 年 2 月に Aqua Security 社に買収されており、Trivy ファミリに組み込まれることが発表されています。
<a href="https://zenn.dev/acntechjp/articles/9f0e3d4813e36d#tfsec%E3%81%AE%E7%8F%BE%E7%8A%B6" target="_blank" rel="noopener noreferrer">tfsec から Trivy に移行した話</a> や <a href="https://github.com/aquasecurity/tfsec/blob/master/tfsec-to-trivy-migration-guide.md" target="_blank" rel="noopener noreferrer">Trivy へのマイグレーションガイド</a>が出ている状況も鑑みますと、今後は Trivy を使っていくのが良さそうです。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="どこからでも動かせるようにする">どこからでも動かせるようにする<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E3%81%A9%E3%81%93%E3%81%8B%E3%82%89%E3%81%A7%E3%82%82%E5%8B%95%E3%81%8B%E3%81%9B%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to どこからでも動かせるようにする" title="Direct link to どこからでも動かせるようにする">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-codespaces">GitHub Codespaces<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#github-codespaces" class="hash-link" aria-label="Direct link to GitHub Codespaces" title="Direct link to GitHub Codespaces">​</a></h3>
<p>ブラウザだけで動かせるとなお有難いので、GitHub Codespaces でも実行できるように Dev Container の設定も書いてみました。実際に書いた設定はこちら: <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/.devcontainer/devcontainer.json" target="_blank" rel="noopener noreferrer">.devcontainer/devcontainer.json</a>。<br>
<a href="https://containers.dev/features" target="_blank" rel="noopener noreferrer">Dev Container Features</a> というコミュニティベースの拡張機能が充実していて、CLI ツールのインストール程度であれば、もはや Dockerfile すら書かなくてもよい感じです。
GitHub Codespace に対応しておけば、開発端末がなくても開発環境を構築できるので、開発環境の構築を手軽に行いたい場合に便利です。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="github-actions-の-workflow_dispatch">GitHub Actions の <code>workflow_dispatch</code><a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#github-actions-%E3%81%AE-workflow_dispatch" class="hash-link" aria-label="Direct link to github-actions-の-workflow_dispatch" title="Direct link to github-actions-の-workflow_dispatch">​</a></h3>
<p>ブラウザから GitHub Actions の手動実行を行うためには、<code>workflow_dispatch</code> イベントを利用します。
実際に書いたワークフローは <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/.github/workflows/deploy.yml" target="_blank" rel="noopener noreferrer">.github/workflows/deploy.yml</a> です。</p>
<p>Environment の活用方法については、<a href="https://aadojo.alterbooth.com/entry/2023/07/17/150000" target="_blank" rel="noopener noreferrer">GitHub Actions で環境(Environment)をパラメーターで指定する</a>が参考になりました。
GitHub Actions の環境(Environment) を使うと、同様の処理を異なる環境に対して実行できます。IT 管理者が開発環境やリソースを払い出す場合にも有用なのでは？と思います。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="実行例">実行例<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E5%AE%9F%E8%A1%8C%E4%BE%8B" class="hash-link" aria-label="Direct link to 実行例" title="Direct link to 実行例">​</a></h2>
<p>実際に GitHub Actions を使用して OpenID Connect で Azure に接続する設定を自動化した Terraform (HCL) コードを実行してみます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># リポジトリをクローン</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone git@github.com:ks6088ts-labs/baseline-environment-on-azure-terraform.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-create_service_principal-サービスプリンシパルを作成しopenid-connect-を設定して-azure-に認証します">1. <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/main/infra/scenarios/create_service_principal/README.md" target="_blank" rel="noopener noreferrer">create_service_principal</a>: サービスプリンシパルを作成し、OpenID Connect を設定して Azure に認証します。<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#1-create_service_principal-%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%83%97%E3%83%AA%E3%83%B3%E3%82%B7%E3%83%91%E3%83%AB%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97openid-connect-%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%A6-azure-%E3%81%AB%E8%AA%8D%E8%A8%BC%E3%81%97%E3%81%BE%E3%81%99" class="hash-link" aria-label="Direct link to 1-create_service_principal-サービスプリンシパルを作成しopenid-connect-を設定して-azure-に認証します" title="Direct link to 1-create_service_principal-サービスプリンシパルを作成しopenid-connect-を設定して-azure-に認証します">​</a></h3>
<p>以下の処理を Terraform で実行します。</p>
<ul>
<li>Microsoft Entra ID に新しいアプリケーションとサービスプリンシパルを作成</li>
<li>必要なリソースアクセス権やロールを割り当てる</li>
<li>GitHub Actions 連携用のフェデレーション認証設定の払い出し</li>
<li>ローカル開発用のクライアントシークレット作成</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ディレクトリに移動</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd infra/scenarios/create_service_principal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Azure CLI でログイン</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># (オプション) 現在ログインしているアカウントを確認</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az ad signed-in-user show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Terraform で利用される環境変数を設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export ARM_SUBSCRIPTION_ID=$(az account show --query id --output tsv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export TF_VAR_service_principal_name="baseline-environment-on-azure-terraform_tf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export TF_VAR_github_environment="tf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Terraformの設定を初期化</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># リソースの作成</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply -auto-approve</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>想定通りリソースが作成できているか Azure Portal から確認してみます。
以下では API のアクセス許可設定が確認できます。(管理者の同意は未実施)</p>
<p><img decoding="async" loading="lazy" alt="api_permissions" src="https://ks6088ts.github.io/en/assets/images/api_permissions-ff1be18140855f4eb77cd626a8ee96ef.png" width="1000" height="671" class="img_ev3q"></p>
<p>GitHub 向けのフェデレーション認証設定が確認できます。</p>
<p><img decoding="async" loading="lazy" alt="federated_credentials" src="https://ks6088ts.github.io/en/assets/images/federated_credentials-89fb063eb4668dabb344827b2834a14b.png" width="981" height="521" class="img_ev3q"></p>
<p>アプリケーションに権限を付与するためには管理者の同意が必要です。
対象となるアプリケーションのオブジェクト ID は output で出力しておりますので、以下のコマンドで管理者の同意を実施できます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># アプリケーションに権限を付与</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">application_object_id=$(terraform output -raw application_object_id)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az ad app permission admin-consent --id $application_object_id</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-configure_github_secrets-github-シークレットを設定">2. <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/main/infra/scenarios/configure_github_secrets/README.md" target="_blank" rel="noopener noreferrer">configure_github_secrets</a>: GitHub シークレットを設定<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#2-configure_github_secrets-github-%E3%82%B7%E3%83%BC%E3%82%AF%E3%83%AC%E3%83%83%E3%83%88%E3%82%92%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="Direct link to 2-configure_github_secrets-github-シークレットを設定" title="Direct link to 2-configure_github_secrets-github-シークレットを設定">​</a></h3>
<p>GitHub CLI の認証情報を利用して、以下の処理を Terraform で実行します。</p>
<ul>
<li>GitHub リポジトリの作成</li>
<li>リポジトリに環境を作成</li>
<li>作成した環境にシークレットを設定</li>
</ul>
<p>1 で作成した Azure の設定を利用して GitHub にシークレットを設定するため、<code>terraform.tfvars</code> に Azure の設定を記述します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ディレクトリに移動</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd infra/scenarios/configure_github_secrets/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Azure CLI でログイン</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># (オプション) 現在ログインしているアカウントを確認</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az ad signed-in-user show</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 作成したアプリケーションの情報を取得</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APPLICATION_NAME="baseline-environment-on-azure-terraform_tf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APPLICATION_ID=$(az ad sp list --display-name "$APPLICATION_NAME" --query "[0].appId" --output tsv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SUBSCRIPTION_ID=$(az account show --query id --output tsv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TENANT_ID=$(az account show --query tenantId --output tsv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># terraform.tfvars に Azure の設定を記述</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF &gt; terraform.tfvars</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">create_github_repository = "false"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">organization = "ks6088ts-labs"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">repository_name = "baseline-environment-on-azure-terraform"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">environment_name = "tf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">actions_environment_secrets = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name  = "ARM_CLIENT_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        value = "$APPLICATION_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        name  = "ARM_SUBSCRIPTION_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        value = "$SUBSCRIPTION_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      name  = "ARM_TENANT_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      value = "$TENANT_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      name  = "ARM_USE_OIDC"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      value = "true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上記の設定を利用して、以下の処理を Terraform で実行します。
Terraform で GitHub リポジトリに環境を作成し、環境にシークレットを設定します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ディレクトリに移動</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd infra/scenarios/configure_github_secrets/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># GitHub CLI でログイン</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gh auth login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># (オプション) 現在ログインしているアカウントを確認</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gh auth status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Terraform の初期化</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># リソースの作成</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply -auto-approve</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>GitHub リポジトリに環境が作成され、環境にシークレットが設定されていることが確認できます。</p>
<p><img decoding="async" loading="lazy" alt="configure_github_secrets" src="https://ks6088ts.github.io/en/assets/images/configure_github_secrets-9cbacb03e7c55ecf2b57bf9dc3696abb.png" width="935" height="330" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-github-actions-から-openid-connect-で-azure-に接続してみる">3. GitHub Actions から OpenID Connect で Azure に接続してみる<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#3-github-actions-%E3%81%8B%E3%82%89-openid-connect-%E3%81%A7-azure-%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B" class="hash-link" aria-label="Direct link to 3. GitHub Actions から OpenID Connect で Azure に接続してみる" title="Direct link to 3. GitHub Actions から OpenID Connect で Azure に接続してみる">​</a></h3>
<p>手順 1, 手順 2 で作成した設定を利用して、GitHub Actions から OpenID Connect で Azure に接続してみます。</p>
<p><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-terraform/blob/v0.0.1/.github/workflows/deploy.yml" target="_blank" rel="noopener noreferrer">.github/workflows/deploy.yml</a> に GitHub Actions のワークフローが定義されています。</p>
<p>GitHub Actions では、input を受け取ることができます。以下のように <code>scenario</code> と <code>environment</code> を指定することで、デプロイ対象のシナリオと環境を選択してワークフローを実行できます。</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">on</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">workflow_dispatch</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">inputs</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># デプロイ対象のシナリオを選択</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">scenario</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">required</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">description</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Scenario to deploy"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"tfstate_backend"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic"># 環境を選択</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">required</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">description</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Environment to deploy"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ci"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上記の設定を作成すると、GitHub のウェブ UI から以下のように手動でワークフローを実行できます。</p>
<p><img decoding="async" loading="lazy" alt="workflow_dispatch" src="https://ks6088ts.github.io/en/assets/images/workflow_dispatch-834b94a040ca3cb71f9a664f5f6d8c1c.png" width="901" height="630" class="img_ev3q"></p>
<p>実行対象の環境と、環境変数を設定します。</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">environment</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> github.event.inputs.environment </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ARM_CLIENT_ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.ARM_CLIENT_ID </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ARM_SUBSCRIPTION_ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.ARM_SUBSCRIPTION_ID </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ARM_TENANT_ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.ARM_TENANT_ID </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ARM_USE_OIDC</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">secrets.ARM_USE_OIDC</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>接続に成功すると、Azure にリソースがデプロイされます。実行結果は以下のようになります。</p>
<p><img decoding="async" loading="lazy" alt="github_actions" src="https://ks6088ts.github.io/en/assets/images/github_actions-269408024cccb09462a7ef77a277b774.png" width="642" height="639" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="まとめ">まとめ<a href="https://ks6088ts.github.io/en/blog/configure-oidc-azure#%E3%81%BE%E3%81%A8%E3%82%81" class="hash-link" aria-label="Direct link to まとめ" title="Direct link to まとめ">​</a></h2>
<p>本記事では、GitHub Actions から OpenID Connect を利用して Azure に接続する設定を Terraform で自動化する方法をご紹介しました。<br>
<!-- -->この自動化により、開発者は環境構築の手間を省き、本来の開発業務に集中できるようになります。また、手動設定に比べてミスが減り、OpenID Connect を使った認証によりセキュリティリスクも軽減されます。<br>
<!-- -->GitHub Actions を利用して Azure にリソースをデプロイする構成は、ローカル環境からデプロイする場合と異なり、デプロイに必要な権限を GitHub Actions 側に委譲できることから、セキュリティの観点からも有用です。
事業部門が Entra ディレクトリを提供サービス用に外出ししているケースや、開発者がオペレーターを兼ねる場合など、様々なシーンで活用できると思います。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="terraform" term="terraform"/>
        <category label="github" term="github"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub リポジトリのデフォルト設定ファイルを追加する]]></title>
        <id>https://ks6088ts.github.io/en/blog/default-community-health-files</id>
        <link href="https://ks6088ts.github.io/en/blog/default-community-health-files"/>
        <updated>2024-11-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[GitHub では、Organization または個人用アカウント配下に .github という名前のリポジトリを作成し、その中にデフォルトの設定ファイルを配置することで、Code of Conduct や Contributing Guide、Issue テンプレート、Pull Request テンプレート、Security Policy などの設定を共通化することができます。]]></summary>
        <content type="html"><![CDATA[<p>GitHub では、Organization または個人用アカウント配下に <code>.github</code> という名前のリポジトリを作成し、その中にデフォルトの設定ファイルを配置することで、Code of Conduct や Contributing Guide、Issue テンプレート、Pull Request テンプレート、Security Policy などの設定を共通化することができます。</p>
<p>本記事では GitHub リポジトリにデフォルトの設定ファイルを追加する方法と、その設定ファイルの内容について説明します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a href="https://ks6088ts.github.io/en/blog/default-community-health-files#tldr" class="hash-link" aria-label="Direct link to TL;DR" title="Direct link to TL;DR">​</a></h2>
<ul>
<li><code>ORGANIZATION/.github</code> という名前のリポジトリを作成し、その中にデフォルトの設定ファイルを配置することで、コントリビューターに対して一貫性のある情報を提供することができます。</li>
<li>デフォルトの設定ファイルは、以下のようなものがあります。<!-- -->
<ul>
<li><code>CODE_OF_CONDUCT.md</code>: 行動規範を記載する</li>
<li><code>CONTRIBUTING.md</code>: コントリビューションのガイドラインを記載する</li>
<li><code>ISSUE_TEMPLATE</code>: Issue のテンプレートを記載する</li>
<li><code>PULL_REQUEST_TEMPLATE</code>: Pull Request のテンプレートを記載する</li>
<li><code>SECURITY.md</code>: セキュリティに関する情報を記載する</li>
</ul>
</li>
<li>実際に設定ファイルを追加したサンプルを以下のリポジトリにて公開しています。
<a href="https://github.com/ks6088ts-labs/.github" target="_blank" rel="noopener noreferrer">https://github.com/ks6088ts-labs/.github</a></li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="default-community-health-files-とは">Default Community Health Files とは<a href="https://ks6088ts.github.io/en/blog/default-community-health-files#default-community-health-files-%E3%81%A8%E3%81%AF" class="hash-link" aria-label="Direct link to Default Community Health Files とは" title="Direct link to Default Community Health Files とは">​</a></h2>
<p>コントリビュートガイドライン、行動規範、Issue テンプレート、Pull Request テンプレート、セキュリティポリシーなどの設定ファイルを Community Health Files と呼びます。
これらのファイルをリポジトリに配置することで、コントリビューターに対して一貫性のある情報を提供することができます。</p>
<p>GitHub では <code>.github</code> という名前のリポジトリを作成し、その中にデフォルトの設定ファイルを配置することでアカウント全体で設定を共通化することができます。
具体的には、<a href="https://docs.github.com/ja/communities/setting-up-your-project-for-healthy-contributions/creating-a-default-community-health-file" target="_blank" rel="noopener noreferrer">既定のコミュニティ正常性ファイルの作成</a> に従って、以下のファイルを配置します。</p>
<p>デフォルトの設定ファイルは、以下のようなものがあります。</p>
<ul>
<li><code>CODE_OF_CONDUCT.md</code>: 行動規範を記載する</li>
<li><code>CONTRIBUTING.md</code>: コントリビューションのガイドラインを記載する</li>
<li><code>ISSUE_TEMPLATE</code>: Issue のテンプレートを記載する</li>
<li><code>PULL_REQUEST_TEMPLATE</code>: Pull Request のテンプレートを記載する</li>
<li><code>SECURITY.md</code>: セキュリティに関する情報を記載する</li>
</ul>
<p>これらのファイルを配置しておくと、別途リポジトリごとに設定ファイルを作成する必要がなくなります。
設定を共通化することで、コントリビューターに対して一貫性のある情報を提供することができます。</p>
<p>なお、リポジトリの <code>.github/ISSUE_TEMPLATE</code> フォルダーにファイルがある場合 (Issue テンプレートや config.yml ファイルを含む)、デフォルトの <code>.github/ISSUE_TEMPLATE</code> フォルダーの内容は使われません。</p>
<p>Community Standards の対応状況は、リポジトリの <code>Insights</code> から確認することができます。
<code>https://github.com/${ORGANIZATION}/${REPOSITORY}/community</code> にアクセスすると、以下のような画面が表示されます。</p>
<p><img decoding="async" loading="lazy" alt="Community Standards" src="https://ks6088ts.github.io/en/assets/images/community_standards-caa675f72e846868db1816b0822644b6.png" width="924" height="749" class="img_ev3q"></p>
<p>コントリビューションのガイドラインや行動規範の作成方法については、<a href="https://opensource.guide/" target="_blank" rel="noopener noreferrer">Open Source Guides</a> に詳細が記載されています。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン-デフォルトの設定ファイルを追加する">ハンズオン: デフォルトの設定ファイルを追加する<a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3-%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to ハンズオン: デフォルトの設定ファイルを追加する" title="Direct link to ハンズオン: デフォルトの設定ファイルを追加する">​</a></h2>
<p>実際に Community Health Files を追加する手順を説明します。
ゼロから始めると結構辛いので、まずは幾つかの OSS プロジェクトを参考にしながら、自分のプロジェクトとの整合性を判断しつつ取り込んでいくと良いと思います。</p>
<p>個人的に参考にしている <code>.github</code> リポジトリは以下の通りです。</p>
<ul>
<li><a href="https://github.com/github/.github" target="_blank" rel="noopener noreferrer">github/.github</a></li>
<li><a href="https://github.com/microsoft/.github" target="_blank" rel="noopener noreferrer">microsoft/.github</a></li>
<li><a href="https://github.com/google/.github" target="_blank" rel="noopener noreferrer">google/.github</a></li>
</ul>
<p>また、参考になる設定ファイルの例として以下のリポジトリがあります。</p>
<ul>
<li><a href="https://github.com/freeCodeCamp/freeCodeCamp" target="_blank" rel="noopener noreferrer">freeCodeCamp/freeCodeCamp</a></li>
<li><a href="https://github.com/microsoft/vscode" target="_blank" rel="noopener noreferrer">microsoft/vscode</a></li>
<li><a href="https://github.com/Azure-Samples/azure-search-openai-demo" target="_blank" rel="noopener noreferrer">Azure-Samples/azure-search-openai-demo</a></li>
</ul>
<p>.github リポジトリを作成した状態で新規のリポジトリを作成すると、デフォルトの設定ファイルが有効になります。
リポジトリ作成者は特に設定ファイルを自分で作成する必要なくプロジェクトを開始することができます。
設定ファイルを追加したサンプルは以下のリポジトリにて公開しています。</p>
<p><a href="https://github.com/ks6088ts-labs/.github" target="_blank" rel="noopener noreferrer">https://github.com/ks6088ts-labs/.github</a></p>
<p>以下では、個々のデフォルトの設定ファイルを追加する手順を説明します。</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="プロジェクトへの行動規範の追加"><a href="https://docs.github.com/ja/communities/setting-up-your-project-for-healthy-contributions/adding-a-code-of-conduct-to-your-project" target="_blank" rel="noopener noreferrer">プロジェクトへの行動規範の追加</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%B8%E3%81%AE%E8%A1%8C%E5%8B%95%E8%A6%8F%E7%AF%84%E3%81%AE%E8%BF%BD%E5%8A%A0" class="hash-link" aria-label="Direct link to プロジェクトへの行動規範の追加" title="Direct link to プロジェクトへの行動規範の追加">​</a></h3>
<p>組織やコミュニティの行動規範をまとめた文書として、<code>.github/CODE_OF_CONDUCT.md</code> ファイルを作成します。
メンバーに対して、期待される行動や倫理、ルールを示し、適切な振る舞いを促すことを目的としています。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/7" target="_blank" rel="noopener noreferrer">add CODE_OF_CONDUCT.md #7</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="リポジトリコントリビューターのためのガイドラインを定める"><a href="https://docs.github.com/ja/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors" target="_blank" rel="noopener noreferrer">リポジトリコントリビューターのためのガイドラインを定める</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AA%E3%83%93%E3%83%A5%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%82%AC%E3%82%A4%E3%83%89%E3%83%A9%E3%82%A4%E3%83%B3%E3%82%92%E5%AE%9A%E3%82%81%E3%82%8B" class="hash-link" aria-label="Direct link to リポジトリコントリビューターのためのガイドラインを定める" title="Direct link to リポジトリコントリビューターのためのガイドラインを定める">​</a></h3>
<p>ソフトウェアプロジェクトにおけるコントリビューター向けのガイドラインを記載したドキュメントとして、<code>.github/CONTRIBUTING.md</code> ファイルを作成します。主にオープンソースプロジェクトで使用されます。このファイルでは、コントリビューターがプロジェクトに貢献する方法や、コードのスタイル、プルリクエストの手順などを説明します。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/8" target="_blank" rel="noopener noreferrer">add CONTRIBUTING.md #8</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="リポジトリへのセキュリティ-ポリシーの追加"><a href="https://docs.github.com/ja/code-security/getting-started/adding-a-security-policy-to-your-repository" target="_blank" rel="noopener noreferrer">リポジトリへのセキュリティ ポリシーの追加</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%B8%E3%81%AE%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3-%E3%83%9D%E3%83%AA%E3%82%B7%E3%83%BC%E3%81%AE%E8%BF%BD%E5%8A%A0" class="hash-link" aria-label="Direct link to リポジトリへのセキュリティ-ポリシーの追加" title="Direct link to リポジトリへのセキュリティ-ポリシーの追加">​</a></h3>
<p>ソフトウェアプロジェクトにおけるセキュリティ関連の情報やガイドラインを記載するためのドキュメントとして、<code>.github/SECURITY.md</code> ファイルを作成します。特に、プロジェクトの利用者や開発者がセキュリティに関する問題を報告したり、対応したりする方法を理解するために使われます。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/9" target="_blank" rel="noopener noreferrer">add SECURITY.md #9</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="リポジトリ用に-issue-テンプレートを設定する"><a href="https://docs.github.com/ja/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository" target="_blank" rel="noopener noreferrer">リポジトリ用に Issue テンプレートを設定する</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E7%94%A8%E3%81%AB-issue-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to リポジトリ用に-issue-テンプレートを設定する" title="Direct link to リポジトリ用に-issue-テンプレートを設定する">​</a></h3>
<p>GitHub リポジトリで課題（Issue）を作成する際に利用者にガイドを提供するためのテンプレートとして <code>ISSUE_TEMPLATE</code> を追加します。これにより、貢献者がプロジェクトに関する問題や提案を適切に記述しやすくなります。テンプレートはプロジェクトの運営者がカスタマイズでき、具体的な情報を得やすくすることで、問題解決の効率を高めます。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/11" target="_blank" rel="noopener noreferrer">Update issue templates #11</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="issue-テンプレート選択画面を設定する"><a href="https://docs.github.com/ja/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#configuring-the-template-chooser" target="_blank" rel="noopener noreferrer">Issue テンプレート選択画面を設定する</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#issue-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E9%81%B8%E6%8A%9E%E7%94%BB%E9%9D%A2%E3%82%92%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to issue-テンプレート選択画面を設定する" title="Direct link to issue-テンプレート選択画面を設定する">​</a></h3>
<p>Issue テンプレート選択画面を設定する <code>config.yml</code> を追加します。このファイルを追加することで、Issue 作成時にテンプレートを選択する画面が表示されます。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/18" target="_blank" rel="noopener noreferrer">add config.yml to configure template chooser #18</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="リポジトリ用のプルリクエストテンプレートの作成"><a href="https://docs.github.com/ja/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository" target="_blank" rel="noopener noreferrer">リポジトリ用のプルリクエストテンプレートの作成</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E7%94%A8%E3%81%AE%E3%83%97%E3%83%AB%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="Direct link to リポジトリ用のプルリクエストテンプレートの作成" title="Direct link to リポジトリ用のプルリクエストテンプレートの作成">​</a></h3>
<p>GitHub リポジトリでプルリクエスト（Pull Request, PR）を作成する際に利用者をガイドするためのテンプレートとして、<code>PULL_REQUEST_TEMPLATE.md</code> を作成します。このテンプレートを用いることで、プルリクエストに必要な情報を明確にし、レビューの効率化やコミュニケーションの円滑化に寄与します。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/12" target="_blank" rel="noopener noreferrer">add PULL_REQUEST_TEMPLATE #12</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="organization-のプロフィールのカスタマイズ"><a href="https://docs.github.com/ja/organizations/collaborating-with-groups-in-organizations/customizing-your-organizations-profile" target="_blank" rel="noopener noreferrer">Organization のプロフィールのカスタマイズ</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#organization-%E3%81%AE%E3%83%97%E3%83%AD%E3%83%95%E3%82%A3%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA" class="hash-link" aria-label="Direct link to organization-のプロフィールのカスタマイズ" title="Direct link to organization-のプロフィールのカスタマイズ">​</a></h3>
<p>Organization のプロフィールをカスタマイズするための <code>README.md</code> を追加します。Organization のプロフィールには、Organization の目的や活動内容、コントリビューションの方法などを記載します。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/15" target="_blank" rel="noopener noreferrer">add organization profile #15</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="コードオーナーについて"><a href="https://docs.github.com/ja/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners" target="_blank" rel="noopener noreferrer">コードオーナーについて</a><a href="https://ks6088ts.github.io/en/blog/default-community-health-files#%E3%82%B3%E3%83%BC%E3%83%89%E3%82%AA%E3%83%BC%E3%83%8A%E3%83%BC%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6" class="hash-link" aria-label="Direct link to コードオーナーについて" title="Direct link to コードオーナーについて">​</a></h3>
<p>コードオーナーを設定するための <code>CODEOWNERS</code> ファイルを追加します。コードオーナーは、リポジトリ内の特定のファイルやディレクトリに対して、コードのレビューやマージを行う責任を持つ人・チームを指定するためのファイルです。</p>
<p>コードオーナーの設定で、Team を指定する場合、ファイルを追加する以外にも、リポジトリのアクセス権限として、<code>Write</code> 以上の権限を持つ Team を指定する必要があります。
<a href="https://shunyaueta.com/posts/2020-09-19/" target="_blank" rel="noopener noreferrer">GitHub codeowners で Github グループを指定しても反映されない時の対処方法</a> が参考になります。</p>
<ul>
<li>参考: <a href="https://github.com/ks6088ts-labs/.github/pull/16" target="_blank" rel="noopener noreferrer">add CODEOWNERS #16</a></li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="github" term="github"/>
        <category label="devops" term="devops"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure 上で作る RAG アプリ開発入門]]></title>
        <id>https://ks6088ts.github.io/en/blog/handson-rag-app</id>
        <link href="https://ks6088ts.github.io/en/blog/handson-rag-app"/>
        <updated>2024-02-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本記事では Azure 上で RAG アプリを開発するにあたり、必要となる関連リソースとして Azure OpenAI Service, Azure AI Search, Bing Search のベーシックな機能を確認します。実際に、Bing Search API や Azure AI Search と連携した小規模な RAG アプリの作成も行います。]]></summary>
        <content type="html"><![CDATA[<p>本記事では Azure 上で RAG アプリを開発するにあたり、必要となる関連リソースとして Azure OpenAI Service, Azure AI Search, Bing Search のベーシックな機能を確認します。実際に、Bing Search API や Azure AI Search と連携した小規模な RAG アプリの作成も行います。</p>
<p>本記事で掲載している Python スクリプトは、以下のリポジトリに配置しています。
<a href="https://github.com/ks6088ts-labs/recipes/blob/main/python/handson_rag_apps/README.md" target="_blank" rel="noopener noreferrer">https://github.com/ks6088ts-labs/recipes/python/handson_rag_apps</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-関連サービスのキャッチアップ方法">Azure 関連サービスのキャッチアップ方法<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-%E9%96%A2%E9%80%A3%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%82%A2%E3%83%83%E3%83%97%E6%96%B9%E6%B3%95" class="hash-link" aria-label="Direct link to Azure 関連サービスのキャッチアップ方法" title="Direct link to Azure 関連サービスのキャッチアップ方法">​</a></h2>
<p>サービスを使いこなしてアプリを開発・リリースするためには、いくつかのステップを踏むことが必要です。
私は以下のステップでサービスのキャッチアップをすることが多いです。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-仕様を理解する">1. 仕様を理解する<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#1-%E4%BB%95%E6%A7%98%E3%82%92%E7%90%86%E8%A7%A3%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 1. 仕様を理解する" title="Direct link to 1. 仕様を理解する">​</a></h3>
<p>Microsoft Azure の AI 関連サービスについては、Microsoft Learn に多くのドキュメントが公開されています。基本的に最初に仕様を理解するためには、公式ドキュメントを読むことが重要です。</p>
<ul>
<li>MS Learn の概要ページ</li>
<li>REST API リファレンス</li>
<li>(詳細の理解が必要な場合) OpenAPI 仕様書</li>
</ul>
<p>が適切な一次情報です。</p>
<p>日本語のドキュメントが古い場合は英語に切り替えるなどして、最新の情報を確認できる場合があります。
Azure の REST API 仕様は <a href="https://github.com/Azure/azure-rest-api-specs" target="_blank" rel="noopener noreferrer">Azure/azure-rest-api-specs</a> で公開されています。
過去の API 仕様からの変遷や、ドキュメントが不足している場合は、OpenAPI 仕様書を確認することで補完できます。API リファレンスでは詳細が書ききれていないこともあるため、必要に応じてこちらのリポジトリを参照すると良いです。</p>
<p>リポジトリの見方ですが、例えば Azure OpenAI Service では、API バージョンごとに仕様は別ファイルとして定義されております。
<code>2023-12-01-preview</code> ですと <a href="https://github.com/Azure/azure-rest-api-specs/blob/main/specification/cognitiveservices/data-plane/AzureOpenAI/inference/preview/2023-12-01-preview/inference.json" target="_blank" rel="noopener noreferrer">specification/cognitiveservices/data-plane/AzureOpenAI/inference/preview/2023-12-01-preview/inference.json</a>で確認できます。</p>
<p><a href="https://petstore.swagger.io/" target="_blank" rel="noopener noreferrer">Swagger UI</a> のデモサイトに Azure OpenAI Service の仕様を読み込ませることで、簡単に API の仕様をグラフィカルに確認できます。
OpenAPI 仕様書の JSON ファイルは GitHub 上で <code>Raw</code> ボタンをクリックすることで取得できます。例えば、<code>https://raw.githubusercontent.com/Azure/azure-rest-api-specs/main/specification/cognitiveservices/data-plane/AzureOpenAI/inference/preview/2023-12-01-preview/inference.json</code> を Swagger UI の <code>Explore</code> ボタンに入力することで、API の仕様を確認できます。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="azure-openai-service-の参考情報">Azure OpenAI Service の参考情報<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-openai-service-%E3%81%AE%E5%8F%82%E8%80%83%E6%83%85%E5%A0%B1" class="hash-link" aria-label="Direct link to Azure OpenAI Service の参考情報" title="Direct link to Azure OpenAI Service の参考情報">​</a></h4>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/overview" target="_blank" rel="noopener noreferrer">Azure OpenAI Service とは</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/reference" target="_blank" rel="noopener noreferrer">Azure OpenAI Service の REST API リファレンス</a></li>
<li><a href="https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cognitiveservices/data-plane/AzureOpenAI" target="_blank" rel="noopener noreferrer">specification/cognitiveservices/data-plane/AzureOpenAI</a></li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="azure-ai-search-の参考情報">Azure AI Search の参考情報<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-ai-search-%E3%81%AE%E5%8F%82%E8%80%83%E6%83%85%E5%A0%B1" class="hash-link" aria-label="Direct link to Azure AI Search の参考情報" title="Direct link to Azure AI Search の参考情報">​</a></h4>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/search/search-what-is-azure-search" target="_blank" rel="noopener noreferrer">Azure AI Search とは</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/rest/api/searchservice/" target="_blank" rel="noopener noreferrer">Azure AI Search REST API リファレンス</a></li>
<li><a href="https://github.com/Azure/azure-rest-api-specs/tree/main/specification/search/data-plane/Azure.Search" target="_blank" rel="noopener noreferrer">specification/search/data-plane/Azure.Search</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-動かしてみる">2. 動かしてみる<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#2-%E5%8B%95%E3%81%8B%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B" class="hash-link" aria-label="Direct link to 2. 動かしてみる" title="Direct link to 2. 動かしてみる">​</a></h3>
<p>MS Learn のドキュメントを見ると、"チュートリアル"や"クイックスタート"があります。これらを実際に動かしてみることで、サービスの動作を理解できます。ドキュメントを読むだけだと想像がつかない場合には、実際に動かしてみることが重要です。</p>
<p>例えば Azure の AI 関連リソースについては以下の情報があります。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="azure-openai-service-の参考情報-1">Azure OpenAI Service の参考情報<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-openai-service-%E3%81%AE%E5%8F%82%E8%80%83%E6%83%85%E5%A0%B1-1" class="hash-link" aria-label="Direct link to Azure OpenAI Service の参考情報" title="Direct link to Azure OpenAI Service の参考情報">​</a></h4>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/tutorials/embeddings?tabs=python%2Ccommand-line&amp;pivots=programming-language-python" target="_blank" rel="noopener noreferrer">チュートリアル: Azure OpenAI Service の埋め込みとドキュメント検索を確認する</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/quickstart?tabs=command-line%2Cpython&amp;pivots=programming-language-studio" target="_blank" rel="noopener noreferrer">クイック スタート: Azure OpenAI Service を使用してテキストの生成を開始する</a></li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="azure-ai-search-の参考情報-1">Azure AI Search の参考情報<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-ai-search-%E3%81%AE%E5%8F%82%E8%80%83%E6%83%85%E5%A0%B1-1" class="hash-link" aria-label="Direct link to Azure AI Search の参考情報" title="Direct link to Azure AI Search の参考情報">​</a></h4>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/search/tutorial-python-overview" target="_blank" rel="noopener noreferrer">1 - Python による Web サイトへの検索の追加の概要</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/search/search-get-started-retrieval-augmented-generation" target="_blank" rel="noopener noreferrer">クイックスタート: Azure OpenAI Studio で検索インデックスとチャットする</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-アプリを作る">3. アプリを作る<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#3-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%82%8B" class="hash-link" aria-label="Direct link to 3. アプリを作る" title="Direct link to 3. アプリを作る">​</a></h3>
<p>SDK 付属のサンプルコードは、各種機能を説明的かつシンプルに実装している場合が多く、非常に参考になります。以下は Python SDK のサンプルの参照リンクです。</p>
<ul>
<li><a href="https://github.com/openai/openai-python" target="_blank" rel="noopener noreferrer">openai/openai-python</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/search/samples-python" target="_blank" rel="noopener noreferrer">Azure AI Search の Python サンプル</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-openai-service-のハンズオン">Azure OpenAI Service のハンズオン<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-openai-service-%E3%81%AE%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to Azure OpenAI Service のハンズオン" title="Direct link to Azure OpenAI Service のハンズオン">​</a></h2>
<p>外部仕様が確認できたら、なるべくライブラリ等の依存関係が無い状態で素の HTTP リクエストを発行して動作確認すると理解が深まります。
ここでは curl コマンドを使って API を叩いてみます。</p>
<p>curl だけだと複雑なリクエストを送るのに手間がかかるため、OpenAI 社が提供する Python ライブラリ <a href="https://github.com/openai/openai-python" target="_blank" rel="noopener noreferrer">openai/openai-python</a> を使って、Python から Azure OpenAI Service を利用する方法も紹介します。</p>
<p><a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/how-to/switching-endpoints" target="_blank" rel="noopener noreferrer">Python を使用して OpenAI エンドポイントと Azure OpenAI エンドポイントを切り替える方法</a>を参考に、以下のプログラムを実行することで、Azure OpenAI Service を利用できます。</p>
<p>ここでは、以下 4 つのユースケースについて、curl コマンドと Python プログラムを使って Azure OpenAI Service を利用する方法を紹介します。</p>
<ol>
<li>シンプルな Chat Completions API 呼び出し</li>
<li>Functions を利用した Chat Completions API 呼び出し (非推奨)</li>
<li>Tools を利用した Chat Completions API 呼び出し (推奨)</li>
<li>JSON mode を利用した Chat Completions API 呼び出し</li>
</ol>
<p>Functions は非推奨となり、代わりに tools を利用することが推奨されていますが、Tools を利用した並列関数呼び出しがサポートされるモデル・API バージョンは<a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/how-to/function-calling?tabs=python" target="_blank" rel="noopener noreferrer">Azure OpenAI Service (プレビュー) で関数呼び出しを使用する方法</a>のとおり比較的新しいものに限定されるため、非推奨の functions を利用した例も併せて紹介しております。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-シンプルな-chat-completions-api-呼び出し">1. シンプルな Chat Completions API 呼び出し<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#1-%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%81%AA-chat-completions-api-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97" class="hash-link" aria-label="Direct link to 1. シンプルな Chat Completions API 呼び出し" title="Direct link to 1. シンプルな Chat Completions API 呼び出し">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="curl-版">curl 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#curl-%E7%89%88" class="hash-link" aria-label="Direct link to curl 版" title="Direct link to curl 版">​</a></h4>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AOAI_NAME="your-aoai-name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_DEPLOYMENT_ID="your-deployment-id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_API_KEY="your-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ curl -X 'POST' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "https://$YOUR_AOAI_NAME.openai.azure.com/openai/deployments/$YOUR_DEPLOYMENT_ID/chat/completions?api-version=2023-12-01-preview" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H "api-key: $YOUR_API_KEY" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -d '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "messages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "user", "content": "What is the weather like in Boston and New York?"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }' | jq -r .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 Dload  Upload   Total   Spent    Left  Speed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">100  1141  100  1018  100   123    721     87  0:00:01  0:00:01 --:--:--   808</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "id": "chatcmpl-8p6zGrVKz9baniwtCzlrYuU4dya57",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "object": "chat.completion",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "created": 1707192278,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "model": "gpt-35-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "prompt_filter_results": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "prompt_index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "choices": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "finish_reason": "stop",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "message": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "role": "assistant",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "content": "As an AI, I cannot provide real-time weather updates. However, you can easily check the current weather in Boston and New York by using a weather app, checking a weather website, or asking a virtual assistant like Siri or Alexa."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "usage": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "prompt_tokens": 18,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "completion_tokens": 47,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "total_tokens": 65</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "system_fingerprint": "fp_68a7d165bf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Azure OpenAI Service の Chat Completions API には逐次部分的にレスポンスを返す stream mode があります。チャット UI などリアルタイム性を要求するアプリにはこちらが有効です。stream をオンにしてリクエストを投げると以下のような挙動になります。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ curl -X 'POST' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "https://$YOUR_AOAI_NAME.openai.azure.com/openai/deployments/$YOUR_DEPLOYMENT_ID/chat/completions?api-version=2023-12-01-preview" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H "api-key: $YOUR_API_KEY" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -d '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "messages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "user", "content": "What is the weather like in Boston and New York?"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "stream": true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"","object":"","created":0,"model":"","prompt_filter_results":[{"prompt_index":0,"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"choices":[]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"role":"assistant"},"content_filter_results":{}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"content":"As"},"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"content":" of"},"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"content":" now"},"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"content":","},"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"content":" winds"},"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":null,"index":0,"delta":{"content":"."},"content_filter_results":{"hate":{"filtered":false,"severity":"safe"},"self_harm":{"filtered":false,"severity":"safe"},"sexual":{"filtered":false,"severity":"safe"},"violence":{"filtered":false,"severity":"safe"}}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: {"id":"chatcmpl-8uw19bQk3hDKNIlwyK5md5wkLdBgA","object":"chat.completion.chunk","created":1708580079,"model":"gpt-35-turbo","choices":[{"finish_reason":"stop","index":0,"delta":{},"content_filter_results":{}}],"system_fingerprint":"fp_68a7d165bf"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data: [DONE]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="python-版">Python 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#python-%E7%89%88" class="hash-link" aria-label="Direct link to Python 版" title="Direct link to Python 版">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">aoai.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> openai </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AzureOpenAI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AzureOpenAI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_version</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"2023-12-01-preview"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    azure_endpoint</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_AOAI_ENDPOINT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chat_completion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">chat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">completions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    model</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"What is the weather like in Boston and New York?"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chat_completion</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実行結果は以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ python aoai.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ChatCompletion(id='chatcmpl-8p74TiwwCMW4aLHsDK0Q1bujqYARa', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='The current weather in Boston is 57°F with overcast skies. In New York, the temperature is 61°F with cloudy skies.', role='assistant', function_call=None, tool_calls=None), content_filter_results={'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}})], created=1707192601, model='gpt-35-turbo', object='chat.completion', system_fingerprint='fp_68a7d165bf', usage=CompletionUsage(completion_tokens=28, prompt_tokens=18, total_tokens=46), prompt_filter_results=[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}])</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-functions-を利用した-chat-completions-api-呼び出し-非推奨">2. Functions を利用した Chat Completions API 呼び出し (非推奨)<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#2-functions-%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%9F-chat-completions-api-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97-%E9%9D%9E%E6%8E%A8%E5%A5%A8" class="hash-link" aria-label="Direct link to 2. Functions を利用した Chat Completions API 呼び出し (非推奨)" title="Direct link to 2. Functions を利用した Chat Completions API 呼び出し (非推奨)">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="curl-版-1">curl 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#curl-%E7%89%88-1" class="hash-link" aria-label="Direct link to curl 版" title="Direct link to curl 版">​</a></h4>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AOAI_NAME="your-aoai-name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_DEPLOYMENT_ID="your-deployment-id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_API_KEY="your-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ curl -X 'POST' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "https://$YOUR_AOAI_NAME.openai.azure.com/openai/deployments/$YOUR_DEPLOYMENT_ID/chat/completions?api-version=2023-12-01-preview" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H "api-key: $YOUR_API_KEY" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -d '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "messages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "user", "content": "What is the weather like in Boston and New York?"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "functions": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "description": "Get the current weather in a given location",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "parameters": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "object",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "location": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "type": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "description": "The city and state, e.g. San Francisco, CA"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "unit": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "type": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "enum": ["celsius", "fahrenheit"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "required": ["location"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }' | jq -r .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 Dload  Upload   Total   Spent    Left  Speed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">100  1405  100   692  100   713    612    631  0:00:01  0:00:01 --:--:--  1244</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "id": "chatcmpl-8p6vmJOIC42rotQPE00q3qlKbbVn4",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "object": "chat.completion",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "created": 1707192062,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "model": "gpt-35-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "prompt_filter_results": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "prompt_index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "choices": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "finish_reason": "function_call",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "message": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "role": "assistant",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "function_call": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "arguments": "{\"location\":\"Boston, MA\"}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "usage": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "prompt_tokens": 85,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "completion_tokens": 17,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "total_tokens": 102</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "system_fingerprint": "fp_68a7d165bf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="python-版-1">Python 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#python-%E7%89%88-1" class="hash-link" aria-label="Direct link to Python 版" title="Direct link to Python 版">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">aoai_functions.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> openai </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AzureOpenAI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AzureOpenAI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_version</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"2023-12-01-preview"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    azure_endpoint</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_AOAI_ENDPOINT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">functions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">functions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"get_current_weather"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"description"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Get the current weather in a given location"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"parameters"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"object"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"properties"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"description"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"The city and state, e.g. San Francisco, CA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"unit"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"enum"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"celsius"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fahrenheit"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"required"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chat_completion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">chat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">completions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    model</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"What is the weather like in Boston and New York?"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    functions</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">functions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chat_completion</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実行結果は以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ python aoai_functions.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ChatCompletion(id='chatcmpl-8p78fyrbkZLx2cOZxEeZeQqWA2FJT', choices=[Choice(finish_reason='function_call', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', function_call=FunctionCall(arguments='{"location":"Boston, MA"}', name='get_current_weather'), tool_calls=None), content_filter_results={})], created=1707192861, model='gpt-35-turbo', object='chat.completion', system_fingerprint='fp_68a7d165bf', usage=CompletionUsage(completion_tokens=17, prompt_tokens=85, total_tokens=102), prompt_filter_results=[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}])</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-tools-を利用した-chat-completions-api-呼び出し-推奨">3. Tools を利用した Chat Completions API 呼び出し (推奨)<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#3-tools-%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%9F-chat-completions-api-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97-%E6%8E%A8%E5%A5%A8" class="hash-link" aria-label="Direct link to 3. Tools を利用した Chat Completions API 呼び出し (推奨)" title="Direct link to 3. Tools を利用した Chat Completions API 呼び出し (推奨)">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="curl-版-2">curl 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#curl-%E7%89%88-2" class="hash-link" aria-label="Direct link to curl 版" title="Direct link to curl 版">​</a></h4>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AOAI_NAME="your-aoai-name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_DEPLOYMENT_ID="your-deployment-id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_API_KEY="your-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ curl -X 'POST' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "https://$YOUR_AOAI_NAME.openai.azure.com/openai/deployments/$YOUR_DEPLOYMENT_ID/chat/completions?api-version=2023-12-01-preview" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H "api-key: $YOUR_API_KEY" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -d '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "messages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "user", "content": "What is the weather like in Boston and New York?"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "tools": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "type": "function",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "function": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "description": "Get the current weather in a given location",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "parameters": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "type": "object",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "location": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  "type": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  "description": "The city and state, e.g. San Francisco, CA"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "unit": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  "type": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  "enum": ["celsius", "fahrenheit"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "required": ["location"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }' | jq -r .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 Dload  Upload   Total   Spent    Left  Speed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">100  1748  100   941  100   807    754    646  0:00:01  0:00:01 --:--:--  1401</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "id": "chatcmpl-8p6wgRFekQXcrd1dfDs8qxD4D7GFw",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "object": "chat.completion",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "created": 1707192118,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "model": "gpt-35-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "prompt_filter_results": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "prompt_index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "choices": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "finish_reason": "tool_calls",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "message": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "role": "assistant",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "tool_calls": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "id": "call_vhjgnb3JxWZH8lwKkxAHKAIg",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "function",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "function": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "arguments": "{\"location\": \"Boston\", \"unit\": \"celsius\"}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "id": "call_iS1plHIkgjE87DveKHMaWi8V",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "function",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "function": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              "arguments": "{\"location\": \"New York\", \"unit\": \"celsius\"}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "usage": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "prompt_tokens": 85,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "completion_tokens": 56,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "total_tokens": 141</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "system_fingerprint": "fp_68a7d165bf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="python-版-2">Python 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#python-%E7%89%88-2" class="hash-link" aria-label="Direct link to Python 版" title="Direct link to Python 版">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">aoai_tools.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> openai </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AzureOpenAI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AzureOpenAI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_version</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"2023-12-01-preview"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    azure_endpoint</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_AOAI_ENDPOINT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tools </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tools</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"function"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"function"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"get_current_weather"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"description"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Get the current weather in a given location"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"parameters"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"object"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"properties"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"description"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"The city and state, e.g. San Francisco, CA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"unit"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"enum"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"celsius"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fahrenheit"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"required"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chat_completion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">chat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">completions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    model</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"What is the weather like in Boston and New York?"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tools</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">tools</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chat_completion</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実行結果は以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ python aoai_tools.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ChatCompletion(id='chatcmpl-8p7Bf2YPutAOCQsGZtrWsBC6fksEq', choices=[Choice(finish_reason='tool_calls', index=0, logprobs=None, message=ChatCompletionMessage(content=None, role='assistant', function_call=None, tool_calls=[ChatCompletionMessageToolCall(id='call_zjvQkpjG6VNvOuIqahk7Izzo', function=Function(arguments='{"location": "Boston", "unit": "celsius"}', name='get_current_weather'), type='function'), ChatCompletionMessageToolCall(id='call_myRctsQpRHmrwsnF5u1HUwxn', function=Function(arguments='{"location": "New York", "unit": "celsius"}', name='get_current_weather'), type='function')]), content_filter_results={})], created=1707193047, model='gpt-35-turbo', object='chat.completion', system_fingerprint='fp_68a7d165bf', usage=CompletionUsage(completion_tokens=56, prompt_tokens=85, total_tokens=141), prompt_filter_results=[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}])</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-json-mode-を利用した-chat-completions-api-呼び出し">4. JSON mode を利用した Chat Completions API 呼び出し<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#4-json-mode-%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%9F-chat-completions-api-%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97" class="hash-link" aria-label="Direct link to 4. JSON mode を利用した Chat Completions API 呼び出し" title="Direct link to 4. JSON mode を利用した Chat Completions API 呼び出し">​</a></h3>
<p><a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/json-mode?tabs=python" target="_blank" rel="noopener noreferrer">Learn how to use JSON mode</a> を参考に JSON モードの Chat Completions API を呼び出します。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="curl-版-3">curl 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#curl-%E7%89%88-3" class="hash-link" aria-label="Direct link to curl 版" title="Direct link to curl 版">​</a></h4>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AOAI_NAME="your-aoai-name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_DEPLOYMENT_ID="your-deployment-id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_API_KEY="your-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ curl -X 'POST' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "https://$YOUR_AOAI_NAME.openai.azure.com/openai/deployments/$YOUR_DEPLOYMENT_ID/chat/completions?api-version=2023-12-01-preview" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H "api-key: $YOUR_API_KEY" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -d '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "response_format": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "json_object"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "messages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "system", "content": "You are a helpful assistant designed to output JSON."},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "user", "content": "What is the weather like in Boston and New York?"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }' | jq -r .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                 Dload  Upload   Total   Spent    Left  Speed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">100  1414  100  1130  100   284    721    181  0:00:01  0:00:01 --:--:--   902</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "id": "chatcmpl-8p7nWSptPghX7ss4ko9AI638VBRIG",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "object": "chat.completion",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "created": 1707195394,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "model": "gpt-35-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "prompt_filter_results": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "prompt_index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "choices": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "finish_reason": "stop",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "message": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "role": "assistant",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "content": "{\n  \"locations\": {\n    \"Boston\": {\n      \"weather\": \"Partly cloudy\",\n      \"temperature\": \"72°F\",\n      \"humidity\": \"56%\",\n      \"wind\": \"10 mph\"\n    },\n    \"New York\": {\n      \"weather\": \"Sunny\",\n      \"temperature\": \"78°F\",\n      \"humidity\": \"50%\",\n      \"wind\": \"8 mph\"\n    }\n  }\n}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "usage": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "prompt_tokens": 32,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "completion_tokens": 87,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "total_tokens": 119</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "system_fingerprint": "fp_68a7d165bf"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="python-版-3">Python 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#python-%E7%89%88-3" class="hash-link" aria-label="Direct link to Python 版" title="Direct link to Python 版">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">aoai_json_mode.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> openai </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AzureOpenAI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AzureOpenAI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    api_version</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"2023-12-01-preview"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    azure_endpoint</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_AOAI_ENDPOINT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chat_completion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">chat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">completions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    model</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response_format</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"json_object"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"system"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"You are a helpful assistant designed to output JSON."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"What is the weather like in Boston and New York?"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chat_completion</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">choices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">content</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実行結果は以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ python aoai_json_mode.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "locations": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Boston": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "weather": "Partly cloudy",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "temperature": "57°F"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "New York": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "weather": "Mostly sunny",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "temperature": "62°F"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="bing-search-api-を使った-rag-の例">Bing Search API を使った RAG の例<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#bing-search-api-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F-rag-%E3%81%AE%E4%BE%8B" class="hash-link" aria-label="Direct link to Bing Search API を使った RAG の例" title="Direct link to Bing Search API を使った RAG の例">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bing-search-api-のハンズオン">Bing Search API のハンズオン<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#bing-search-api-%E3%81%AE%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to Bing Search API のハンズオン" title="Direct link to Bing Search API のハンズオン">​</a></h3>
<p>RAG アプリを作成するために、外部の情報源として Bing Search API を利用します。
Bing Search API の外部仕様は <a href="https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/" target="_blank" rel="noopener noreferrer">Bing Search API documentation</a> で公開されています。</p>
<p><a href="https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/create-bing-search-service-resource" target="_blank" rel="noopener noreferrer">Create Bing Search resource through Azure Marketplace</a> の手順に従い、Azure Portal で <code>Bing Resources</code> を検索し、リソースを作成します。</p>
<p>作成すると API キーが発行されるので、それを利用して Bing Search API を利用できます。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="curl-版-4">curl 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#curl-%E7%89%88-4" class="hash-link" aria-label="Direct link to curl 版" title="Direct link to curl 版">​</a></h4>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_BING_SEARCH_API_KEY="your-bing-search-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">curl "https://api.bing.microsoft.com/v7.0/search?q='Microsoft'" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H "Ocp-Apim-Subscription-Key: $YOUR_BING_SEARCH_API_KEY"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="python-版-4">Python 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#python-%E7%89%88-4" class="hash-link" aria-label="Direct link to Python 版" title="Direct link to Python 版">​</a></h4>
<p><a href="https://learn.microsoft.com/en-us/bing/search-apis/bing-web-search/samples#samples-using-native-http-get-requests" target="_blank" rel="noopener noreferrer">Bing Web Search samples</a> に各種言語のサンプルがあります。ここでは Python の例を示します。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">bing_search.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">subscription_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_BING_SEARCH_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search_url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://api.bing.microsoft.com/v7.0/search"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search_term </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"最新のプリキュアのタイトルを教えて"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">headers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Ocp-Apim-Subscription-Key"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> subscription_key</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">params </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"q"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> search_term</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"textDecorations"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"textFormat"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HTML"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">search_url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> headers</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">raise_for_status</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">search_results </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sources </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> search_result </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> search_results</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"webPages"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"value"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">search_result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\n"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sources</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実行結果は以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ python bing_search.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">新作プリキュアタイトル発表！ 『わんだふるぷりきゅあ！』は ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">プリキュア新作タイトル発表 21作目は『わんだふるぷりきゅあ ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">プリキュア新作タイトル発表 21作目は『わんだふるぷりきゅあ ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">【プリキュア】新シリーズのタイトルは『わんだふる ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">「プリキュア」第19弾タイトルが「デリシャスパーティ ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">プリキュア第21弾タイトル「わんだふるぷりきゅあ！」に決定 ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">「プリキュア」新作タイトルは「わんだふるぷりきゅあ！」初 ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">プリキュアシリーズ最新作『デリシャスパーティ♡プリキュア ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">プリキュア新作、タイトル発表 シリーズ第19弾は『デリシャス ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">「プリキュア」新作タイトルは「わんだふるぷりきゅあ！」初 ...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rag-アプリの作成">RAG アプリの作成<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#rag-%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="Direct link to RAG アプリの作成" title="Direct link to RAG アプリの作成">​</a></h3>
<p>Azure OpenAI Service と Bing Search API を利用して、RAG アプリを作成します。
curl でも実装は可能ですが、コードが複雑になるためここでは Python で実装した例のみ紹介します。
以下のプログラムは、Bing Search API を利用して検索結果を取得し、それを Azure OpenAI Service に渡して回答を取得するプログラムです。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">rag_bing.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> openai </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AzureOpenAI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> requests</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_sources_string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">search_term</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Bing Search APIを使って検索結果のソースを取得する"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    subscription_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_BING_SEARCH_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    search_url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://api.bing.microsoft.com/v7.0/search"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    headers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"Ocp-Apim-Subscription-Key"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> subscription_key</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    params </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"q"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> search_term</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"textDecorations"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"textFormat"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"HTML"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> requests</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">search_url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> headers</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">raise_for_status</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    search_results </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sources </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> search_result </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> search_results</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"webPages"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"value"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sources</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">search_result</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"\n"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sources</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_response_with_sources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sources_str</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Azure OpenAI を使ってボットの回答を取得する"""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> AzureOpenAI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        api_key</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        api_version</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"2023-12-01-preview"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        azure_endpoint</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"YOUR_AOAI_ENDPOINT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"system"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"あなたは優秀なヘルプデスクボットです。"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> search_term</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"system"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:#e3116c">f"Sources: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">sources_str</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    chat_completion </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">chat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">completions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        model</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        messages</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">messages</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> chat_completion</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">choices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">content</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"__main__"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    search_term </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"最新のプリキュアのタイトルを教えて"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sources_str </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_sources_string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">search_term</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> get_response_with_sources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sources_str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"ボットの回答: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">response</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>実行結果は以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ python rag_bing.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ボットの回答: 最新のプリキュアシリーズのタイトルは『わんだふるぷりきゅあ！』です。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Bing Search の最新の検索結果を Azure OpenAI Service に渡して回答を取得できました。
2024/02 現在放送中のプリキュアシリーズは<a href="https://ja.wikipedia.org/wiki/%E3%82%8F%E3%82%93%E3%81%A0%E3%81%B5%E3%82%8B%E3%81%B7%E3%82%8A%E3%81%8D%E3%82%85%E3%81%82!" target="_blank" rel="noopener noreferrer">『わんだふるぷりきゅあ！』</a>ですので正しく回答が生成できています。</p>
<p>Bing Search API の結果の中に、<a href="https://ja.wikipedia.org/wiki/%E3%83%87%E3%83%AA%E3%82%B7%E3%83%A3%E3%82%B9%E3%83%91%E3%83%BC%E3%83%86%E3%82%A3%E2%99%A1%E3%83%97%E3%83%AA%E3%82%AD%E3%83%A5%E3%82%A2" target="_blank" rel="noopener noreferrer">デリシャスパーティプリキュア</a> も入っていましたが、21 作目と 19 作目という情報が入っていたため、Azure OpenAI Service にて正しい回答が生成できたと考えられます。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-ai-search-を使った-rag-の例">Azure AI Search を使った RAG の例<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-ai-search-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F-rag-%E3%81%AE%E4%BE%8B" class="hash-link" aria-label="Direct link to Azure AI Search を使った RAG の例" title="Direct link to Azure AI Search を使った RAG の例">​</a></h2>
<p>Azure AI Search の利用方法について参考情報を以下に示します。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/rest/api/searchservice/?view=rest-searchservice-2023-11-01" target="_blank" rel="noopener noreferrer">Azure AI Search REST API リファレンス</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/rest/api/searchservice/search-service-api-versions" target="_blank" rel="noopener noreferrer">REST API バージョン (Azure AI Search)</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/rest/api/searchservice/operation-groups?view=rest-searchservice-2023-11-01" target="_blank" rel="noopener noreferrer">Azure AI Search の各種操作</a></li>
<li><a href="https://github.com/Azure/azure-rest-api-specs/tree/master/specification/search/data-plane/Azure.Search" target="_blank" rel="noopener noreferrer">OpenAPI specification: Azure/azure-rest-api-specs</a></li>
<li><a href="https://github.com/Azure/azure-sdk-for-python/tree/main/sdk/search/azure-search-documents/samples" target="_blank" rel="noopener noreferrer">SDK サンプルコード / Samples for Azure Cognitive Search client library for Python</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-ai-search-のハンズオン">Azure AI Search のハンズオン<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-ai-search-%E3%81%AE%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to Azure AI Search のハンズオン" title="Direct link to Azure AI Search のハンズオン">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/search/search-create-service-portal" target="_blank" rel="noopener noreferrer">ポータルで Azure AI Search サービスを作成する</a> を参考に、Azure Portal で Azure AI Search サービスを作成します。<br>
<!-- -->Azure AI Search でベクトル検索を利用するためには、別途 Azure OpenAI Service のリソースも必要です。<a href="https://learn.microsoft.com/ja-JP/azure/ai-services/openai/how-to/create-resource?pivots=web-portal" target="_blank" rel="noopener noreferrer">Azure OpenAI Service リソースを作成してデプロイする</a>を参考にデプロイします。</p>
<p><a href="https://github.com/ks6088ts-labs/recipes/tree/main/python/azure_ai_search_client" target="_blank" rel="noopener noreferrer">python/azure_ai_search_client</a> に全体の実装例を掲載しています。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="curl-版-5">curl 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#curl-%E7%89%88-5" class="hash-link" aria-label="Direct link to curl 版" title="Direct link to curl 版">​</a></h4>
<p><a href="https://learn.microsoft.com/ja-jp/rest/api/searchservice/operation-groups?view=rest-searchservice-2023-11-01" target="_blank" rel="noopener noreferrer">API リファレンス / データ プレーン</a> 以下に各種操作の API とその実行例があります。</p>
<table><thead><tr><th>API</th><th>説明</th></tr></thead><tbody><tr><td><a href="https://learn.microsoft.com/en-us/rest/api/searchservice/indexes/create?view=rest-searchservice-2023-11-01&amp;tabs=HTTP" target="_blank" rel="noopener noreferrer">Indexes - Create</a></td><td>インデックスの作成</td></tr><tr><td><a href="https://learn.microsoft.com/en-us/rest/api/searchservice/addupdate-or-delete-documents" target="_blank" rel="noopener noreferrer">Add, Update or Delete Documents (Azure AI Search REST API)</a></td><td>ドキュメントの登録</td></tr><tr><td><a href="https://learn.microsoft.com/en-us/rest/api/searchservice/documents/search-post?view=rest-searchservice-2023-11-01&amp;tabs=HTTP" target="_blank" rel="noopener noreferrer">Documents - Search Post</a></td><td>インデックス上にあるドキュメントの検索</td></tr></tbody></table>
<p><a href="https://github.com/ks6088ts-labs/cogsearchctl/tree/main/examples" target="_blank" rel="noopener noreferrer">ks6088ts-labs/cogsearchctl</a> に配置されたサンプル用 json ファイルを使って以下の通り実行します。<br>
<!-- -->json フォーマットのリクエストを送信するため、<code>-d @examples/create_index.json</code> のように <code>-d</code> オプションを使ってリクエストボディを指定します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AZURE_AI_SEARCH_ENDPOINT="https://youar-azure-ai-search-name.search.windows.net"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AZURE_AI_SEARCH_API_KEY="your-azure-ai-search-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">YOUR_AZURE_AI_SEARCH_INDEX_NAME="your-azure-ai-search-index-name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># インデックスの作成</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">curl -X PUT "$YOUR_AZURE_AI_SEARCH_ENDPOINT/indexes/$YOUR_AZURE_AI_SEARCH_INDEX_NAME?api-version=2023-11-01" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H "Content-Type: application/json" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H "api-key: $YOUR_AZURE_AI_SEARCH_API_KEY" -d @examples/create_index.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ cat examples/create_index.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "fields": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "content",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "type": "Edm.String",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "facetable": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "filterable": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "key": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "retrievable": true,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "suggesters": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "sg1",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "searchMode": "analyzingInfixMatching",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "sourceFields": ["merged_content"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "scoringProfiles": [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "defaultScoringProfile": "",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "corsOptions": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "allowedOrigins": ["*"],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "maxAgeInSeconds": null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "analyzers": [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "charFilters": [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "tokenFilters": [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "tokenizers": [],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "similarity": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "@odata.type": "#Microsoft.Azure.Search.BM25Similarity",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "k1": null,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "b": null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="python-版-5">Python 版<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#python-%E7%89%88-5" class="hash-link" aria-label="Direct link to Python 版" title="Direct link to Python 版">​</a></h4>
<p><a href="https://github.com/ks6088ts-labs/recipes/blob/main/python/handson_rag_apps/scripts/azure_ai_search.py" target="_blank" rel="noopener noreferrer">recipes/python/handson_rag_apps/scripts
/azure_ai_search.py</a> にサンプルコードを掲載しています。<br>
<!-- -->インデックスの作成、ドキュメントの登録、検索の 3 つの操作を実施する CLI プログラムです。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-portal-から検索する方法">Azure Portal から検索する方法<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#azure-portal-%E3%81%8B%E3%82%89%E6%A4%9C%E7%B4%A2%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95" class="hash-link" aria-label="Direct link to Azure Portal から検索する方法" title="Direct link to Azure Portal から検索する方法">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/search/search-explorer" target="_blank" rel="noopener noreferrer">クイック スタート: Search エクスプローラーを使用して Azure portal でクエリを実行する</a> を参考に、Azure Portal から Azure AI Search を利用します。
呼び出している API は <a href="https://learn.microsoft.com/ja-jp/rest/api/searchservice/documents/search-post?view=rest-searchservice-2023-11-01&amp;tabs=HTTP" target="_blank" rel="noopener noreferrer">Documents - Search Post</a> となります。</p>
<p>例えば<a href="https://learn.microsoft.com/ja-jp/azure/search/search-explorer#limit-fields-in-search-results" target="_blank" rel="noopener noreferrer">検索結果内のフィールドを制限</a>したい場合、<code>select</code> を利用します。ベクトル検索利用時に embedding フィールドがあると見通しが悪い時などに利用することが多いです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   "search": "*",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   "select": "content, id, category, sourcefile, sourcepage"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="rag-のプログラムに-azure-ai-search-を組み込む">RAG のプログラムに Azure AI Search を組み込む<a href="https://ks6088ts.github.io/en/blog/handson-rag-app#rag-%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AB-azure-ai-search-%E3%82%92%E7%B5%84%E3%81%BF%E8%BE%BC%E3%82%80" class="hash-link" aria-label="Direct link to RAG のプログラムに Azure AI Search を組み込む" title="Direct link to RAG のプログラムに Azure AI Search を組み込む">​</a></h3>
<p>Azure AI Search を利用して RAG アプリを作成します。
RAG のデータソースを取得する箇所が Azure AI Search で置き換わっただけで、その他の処理は変更がありません。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@app.command()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">def rag(query_text="河原町さんの好きなスポーツは何ですか？"):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    index_name = get_index_name()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    documents = asyncio.run(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        search_impl(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            query_text=query_text,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            index_name=index_name,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sources = []</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for document in documents:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        sources.append(document["content"])</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sources_str = "\n".join(sources)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    client = get_azure_openai_client()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "system", "content": "あなたは優秀なヘルプデスクボットです。"},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {"role": "user", "content": query_text},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    messages.append({"role": "system", "content": f"Sources: {sources_str}"})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    chat_completion = client.chat.completions.create(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        model=os.getenv("azure_deployment_gpt"),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        messages=messages,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    print(chat_completion.choices[0].message.content)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><a href="https://github.com/ks6088ts-labs/recipes/blob/main/python/handson_rag_apps/README.md#rag-1" target="_blank" rel="noopener noreferrer">Azure AI Search / RAG</a> に実行例がありますが、注目すべき点は Azure AI Search で取得した知識を元に自然な回答が生成されていることです。
Azure AI Search に登録されていない知識に関しては正しく回答できないため、データソースの充実が重要です。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="app-service" term="app-service"/>
        <category label="azure-openai-service" term="azure-openai-service"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Microsoft Graph API 関連情報のまとめ]]></title>
        <id>https://ks6088ts.github.io/en/blog/graph-api-summary</id>
        <link href="https://ks6088ts.github.io/en/blog/graph-api-summary"/>
        <updated>2024-01-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Microsoft Graph API を触る必要が出てきたので、関連情報をまとめておきます。]]></summary>
        <content type="html"><![CDATA[<p>Microsoft Graph API を触る必要が出てきたので、関連情報をまとめておきます。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要を把握する">概要を把握する<a href="https://ks6088ts.github.io/en/blog/graph-api-summary#%E6%A6%82%E8%A6%81%E3%82%92%E6%8A%8A%E6%8F%A1%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 概要を把握する" title="Direct link to 概要を把握する">​</a></h2>
<p><a href="https://learn.microsoft.com/ja-jp/training/modules/msgraph-intro-overview/" target="_blank" rel="noopener noreferrer">MS Learn / Microsoft Graph とは</a> で Microsoft Graph API の概要が説明されています。
Microsoft Graph API の概要や、Microsoft Graph API を使うために必要なアプリの登録の手順などが説明されています。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="使ってみる">使ってみる<a href="https://ks6088ts.github.io/en/blog/graph-api-summary#%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B" class="hash-link" aria-label="Direct link to 使ってみる" title="Direct link to 使ってみる">​</a></h2>
<p>ある程度概要が理解出来たら <a href="https://developer.microsoft.com/en-us/graph/graph-explorer" target="_blank" rel="noopener noreferrer">Graph Explorer</a> で実際に Microsoft Graph API を試してみます。
Graph Explorer は、ブラウザから Graph API を実行して簡単に試すことができるツールです。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="アプリの登録">アプリの登録<a href="https://ks6088ts.github.io/en/blog/graph-api-summary#%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E7%99%BB%E9%8C%B2" class="hash-link" aria-label="Direct link to アプリの登録" title="Direct link to アプリの登録">​</a></h2>
<p>開発者向けの情報は <a href="https://learn.microsoft.com/ja-jp/graph/" target="_blank" rel="noopener noreferrer">Microsoft Graph ドキュメント</a> や <a href="https://developer.microsoft.com/en-us/graph#get-started" target="_blank" rel="noopener noreferrer">Microsoft Developer/ Microsoft Graph</a> にまとまっています。Microsoft Graph API の概要、チュートリアル、リファレンス、サンプルなどを辿ることができます。</p>
<p><a href="https://learn.microsoft.com/ja-jp/training/modules/msgraph-javascript-app/3-understand-permissions" target="_blank" rel="noopener noreferrer">Microsoft Graph のアクセス許可と同意を理解する</a> では、Microsoft Graph API を使うために必要なアプリの登録の手順が説明されています。アプリの登録は <a href="https://portal.azure.com/" target="_blank" rel="noopener noreferrer">Azure Portal</a> から行います。</p>
<p>API リクエストの外部仕様を理解出来たら、実際に Web アプリケーションを作成します。
<a href="https://learn.microsoft.com/ja-jp/training/paths/m365-msgraph-toolkit/" target="_blank" rel="noopener noreferrer">Microsoft Graph ツールキットを使ってアプリを開発</a> では、Microsoft Graph API を使って Web アプリケーションを作成する方法が説明されています。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="開発">開発<a href="https://ks6088ts.github.io/en/blog/graph-api-summary#%E9%96%8B%E7%99%BA" class="hash-link" aria-label="Direct link to 開発" title="Direct link to 開発">​</a></h2>
<p>Microsoft Graph API には、サービスごとに API 呼び出しの制限があります。<a href="https://learn.microsoft.com/ja-jp/graph/throttling-limits" target="_blank" rel="noopener noreferrer">Microsoft Graph サービス固有の調整制限</a> には、各サービスの制限がまとめられています。Microsoft Graph API を利用する際は、この制限に注意してください。</p>
<p><a href="https://github.com/microsoftgraph/msgraph-metadata" target="_blank" rel="noopener noreferrer">github.com/microsoftgraph/msgraph-metadata</a> には、Microsoft Graph API のメタデータがまとめられています。Microsoft Graph API リファレンスは <a href="https://docs.microsoft.com/en-us/graph/api/overview?view=graph-rest-1.0" target="_blank" rel="noopener noreferrer">Microsoft Graph REST API v1.0 endpoint reference</a> にあります。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考資料">参考資料<a href="https://ks6088ts.github.io/en/blog/graph-api-summary#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99" class="hash-link" aria-label="Direct link to 参考資料" title="Direct link to 参考資料">​</a></h2>
<table><thead><tr><th>タイトル</th><th>ひとこと</th></tr></thead><tbody><tr><td><a href="https://qiita.com/yamad365/items/e480f77e9102b132d258" target="_blank" rel="noopener noreferrer">Microsoft Teams のチーム ID、チャネル ID の確認方法</a></td><td>Graph API で情報が必要になるが、どうやって取得するのかわからないときに参考になった</td></tr><tr><td><a href="https://qiita.com/massie_g/items/fe7540161aa4a5f86bf5" target="_blank" rel="noopener noreferrer">訳あって Microsoft Graph API 調べてみた</a></td><td>Microsoft Graph API の概要と、アプリの登録の一連の流れが明快に説明されていてキャッチアップに使える</td></tr><tr><td><a href="https://www.youtube.com/playlist?list=PL3JVwFmb_BnT9Ti0MMRj5nPF7XoN-4MQx" target="_blank" rel="noopener noreferrer">Microsoft Graph API Tutorial Series</a></td><td>Microsoft Graph API のチュートリアル動画</td></tr><tr><td><a href="https://learn.microsoft.com/ja-jp/graph/tutorials?view=graph-rest-1.0" target="_blank" rel="noopener noreferrer">Microsoft Graph チュートリアル</a></td><td>Microsoft Graph API のチュートリアル</td></tr><tr><td><a href="https://github.com/microsoftgraph" target="_blank" rel="noopener noreferrer">github.com/microsoftgraph</a></td><td>Microsoft Graph 関連の GitHub リポジトリ</td></tr><tr><td><a href="https://amzn.to/48J2DNo" target="_blank" rel="noopener noreferrer">ひと目でわかる Microsoft Entra ID</a></td><td>第 12 章 Microsoft Entra ID のアプリケーション統合が参考になる</td></tr></tbody></table>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="microsoft-graph" term="microsoft-graph"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[AOAI にプライベートエンドポイントから接続し、VM のマネージド ID を利用して API Key 無しで AOAI を呼び出す]]></title>
        <id>https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id</id>
        <link href="https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id"/>
        <updated>2023-11-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本記事では以下の 2 つのシナリオをハンズオン形式で説明します。]]></summary>
        <content type="html"><![CDATA[<p>本記事では以下の 2 つのシナリオをハンズオン形式で説明します。</p>
<ol>
<li>AOAI にプライベートエンドポイントから接続する方法</li>
<li>VM のマネージド ID を利用して API Key 無しで AOAI を呼び出す方法</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="開発環境の準備">開発環境の準備<a href="https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E6%BA%96%E5%82%99" class="hash-link" aria-label="Direct link to 開発環境の準備" title="Direct link to 開発環境の準備">​</a></h2>
<p>ハンズオンを始める前に、お使いの開発マシンに次の環境を準備します。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/cli/azure/install-azure-cli" target="_blank" rel="noopener noreferrer">Azure CLI</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/azure-resource-manager/bicep/install#azure-cli" target="_blank" rel="noopener noreferrer">Bicep</a></li>
<li><a href="https://www.gnu.org/software/make/" target="_blank" rel="noopener noreferrer">GNU Make</a></li>
</ul>
<p>以下の環境で動作確認しました。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ az version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "azure-cli": "2.51.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "azure-cli-core": "2.51.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "azure-cli-telemetry": "1.1.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "extensions": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "azure-iot": "0.22.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "containerapp": "0.3.41"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ az bicep version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Bicep CLI version 0.22.6 (d62b94db31)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>本ハンズオンでは Azure OpenAI Service にプライベートエンドポイントから接続する動作確認を VM から行います。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="事前準備">事前準備<a href="https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99" class="hash-link" aria-label="Direct link to 事前準備" title="Direct link to 事前準備">​</a></h2>
<p>リポジトリをクローンして <code>infra/</code> に移動します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># clone repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/ks6088ts-labs/baseline-environment-on-azure-bicep.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd baseline-environment-on-azure-bicep/infra</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>シナリオごとにディレクトリが分けられているため、以下のコマンドで各シナリオのテンプレートをデプロイできます。<br>
<!-- -->本記事では example シナリオを使って説明します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># deploy example resource</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make deployment-create SCENARIO=example</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>(FIXME: デフォルトだと関係のない不要なリソースもデプロイされてしまいます。必要に応じて .bicepparam のフラグ設定を書き換えてください。今回は説明のため全部デプロイしています。)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-aoai-にプライベートエンドポイントから接続する方法">1. AOAI にプライベートエンドポイントから接続する方法<a href="https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id#1-aoai-%E3%81%AB%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%8B%E3%82%89%E6%8E%A5%E7%B6%9A%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95" class="hash-link" aria-label="Direct link to 1. AOAI にプライベートエンドポイントから接続する方法" title="Direct link to 1. AOAI にプライベートエンドポイントから接続する方法">​</a></h2>
<p>Azure Portal からの操作方法は <a href="https://blog.jbs.co.jp/entry/2023/04/07/173940" target="_blank" rel="noopener noreferrer">Azure OpenAI にプライベートエンドポイント（Private Endpoint）を設定して東日本リージョンの仮想ネットワークのみから使う</a> が詳しいです。<br>
<!-- -->今回は Azure Portal ではなく IaC スクリプトにてインフラは構築済です。Private Endpoint 接続に関連するリソースは、<a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-bicep/blob/main/infra/modules/virtualNetwork.bicep" target="_blank" rel="noopener noreferrer">baseline-environment-on-azure-bicep/infra/modules/virtualNetwork.bicep</a> の <code>openAiPrivateDnsZone </code>, <code>openAiPrivateDnsZoneVirtualNetworkLink</code>, <code>openAiPrivateEndpoint</code>, <code>openAiPrivateDnsZoneGroupName</code> が該当します。</p>
<p>こちらの環境で VM に SSH でログインして Azure OpenAI Service にプライベートエンドポイントから接続出来ていることを確認します。<br>
<!-- -->以下のように <code>nslookup</code> の結果を見るとプライベートアドレスが返ってきます。<br>
<!-- -->ref. <a href="https://zenn.dev/microsoft/articles/198989f60eba61#vm%E3%81%B8rdp%E6%8E%A5%E7%B6%9A" target="_blank" rel="noopener noreferrer">Azure OpenAI Service にプライベートエンドポイントから接続する</a></p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">azadmin@TestVm:~$ nslookup  your-aoai-name.openai.azure.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Server:         127.0.0.53</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Address:        127.0.0.53#53</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Non-authoritative answer:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">your-aoai-name.openai.azure.com    canonical name = your-aoai-name.privatelink.openai.azure.com.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Name:   your-aoai-name.privatelink.openai.azure.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Address: 10.3.1.5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-vm-のマネージド-id-を利用して-api-key-無しで-aoai-を呼び出す方法">2. VM のマネージド ID を利用して API Key 無しで AOAI を呼び出す方法<a href="https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id#2-vm-%E3%81%AE%E3%83%9E%E3%83%8D%E3%83%BC%E3%82%B8%E3%83%89-id-%E3%82%92%E5%88%A9%E7%94%A8%E3%81%97%E3%81%A6-api-key-%E7%84%A1%E3%81%97%E3%81%A7-aoai-%E3%82%92%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99%E6%96%B9%E6%B3%95" class="hash-link" aria-label="Direct link to 2. VM のマネージド ID を利用して API Key 無しで AOAI を呼び出す方法" title="Direct link to 2. VM のマネージド ID を利用して API Key 無しで AOAI を呼び出す方法">​</a></h2>
<p>手順は以下の通りです。</p>
<ol>
<li>VM のシステム割り当てマネージド ID を有効にする (今回は Bicep 側で既に有効化しています。参考資料は <a href="https://learn.microsoft.com/ja-jp/entra/identity/managed-identities-azure-resources/qs-configure-portal-windows-vm" target="_blank" rel="noopener noreferrer">Azure portal を使用して Azure VM で Azure リソースのマネージド ID を構成する</a>)</li>
<li>VM のシステム割り当てマネージド ID に対して AOAI リソースの呼び出し権限を割り当てる (Azure Portal から AOAI リソースを開き、IAM &gt; Add role assignment &gt; <code>Cognitive Services OpenAI User</code> を選び、割当先として VM のマネージド ID を指定します。参考: <a href="https://learn.microsoft.com/ja-jp/azure/ai-services/openai/how-to/managed-identity" target="_blank" rel="noopener noreferrer">マネージド ID を使用して Azure OpenAI Service を構成する方法</a>)</li>
<li>以下コマンドで API Key 無しに呼び出しができることを確認する</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 仮想環境の準備</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python3 -m venv .venv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source .venv/bin/activate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pip install azure-identity openai==0.28</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>python</code> を実行し REPL 環境で以下のコードを逐次実行します。
リソース名などは適宜読み替えてください。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> openai</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> azure</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">identity </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> DefaultAzureCredential</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">credential </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DefaultAzureCredential</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> credential</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get_token</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"https://cognitiveservices.azure.com/.default"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"azure_ad"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">token</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_version </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2023-07-01-preview"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_base </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://your-aoai.openai.azure.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  engine</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  messages </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"user"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"Hello"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  temperature</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 確認</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">response</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考資料">参考資料<a href="https://ks6088ts.github.io/en/blog/aoai-private-endpoint-managed-id#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99" class="hash-link" aria-label="Direct link to 参考資料" title="Direct link to 参考資料">​</a></h2>
<ul>
<li><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-bicep" target="_blank" rel="noopener noreferrer">ks6088ts-labs/baseline-environment-on-azure-bicep</a></li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="aoai" term="aoai"/>
        <category label="bicep" term="bicep"/>
        <category label="iac" term="iac"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ks6088ts-labs/baseline-environment-on-azure-bicep のハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/handson-baseline-environment-on-azure-bicep</id>
        <link href="https://ks6088ts.github.io/en/blog/handson-baseline-environment-on-azure-bicep"/>
        <updated>2023-11-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Bicep のサンプルコードをまとめた ks6088ts-labs/baseline-environment-on-azure-bicep の利用方法をまとめます。]]></summary>
        <content type="html"><![CDATA[<p>Bicep のサンプルコードをまとめた <a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-bicep" target="_blank" rel="noopener noreferrer">ks6088ts-labs/baseline-environment-on-azure-bicep</a> の利用方法をまとめます。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="開発環境の準備">開発環境の準備<a href="https://ks6088ts.github.io/en/blog/handson-baseline-environment-on-azure-bicep#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E6%BA%96%E5%82%99" class="hash-link" aria-label="Direct link to 開発環境の準備" title="Direct link to 開発環境の準備">​</a></h2>
<p>ハンズオンを始める前に、お使いの開発マシンに次の環境を準備します。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/cli/azure/install-azure-cli" target="_blank" rel="noopener noreferrer">Azure CLI</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/azure-resource-manager/bicep/install#azure-cli" target="_blank" rel="noopener noreferrer">Bicep</a></li>
<li><a href="https://www.gnu.org/software/make/" target="_blank" rel="noopener noreferrer">GNU Make</a></li>
</ul>
<p>以下の環境で動作確認しました。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">❯ az version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "azure-cli": "2.51.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "azure-cli-core": "2.51.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "azure-cli-telemetry": "1.1.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "extensions": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "azure-iot": "0.22.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "containerapp": "0.3.41"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ az bicep version</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Bicep CLI version 0.22.6 (d62b94db31)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>本ハンズオンでは Azure の環境作成と Bicep のサンプルシナリオのデプロイに Azure CLI と Bicep を利用します。また、各種操作をまとめたコマンドを実行するためのタスクランナーとして Makefile を利用します。<br>
<!-- -->Bicep パラメータファイルを利用しますので、Bicep CLI バージョン 0.18.4 以降および Azure CLI バージョン 2.47.0 以降であることを確認ください。<br>
<!-- -->ref. <a href="https://learn.microsoft.com/ja-jp/azure/azure-resource-manager/bicep/parameter-files?tabs=Bicep" target="_blank" rel="noopener noreferrer">Bicep デプロイ用のパラメーターファイルを作成する</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="https://ks6088ts.github.io/en/blog/handson-baseline-environment-on-azure-bicep#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2>
<p>リポジトリをクローンして <code>infra/</code> に移動します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># clone repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/ks6088ts-labs/baseline-environment-on-azure-bicep.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd baseline-environment-on-azure-bicep/infra</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>シナリオごとにディレクトリが分けられているため、以下のコマンドで各シナリオのテンプレートをデプロイできます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># シナリオ名は infra/scenarios/* のディレクトリ名と一致しています</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 以下では実行例として aoai-apim シナリオをデプロイします。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SCENARIO=aoai-apim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">make deployment-create SCENARIO=$SCENARIO</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>make で実際に実行しているコマンドは以下の通りです。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 実行コマンド</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az deployment group create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group rg-aoai-apim \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --template-file scenarios/aoai-apim/main.bicep \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --parameters scenarios/aoai-apim/main.parameters.bicepparam</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="動作確認">動作確認<a href="https://ks6088ts.github.io/en/blog/handson-baseline-environment-on-azure-bicep#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D" class="hash-link" aria-label="Direct link to 動作確認" title="Direct link to 動作確認">​</a></h3>
<ul>
<li>Azure Portal にて <code>rg-aoai-apim</code> が作成されている</li>
<li>API Management, Azure OpenAI リソースが生成されている</li>
<li>各種パラメータ(SKU, tags, モデル, etc)が期待値通りである</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考資料">参考資料<a href="https://ks6088ts.github.io/en/blog/handson-baseline-environment-on-azure-bicep#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99" class="hash-link" aria-label="Direct link to 参考資料" title="Direct link to 参考資料">​</a></h2>
<ul>
<li><a href="https://github.com/ks6088ts-labs/baseline-environment-on-azure-bicep" target="_blank" rel="noopener noreferrer">ks6088ts-labs/baseline-environment-on-azure-bicep</a></li>
<li><a href="https://github.com/Azure-Samples/aks-openai" target="_blank" rel="noopener noreferrer">Azure-Samples/aks-openai</a></li>
<li><a href="https://github.com/Azure/azure-quickstart-templates" target="_blank" rel="noopener noreferrer">Azure/azure-quickstart-templates</a></li>
<li><a href="https://view.officeapps.live.com/op/view.aspx?src=https%3A%2F%2Fdownload.microsoft.com%2Fdownload%2F3%2Ff%2F5%2F3f50ffe5-acba-4651-a408-db8a912dcdf9%2FIaC_realized_in_Bicep.pptx&amp;wdOrigin=BROWSELINK" target="_blank" rel="noopener noreferrer">【L300-L400】Infrastructure as Code Bicep を使った IaC の実現</a></li>
<li><a href="https://pages.awscloud.com/rs/112-TZM-766/images/20200303_BlackBelt_CDK.pdf" target="_blank" rel="noopener noreferrer">[AWS Black Belt Online Seminar] AWS Cloud Development Kit (CDK)</a></li>
<li><a href="https://speakerdeck.com/ohmura/what-we-leaned-about-cdk-from-developing-blea" target="_blank" rel="noopener noreferrer">What we leaned about CDK from developing BLEA</a></li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="iac" term="iac"/>
        <category label="bicep" term="bicep"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure-Samples/azure-search-openai-demo のハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo</id>
        <link href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo"/>
        <updated>2023-11-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Retrieval-Augmented Generation (=RAG) pattern のリファレンス実装である azure-search-openai-demo の利用方法をまとめます。]]></summary>
        <content type="html"><![CDATA[<p>Retrieval-Augmented Generation (=RAG) pattern のリファレンス実装である azure-search-openai-demo の利用方法をまとめます。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="開発環境の準備">開発環境の準備<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%81%AE%E6%BA%96%E5%82%99" class="hash-link" aria-label="Direct link to 開発環境の準備" title="Direct link to 開発環境の準備">​</a></h2>
<p>ハンズオンを始める前に、お使いの開発マシンに次の環境を準備します。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/cli/azure/install-azure-cli" target="_blank" rel="noopener noreferrer">Azure CLI</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/azure/developer/azure-developer-cli/install-azd?tabs=winget-windows%2Cbrew-mac%2Cscript-linux&amp;pivots=os-linux" target="_blank" rel="noopener noreferrer">Azure Developer CLI</a></li>
</ul>
<p>本ハンズオンでは Azure の環境作成とサンプルアプリのデプロイに Azure Developer CLI を利用します。Azure Developer CLI (azd コマンド)は、Azure のリソースを管理するためのオープンソースのコマンドラインツールです。主に以下の処理ができます。</p>
<ul>
<li>Azure 上のリソースの作成、更新、削除</li>
<li>Azure のリソースを管理するためのスクリプトの作成</li>
<li>IaC による自動デプロイや管理</li>
</ul>
<p>テンプレートが用意されているのでこれをもとに環境を素早く作成できます。
このテンプレートは自作可能で、プロジェクトの要件にあわせたものを作成して開発チームで展開できます。</p>
<p>ref. <a href="https://aka.ms/awesome-azd/" target="_blank" rel="noopener noreferrer">Template Library</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2>
<p><code>RAG</code> は、外部の知識ベースから事実を検索して、ユーザーの洞察を LLM の生成プロセスに組み込むという AI フレームワークです。
ref. <a href="https://speakerdeck.com/hirosatogamo/chatgpt-azure-openai-da-quan?slide=23" target="_blank" rel="noopener noreferrer">外部情報を取得し文脈として与える考え方 Grounding</a></p>
<p>本サンプルは、Azure Cognitive Search と Azure OpenAI Service を組み合わせて、RAG パターンを実装したものです。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="データセットの作成">データセットの作成<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#%E3%83%87%E3%83%BC%E3%82%BF%E3%82%BB%E3%83%83%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="Direct link to データセットの作成" title="Direct link to データセットの作成">​</a></h3>
<p>自社製品のマニュアル・研究論文・社内ドキュメントなどの実際の業務データを使うには、<code>data/</code> に検索したい任意の PDF ファイルを格納します。</p>
<p>なお、本サンプルはユーザ認証やネットワーク閉域化されていないため、インターネットに公開されても問題のないデータを利用してください。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-リソースの作成">Azure リソースの作成<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#azure-%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="Direct link to Azure リソースの作成" title="Direct link to Azure リソースの作成">​</a></h3>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Azure 環境にログインします</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd auth login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># アプリケーションを初期化します</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># クエリ言語・アナライザを日本語に設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd env set AZURE_SEARCH_QUERY_LANGUAGE ja-jp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd env set AZURE_SEARCH_QUERY_SPELLER none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd env set AZURE_SEARCH_ANALYZER_NAME ja.lucene</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Azure リソースを一括デプロイ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="動作確認">動作確認<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D" class="hash-link" aria-label="Direct link to 動作確認" title="Direct link to 動作確認">​</a></h3>
<p><strong>ローカルでの動作確認</strong></p>
<p>機能拡張や、動作の不具合解析を目的として、ローカルでの動作確認を行います。以下のコマンドで実行できます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cd app; ./start.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ref. <a href="https://github.com/Azure-Samples/azure-search-openai-demo#running-locally" target="_blank" rel="noopener noreferrer">Running locally</a></p>
<p><strong>Cognitive Search のインデックス確認</strong></p>
<p>Azure Portal &gt; Cognitive Search &gt; Search management &gt; Indexes 画面からインデックスの設定を確認します。<br>
<!-- -->ref. <a href="https://learn.microsoft.com/ja-jp/azure/search/search-what-is-an-index" target="_blank" rel="noopener noreferrer">Azure Cognitive Search のインデックス</a></p>
<p><strong>Cognitive Search のインデックス作成</strong></p>
<p>インデックスを再作成・更新する場合は、<code>data/</code> に pdf ファイルを置いた後以下のコマンドを実行してください。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./scripts/prepdocs.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上記スクリプトは、ドキュメント自体に変更が無ければ index は再作成されないようになっています。<br>
<!-- -->ref. <a href="https://github.com/Azure-Samples/azure-search-openai-demo/pull/835" target="_blank" rel="noopener noreferrer">Store an MD5 hash of uploaded/indexed file and check before prepdocs #835</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="faq">FAQ<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#faq" class="hash-link" aria-label="Direct link to FAQ" title="Direct link to FAQ">​</a></h2>
<p>リポジトリの FAQ は <a href="https://github.com/Azure-Samples/azure-search-openai-demo#faq" target="_blank" rel="noopener noreferrer">Azure-Samples/azure-search-openai-demo#faq</a> にあります。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="チャットのレスポンスに-typeerror-network-error-というエラーが出る">チャットのレスポンスに <code>TypeError: network error</code> というエラーが出る<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#%E3%83%81%E3%83%A3%E3%83%83%E3%83%88%E3%81%AE%E3%83%AC%E3%82%B9%E3%83%9D%E3%83%B3%E3%82%B9%E3%81%AB-typeerror-network-error-%E3%81%A8%E3%81%84%E3%81%86%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E5%87%BA%E3%82%8B" class="hash-link" aria-label="Direct link to チャットのレスポンスに-typeerror-network-error-というエラーが出る" title="Direct link to チャットのレスポンスに-typeerror-network-error-というエラーが出る">​</a></h3>
<p>AOAI の token 数の上限に掛かっている可能性があります。参考文献として取得するチャンク数を減らすことで回避できる可能性があります。<br>
<!-- -->取得するチャンク数は、画面右上の <code>Developer Settings</code> をクリックし、<code>Retrieve this many search results:</code> の設定から変更できます。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="gpt-4-を使いたい">GPT-4 を使いたい<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#gpt-4-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%9F%E3%81%84" class="hash-link" aria-label="Direct link to GPT-4 を使いたい" title="Direct link to GPT-4 を使いたい">​</a></h3>
<p><code>infra/main.bicep</code> の <code>chatGptModelName</code> を <code>gpt-4</code> に変更してください。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考資料">参考資料<a href="https://ks6088ts.github.io/en/blog/handson-azure-search-openai-demo#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99" class="hash-link" aria-label="Direct link to 参考資料" title="Direct link to 参考資料">​</a></h2>
<ul>
<li><a href="https://github.com/Azure-Samples/azure-search-openai-demo" target="_blank" rel="noopener noreferrer">Azure-Samples/azure-search-openai-demo</a></li>
<li><a href="https://github.com/Azure-Samples/azure-search-openai-demo/pull/780" target="_blank" rel="noopener noreferrer">support non English languages #780</a></li>
<li><a href="https://asashiho.github.io/azure-search-openai-demo/#/" target="_blank" rel="noopener noreferrer">業務データを活用した AI チャットシステムワークショップ</a></li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="openai" term="openai"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure OpenAI Service の参考リンク集]]></title>
        <id>https://ks6088ts.github.io/en/blog/bookmarks-aoai</id>
        <link href="https://ks6088ts.github.io/en/blog/bookmarks-aoai"/>
        <updated>2023-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure OpenAI Service 活用のために個人的に参考になった情報源を淡々とまとめます。]]></summary>
        <content type="html"><![CDATA[<p>Azure OpenAI Service 活用のために個人的に参考になった情報源を淡々とまとめます。<br>
<!-- -->システム開発の際に必要となる周辺サービス・OSS なども含めています。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="スライド">スライド<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89" class="hash-link" aria-label="Direct link to スライド" title="Direct link to スライド">​</a></h2>
<ul>
<li><a href="https://speakerdeck.com/hirosatogamo/chatgpt-azure-openai-da-quan" target="_blank" rel="noopener noreferrer">ChatGPT - Azure OpenAI 大全</a></li>
<li><a href="https://speakerdeck.com/dahatake/chatgpt-azure-openai-service-for-developer" target="_blank" rel="noopener noreferrer">ChatGPT | Azure OpenAI Service for Developer</a></li>
<li><a href="https://speakerdeck.com/dahatake/new-era-of-computing-chatgpt-gamotarasitaxin-shi-dai-3836814a-133a-4879-91e4-1c036b194718" target="_blank" rel="noopener noreferrer">New Era of Computing - ChatGPT がもたらした新時代</a></li>
<li><a href="https://speakerdeck.com/dahatake/chatgpt-dezi-fen-noshi-shi-gadoule-sikunarunokawokao-erunetaji" target="_blank" rel="noopener noreferrer">ChatGPT で自分の仕事がどう楽しくなるのかを考えるネタ集</a></li>
<li><a href="https://llm-in-production.connpass.com/presentation/" target="_blank" rel="noopener noreferrer">LLM in Production</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="動画">動画<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E5%8B%95%E7%94%BB" class="hash-link" aria-label="Direct link to 動画" title="Direct link to 動画">​</a></h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=ek3YWrHD76g" target="_blank" rel="noopener noreferrer">Azure OpenAI Developers セミナー</a> / <a href="http://msft.it/6058g09nQ" target="_blank" rel="noopener noreferrer">資料</a></li>
<li><a href="https://www.youtube.com/watch?v=cEynsEWpXdA" target="_blank" rel="noopener noreferrer">Azure OpenAI Developers セミナー第 2 回</a> / <a href="http://msft.it/6050g090j" target="_blank" rel="noopener noreferrer">資料</a></li>
<li><a href="https://www.youtube.com/playlist?list=PL1RqQ3kddIpYJ0u1GxTlI0r4qMeGdEL6_" target="_blank" rel="noopener noreferrer">Microsoft Build Japan</a> / <a href="https://livesend.microsoft.com/i/vBIaLmb4EHNPI24aXkJy9c1QvwiZwYdW4ST3mrxXHPI3S3yBkLWk2dNqob03vvWs1SLI9YanHiTE___9PQuCjBZDWwsNuFuybgO4jLivXN7eIb5YyKTxfWP0Bu7PLUSSIGNHri5PLUSSIGNB" target="_blank" rel="noopener noreferrer">資料</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="資料">資料<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E8%B3%87%E6%96%99" class="hash-link" aria-label="Direct link to 資料" title="Direct link to 資料">​</a></h2>
<ul>
<li><a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/reference" target="_blank" rel="noopener noreferrer">Azure OpenAI Service REST API reference</a> / <a href="https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cognitiveservices/data-plane/AzureOpenAI" target="_blank" rel="noopener noreferrer">Azure/azure-rest-api-specs, OpenAPI spec</a></li>
<li><a href="https://www.promptingguide.ai/jp" target="_blank" rel="noopener noreferrer">Prompt Engineering Guide</a></li>
<li><a href="https://help.openai.com/en/articles/6654000-best-practices-for-prompt-engineering-with-openai-api" target="_blank" rel="noopener noreferrer">OpenAI / Best practices for prompt engineering with OpenAI API</a></li>
<li><a href="https://zenn.dev/microsoft/articles/azure-openai-add-your-data" target="_blank" rel="noopener noreferrer">独自ナレッジをノーコードでChatGPTに連携！Azure Open AI「Add your data」</a></li>
<li><a href="https://qiita.com/tmiyata25/items/e8866dfed6dd4b9a02ad" target="_blank" rel="noopener noreferrer">生成AI用Cognitive Searchの言語アナライザーを日本語にしたい</a></li>
<li><a href="https://qiita.com/tmiyata25/items/875f563ba7a91f3da823" target="_blank" rel="noopener noreferrer">Cognitive Searchの生成AI用ベクトルDBの構築手順書</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ワークショップ">ワークショップ<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%83%E3%83%97" class="hash-link" aria-label="Direct link to ワークショップ" title="Direct link to ワークショップ">​</a></h2>
<ul>
<li><a href="https://github.com/nohanaga/Azure-Cognitive-Search-Workshop" target="_blank" rel="noopener noreferrer">nohanaga/Azure-Cognitive-Search-Workshop, Azure Cognitive Search Workshop</a></li>
<li><a href="https://asashiho.github.io/azure-search-openai-demo/#/" target="_blank" rel="noopener noreferrer">業務データを活用したAIチャット ワークショップ</a> / <a href="https://github.com/asashiho/azure-search-openai-demo" target="_blank" rel="noopener noreferrer">リポジトリ</a></li>
<li><a href="https://asashiho.github.io/azure-search-openai-demo-csharp/" target="_blank" rel="noopener noreferrer">業務データを活用した生成AIチャットシステム ワークショップ(コンテナアプリバージョン)</a> / <a href="https://github.com/asashiho/azure-search-openai-demo-csharp" target="_blank" rel="noopener noreferrer">リポジトリ</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="サンプル">サンプル<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB" class="hash-link" aria-label="Direct link to サンプル" title="Direct link to サンプル">​</a></h2>
<ul>
<li><a href="https://github.com/Azure-Samples/jp-azureopenai-samples" target="_blank" rel="noopener noreferrer">Azure-Samples/jp-azureopenai-samples, Azure OpenAI Serviceリファレンスアーキテクチャ</a> / <a href="https://www.microsoft.com/ja-jp/events/azurebase/contents/" target="_blank" rel="noopener noreferrer">資料</a> ( <code>Azure OpenAI Service リファレンスアーキテクチャ</code> で検索 )</li>
<li><a href="https://github.com/Azure-Samples/azure-search-openai-demo" target="_blank" rel="noopener noreferrer">Azure-Samples/azure-search-openai-demo, ChatGPT + Enterprise data with Azure OpenAI and Cognitive Search</a></li>
<li><a href="https://github.com/Azure-Samples/aks-openai" target="_blank" rel="noopener noreferrer">How to deploy and run an Azure OpenAI ChatGPT application on AKS via Bicep, Azure-Samples/aks-openai</a> / <a href="https://github.com/Azure-Samples/aks-openai-terraform" target="_blank" rel="noopener noreferrer">Terraform 版</a></li>
<li><a href="https://github.com/Azure-Samples/container-apps-openai" target="_blank" rel="noopener noreferrer">Create an Azure OpenAI, LangChain, ChromaDB, and Chainlit ChatGPT-like application in Azure Container Apps using Terraform, Azure-Samples/container-apps-openai</a></li>
<li><a href="https://github.com/matijagrcic/azurechatgpt" target="_blank" rel="noopener noreferrer">Unleash the Power of Azure Open AI, matijagrcic/azurechatgpt</a></li>
<li><a href="https://github.com/arbs-io/vscode-openai" target="_blank" rel="noopener noreferrer">vscode-openai</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ライブラリ">ライブラリ<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA" class="hash-link" aria-label="Direct link to ライブラリ" title="Direct link to ライブラリ">​</a></h2>
<ul>
<li><a href="https://github.com/openai/openai-python" target="_blank" rel="noopener noreferrer">openai/openai-python</a></li>
<li><a href="https://github.com/langchain-ai/langchain" target="_blank" rel="noopener noreferrer">langchain-ai/langchain</a></li>
<li><a href="https://github.com/microsoft/semantic-kernel" target="_blank" rel="noopener noreferrer">microsoft/semantic-kernel</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ツール">ツール<a href="https://ks6088ts.github.io/en/blog/bookmarks-aoai#%E3%83%84%E3%83%BC%E3%83%AB" class="hash-link" aria-label="Direct link to ツール" title="Direct link to ツール">​</a></h2>
<ul>
<li><a href="https://play.google.com/store/apps/details?id=com.microsoft.bing&amp;hl=ja&amp;gl=US" target="_blank" rel="noopener noreferrer">Android / Microsoft Bing 検索</a></li>
<li><a href="https://play.google.com/store/apps/details?id=com.openai.chatgpt" target="_blank" rel="noopener noreferrer">Android / ChatGPT</a></li>
<li><a href="https://chat.openai.com/" target="_blank" rel="noopener noreferrer">Web / ChatGPT</a></li>
<li><a href="https://aka.ms/bingchatenterprise" target="_blank" rel="noopener noreferrer">Bing Chat Enterprise</a></li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="openai" term="openai"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure OpenAI Service を用いた Function Calling のハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/aoai-function-calling</id>
        <link href="https://ks6088ts.github.io/en/blog/aoai-function-calling"/>
        <updated>2023-07-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure OpenAI Service を用いた Function Calling を理解するためのハンズオンを行いました。初見では何をしているのかよくわからなかったこともあったので、自分が理解していった過程をまとめておいて後続の誰かに役に立てばと思い足跡を残しておきます。]]></summary>
        <content type="html"><![CDATA[<p>Azure OpenAI Service を用いた Function Calling を理解するためのハンズオンを行いました。初見では何をしているのかよくわからなかったこともあったので、自分が理解していった過程をまとめておいて後続の誰かに役に立てばと思い足跡を残しておきます。</p>
<p>OpenAI 回りのエコシステムは急速に発展していて、 Function Calling の feature 自体は OpenAI 社が機能を公開してからしばらく経っているため既にライブラリ側でのサポートが入っています。実際のアプリ開発では LangChain, Semantic Kernel, OpenAI などのライブラリを利用してアプリを開発することが多いと思うので、それらのライブラリを利用した場合の実装例も併せて紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオンの概要">ハンズオンの概要<a href="https://ks6088ts.github.io/en/blog/aoai-function-calling#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3%E3%81%AE%E6%A6%82%E8%A6%81" class="hash-link" aria-label="Direct link to ハンズオンの概要" title="Direct link to ハンズオンの概要">​</a></h2>
<p>低層のソフトウェアの理解があると、上位のレイヤーの実装を読む際にも実装のイメージがつかみやすく、理解が深まると思いますので淡々と低層のソフトウェアから徐々に理解していく形でハンズオンをしました。</p>
<ol>
<li>REST API 仕様書の確認</li>
<li>curl で呼び出す</li>
<li>OpenAI ライブラリから呼び出す</li>
<li>LangChain ライブラリから呼び出す</li>
</ol>
<p>特に新しいソフトウェアを触る場合、依存関係の少ない順に見ていくとソフトウェア固有の振る舞いや不具合に振り回されなくて済むので、低層のソフトウェアから触っていくスタイルが好きです。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-rest-api-仕様書の確認">1. REST API 仕様書の確認<a href="https://ks6088ts.github.io/en/blog/aoai-function-calling#1-rest-api-%E4%BB%95%E6%A7%98%E6%9B%B8%E3%81%AE%E7%A2%BA%E8%AA%8D" class="hash-link" aria-label="Direct link to 1. REST API 仕様書の確認" title="Direct link to 1. REST API 仕様書の確認">​</a></h3>
<p>API 仕様書が一次情報となりますので、<a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#chat-completions" target="_blank" rel="noopener noreferrer">Azure OpenAI Service REST API reference / Chat completions</a> を確認します。ドキュメント内のリンクをたどると、どうやら Azure の REST API は GitHub リポジトリで公開されているようで、<a href="https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cognitiveservices/data-plane/AzureOpenAI/inference" target="_blank" rel="noopener noreferrer">specification/cognitiveservices/data-plane/AzureOpenAI/inference</a> に各 API バージョンの OpenAPI 仕様書があります。<br>
<!-- -->気になる箇所を blame して差分の意図を推測したり、コミットログを読んで変更の経緯を確認したりすると味わい深いです。</p>
<p>今回注目するのは、<a href="https://github.com/Azure/azure-rest-api-specs/blob/main/specification/cognitiveservices/data-plane/AzureOpenAI/inference/preview/2023-07-01-preview/generated.json" target="_blank" rel="noopener noreferrer">2023-07-01-preview</a> の仕様です。json だと見づらいので、私は <a href="https://petstore.swagger.io/" target="_blank" rel="noopener noreferrer">Swagger UI の demo サイト</a> にアクセスして、入力フォームに OpenAPI spec の仕様書の URL <code>https://raw.githubusercontent.com/Azure/azure-rest-api-specs/main/specification/cognitiveservices/data-plane/AzureOpenAI/inference/preview/2023-07-01-preview/generated.json</code> を貼り付けてブラウザで確認しています。</p>
<p>スキーマを確認すると、<code>POST /deployments/{deploymentId}/chat/completions</code> のリクエスト body に <code>functions</code> なるスキーマが定義されています。</p>
<p><img decoding="async" loading="lazy" alt="schema" src="https://ks6088ts.github.io/en/assets/images/schema-b7faad6a61413e4ddc36040e8bfdecae.png" width="1051" height="989" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-curl-で呼び出す">2. curl で呼び出す<a href="https://ks6088ts.github.io/en/blog/aoai-function-calling#2-curl-%E3%81%A7%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99" class="hash-link" aria-label="Direct link to 2. curl で呼び出す" title="Direct link to 2. curl で呼び出す">​</a></h3>
<p>仕様を確認できたので、次は実際に Azure OpenAI Service のリソースをデプロイして叩いてみます。<a href="https://techcommunity.microsoft.com/t5/azure-ai-services-blog/function-calling-is-now-available-in-azure-openai-service/ba-p/3879241" target="_blank" rel="noopener noreferrer">Function calling is now available in Azure OpenAI Service</a> を読むと、</p>
<blockquote>
<p>Function calling is now available in Azure OpenAI Service and gives the latest 0613 versions of gpt-35-turbo and gpt-4 the ability to produce structured JSON outputs based on functions that you describe in the request.</p>
</blockquote>
<p>とのことなので、ここでは gpt-35-turbo の 0613 モデルを使ってみます。 適当な関数の例も欲しかったので、<a href="https://openai.com/blog/function-calling-and-other-api-updates" target="_blank" rel="noopener noreferrer">Function calling and other API updates</a> に掲載されているサンプルを参考にしてみます。</p>
<p>API を叩く方法は色々あります。Postman とかも便利で良いと思いますが、今回はシュッと手早く確認したいだけなので、curl で以下の通り叩いてみます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Set variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AOAI_NAME="your-aoai-name"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AOAI_DEPLOYMENT_ID="your-deployment-id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AOAI_API_KEY="your-aoai-api-key"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">❯ curl -s "https://${AOAI_NAME}.openai.azure.com/openai/deployments/${AOAI_DEPLOYMENT_ID}/chat/completions?api-version=2023-07-01-preview" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H "api-key: $AOAI_API_KEY" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -H 'Content-Type: application/json' -d '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "model": "gpt-3.5-turbo-0613",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "messages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {"role": "user", "content": "What is the weather like in Boston?"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "functions": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "description": "Get the current weather in a given location",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "parameters": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "object",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "properties": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "location": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "description": "The city and state, e.g. San Francisco, CA"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "unit": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "type": "string",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "enum": ["celsius", "fahrenheit"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "required": ["location"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}' | jq -r .</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "id": "chatcmpl-7fN4Um1D4qgK4wqBIkm0i0ZQI3W4H",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "object": "chat.completion",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "created": 1690094490,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "model": "gpt-35-turbo",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "prompt_annotations": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "prompt_index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "hate": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "self_harm": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "sexual": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "violence": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "filtered": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "severity": "safe"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "choices": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "index": 0,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "finish_reason": "function_call",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "message": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "role": "assistant",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "function_call": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "name": "get_current_weather",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "arguments": "{\n\"location\": \"Boston, MA\"\n}"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      "content_filter_results": {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "usage": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "completion_tokens": 17,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "prompt_tokens": 82,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "total_tokens": 99</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>何らかのエラーがでた場合は詳細な動作を見るために、verbose オプションを付けると挙動の詳細が追えますので、<code>-vvv</code> を付けて deep dive してみてください。</p>
<p>レスポンスを見たところ、Function Calling は API サーバー側で Function を call してくれるわけではなくて、Function のシグネチャとメッセージの内容を LLM に渡すと、その情報を元に呼び出すべき Function (とその引数の値)を suggest してくれる、といった感じです。</p>
<p>例では、現在の天気を取得する <code>get_current_weather</code> なる関数を定義して、ボストンの天気を聞く質問文を添えてリクエストしています。
レスポンスの中に <code>choices</code> というキーがあり、その中に <code>finish_reason</code> が <code>function_call</code> となっているのが確認できます。また、 <code>get_current_weather</code> という関数をどんな引数を添えて呼び出すべきかを返してくれています。</p>
<p>自分が最初勘違いしていたので繰り返し書きますが、Function Calling は関数の呼び出し自体はやっておらず、あくまで呼び出すべき関数呼び出しの方法を教えてくれている形になり、その関数を呼ぶか否かはクライアントアプリ側の裁量次第となります。</p>
<p>結局これ、何が嬉しいの？ってところですが、システム間連携の実装が大分楽になって安定性も上がる点が物凄く嬉しいポイントかと思います。今まではシステム間連携を LLM と実施する際に一生懸命「こんな json フォーマットで返してくれ」、みたいなプロンプトを書いて、帰ってきた文字列を validation して parse して、取得した json を外部システムに渡して、、みたいな苦労がありました。
こうした苦労がすべて綺麗に LLM 側の Function Calling で置き換えられるようになったので、アプリの実装は簡素になり、さらにアプリの安定性も増すメリットがでてきました。システム間連携をする場合にはぜひ利用すべき機能だと思います。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-openai-ライブラリから呼び出す">3. OpenAI ライブラリから呼び出す<a href="https://ks6088ts.github.io/en/blog/aoai-function-calling#3-openai-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%8B%E3%82%89%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99" class="hash-link" aria-label="Direct link to 3. OpenAI ライブラリから呼び出す" title="Direct link to 3. OpenAI ライブラリから呼び出す">​</a></h3>
<p><a href="https://github.com/Azure-Samples/openai/blob/main/Basic_Samples/Functions/working_with_functions.ipynb" target="_blank" rel="noopener noreferrer">Working with functions in Azure OpenAI</a> がとても参考になります。
上記の curl の例と同じ処理を OpenAI ライブラリで実装する場合は以下の通りです。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">get_function_call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">messages</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> function_call </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"auto"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Define the functions to use</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    functions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"get_current_weather"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"description"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Get the current weather in a given location"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">"parameters"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"object"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"properties"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        </span><span class="token string" style="color:#e3116c">"description"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"The city and state, e.g. San Francisco, CA"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token string" style="color:#e3116c">"unit"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"type"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"enum"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"celsius"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fahrenheit"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"required"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"location"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Call the model with the user query (messages) and the functions defined in the functions parameter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        deployment_id </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> deployment_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        messages</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">messages</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        functions</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">functions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        function_call</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">function_call</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> response</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>なにやら <code>functions</code> なる巨大なオブジェクトが登場しましたが、これが関数の説明になります。スキーマも API の仕様に合わせる必要があるので若干注意を要します。
このコードでは関数の suggest までになっていますが、次は suggest された関数を呼び出して適切な回答を得るコードスニペットを紹介します。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_multiturn_conversation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">messages</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> functions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> available_functions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> deployment_id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Step 1: send the conversation and available functions to GPT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        deployment_id</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">deployment_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        messages</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">messages</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        functions</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">functions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        function_call</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"auto"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        temperature</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Step 2: check if GPT wanted to call a function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"choices"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"finish_reason"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'function_call'</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        response_message </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> response</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"choices"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"message"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Recommended Function call:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response_message</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"function_call"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># Step 3: call the function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># Note: the JSON response may not always be valid; be sure to handle errors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        function_name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> response_message</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"function_call"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># verify function exists</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> function_name </span><span class="token keyword" style="color:#00009f">not</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> available_functions</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Function "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> function_name </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" does not exist"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        function_to_call </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> available_functions</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">function_name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># verify function has correct number of arguments</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        function_args </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">loads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">response_message</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"function_call"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"arguments"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> check_args</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">function_to_call</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> function_args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">is</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">False</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Invalid number of arguments for function: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> function_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        function_response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> function_to_call</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">**</span><span class="token plain">function_args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Output of function call:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">function_response</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># Step 4: send the info on the function call and function response to GPT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># adding assistant response to messages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        messages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> response_message</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> response_message</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"function_call"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> response_message</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"function_call"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"arguments"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic"># adding function response to messages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        messages</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"role"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"function"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"name"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> function_name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token string" style="color:#e3116c">"content"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> function_response</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># extend conversation with function response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Messages in next request:"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> message </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> messages</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ChatCompletion</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            messages</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">messages</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            deployment_id</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">deployment_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            function_call</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"auto"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            functions</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">functions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            temperature</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># get a new response from GPT where it can see the function response</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> response</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>suggest された関数を呼び出し、その結果を prompt に追加し、OpenAPI を呼び出す処理をひたすら繰り返して、<code>finish_reason</code> が <code>function_call</code> でなくなったらようやく回答を得る、という流れになります。<br>
<!-- -->実装のイメージはこれで大体理解できました。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-langchain-ライブラリから呼び出す">4. LangChain ライブラリから呼び出す<a href="https://ks6088ts.github.io/en/blog/aoai-function-calling#4-langchain-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%8B%E3%82%89%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99" class="hash-link" aria-label="Direct link to 4. LangChain ライブラリから呼び出す" title="Direct link to 4. LangChain ライブラリから呼び出す">​</a></h3>
<p>OpenAI ライブラリで関数を登録する際に正直しんどいと思うポイントが 2 つありました。</p>
<ol>
<li>関数の説明のための json お化けみたいなもの作る</li>
<li>suggest された関数を呼び出して回答を得るまでの繰り返し処理</li>
</ol>
<p>1 は型の制約なども掛けられないですし、正直に言うとあまり書きたくない気持ちになります。2 は結果を得るまでのループ処理をアプリ側のコードに仕込むのは面倒です。
小規模なサンプルだとこのあたりをコピペで済ませることは多いと思うのですが、将来的にプロダクトのコードに組み込む場合は、ライブラリ側で吸収してくれると嬉しいです。</p>
<p>ここでは例として、<a href="https://github.com/langchain-ai/langchain" target="_blank" rel="noopener noreferrer">LangChain</a> での実装を見てみます。Release note をみたところ、<a href="https://github.com/langchain-ai/langchain/releases/tag/v0.0.200" target="_blank" rel="noopener noreferrer">v0.0.200</a> 時点で既に入っていたようで開発の早さが伺えます。</p>
<p>Azure OpenAI Service を利用して、LangChain を利用したサンプルコードは以下になります。</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">main.py</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> logging</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> os</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> openai</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> dotenv </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> load_dotenv</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> langchain </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> LLMMathChain</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> langchain</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">agents </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> AgentType</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Tool</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> initialize_agent</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> langchain</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">chat_models </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> ChatOpenAI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dotenv_path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">".env"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">load_dotenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dotenv_path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_DEPLOYMENT_ID </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"OPENAI_DEPLOYMENT_ID"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_KEY </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"OPENAI_API_KEY"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_BASE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getenv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"OPENAI_API_BASE"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_type </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"azure"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> OPENAI_API_KEY</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_base </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> OPENAI_API_BASE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">api_version </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"2023-07-01-preview"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"__main__"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    llm </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ChatOpenAI</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        model_name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"gpt-35-turbo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        temperature</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        model_kwargs</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string" style="color:#e3116c">"deployment_id"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> OPENAI_DEPLOYMENT_ID</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tools </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Tool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"Calculator"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            func</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">LLMMathChain</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">from_llm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">llm</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">llm</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> verbose</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">run</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            description</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"数理計算の結果を返します"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    agent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> initialize_agent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tools</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">tools</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> llm</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">llm</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> agent</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">AgentType</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OPENAI_FUNCTIONS</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> verbose</span><span class="token operator" style="color:#393A34">=</span><span class="token boolean" style="color:#36acaa">True</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> request </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"1955年10月28日は2023年7月24日の何日前ですか？"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        logging</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">debug</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">agent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-ini codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">.env</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ini codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># OpenAI API</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_DEPLOYMENT_ID="YOUR_AOAI_DEPLOYMENT_ID"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_BASE="https://YOUR_AOAI_NAME.openai.azure.com/"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">OPENAI_API_KEY="YOUR_AOAI_API_KEY"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-txt codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">requirements.txt</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-txt codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">aiohttp==3.8.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">aiosignal==1.3.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">async-timeout==4.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">attrs==23.1.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">certifi==2023.7.22</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">charset-normalizer==3.2.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">dataclasses-json==0.5.13</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">frozenlist==1.4.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">greenlet==2.0.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">idna==3.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">langchain==0.0.242</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">langsmith==0.0.14</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">marshmallow==3.20.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">multidict==6.0.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mypy-extensions==1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">numexpr==2.8.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">numpy==1.25.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openai==0.27.8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">openapi-schema-pydantic==1.2.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">packaging==23.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">pydantic==1.10.12</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python-dotenv==1.0.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PyYAML==6.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">requests==2.31.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SQLAlchemy==2.0.19</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tenacity==8.2.2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">tqdm==4.65.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">typing-inspect==0.9.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">typing_extensions==4.7.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">urllib3==2.0.4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarl==1.9.2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ python main.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Entering new AgentExecutor chain...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Invoking: `Calculator` with `2023年7月24日 - 1955年10月28日`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Entering new LLMMathChain chain...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2023年7月24日 - 1955年10月28日\```text</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(2023 * 365 + 7 * 30 + 24) - (1955 * 365 + 10 * 30 + 28)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">\```</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...numexpr.evaluate("(2023 * 365 + 7 * 30 + 24) - (1955 * 365 + 10 * 30 + 28)")...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Answer: 24726</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Finished chain.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Answer: 247261955年10月28日から2023年7月24日までの日数は、24726日です。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt; Finished chain.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>(計算は間違っていますが...) 関数の呼び出しと回答の取得までの処理がライブラリ側で吸収されていることが確認できます。今回は既存の数値計算用の <code>LLMMathChain</code> を利用しましたが、LangChain ではカスタムの Tool を実装することもできます。
<a href="https://python.langchain.com/docs/modules/agents/tools/custom_tools" target="_blank" rel="noopener noreferrer">Defining Custom Tools</a>を読むとカスタムツールの実装方法が理解できます。<br>
<!-- -->Agent に Tool を付け足す形での実装ができるので、外部システムとの連携も簡単に実装できそうです。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="まとめ">まとめ<a href="https://ks6088ts.github.io/en/blog/aoai-function-calling#%E3%81%BE%E3%81%A8%E3%82%81" class="hash-link" aria-label="Direct link to まとめ" title="Direct link to まとめ">​</a></h2>
<p>今回は Azure OpenAI Service の Function Calling のハンズオンを行いました。<br>
<!-- -->Function Calling は関数の呼び出し自体はやっておらず、あくまで呼び出すべき関数呼び出しの方法を教えてくれている形になり、その関数を呼ぶか否かはクライアントアプリ側の裁量次第となります。<br>
<!-- -->システム間連携の実装が大分楽になって安定性も上がる点が物凄く嬉しいポイントかと思います。<br>
<!-- -->呼び出し回りの実装は複雑化しやすくなるので、メンテナンス観点ですとライブラリを利用するなどをお勧めします。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-openai-service" term="azure-openai-service"/>
        <category label="langchain" term="langchain"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure OpenAI Service を利用した ChatGPT お試し環境にログ出力機能を追加する]]></title>
        <id>https://ks6088ts.github.io/en/blog/aoai-apim-easyauth</id>
        <link href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth"/>
        <updated>2023-06-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure OpenAI Service を利用した ChatGPT お試し環境の構築 では、ChatGPT を体験する環境を簡単に構築する方法をご紹介しました。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground">Azure OpenAI Service を利用した ChatGPT お試し環境の構築</a> では、ChatGPT を体験する環境を簡単に構築する方法をご紹介しました。</p>
<p>既にご利用いただけたユーザーからのフィードバックとして、「実際の利用ログなどを確認したい」というご要望をいただきました。</p>
<p>本記事では Azure マネージドサービスを利用してコーディングせずに利用ログを収集する方法を紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要">概要<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E6%A6%82%E8%A6%81" class="hash-link" aria-label="Direct link to 概要" title="Direct link to 概要">​</a></h2>
<p>Azure を利用する場合、候補に挙がるのは Azure API Management (以下、APIM)の利用です。</p>
<p>APIM は、Azure が提供するマネージドな API ゲートウェイのサービスで、バックエンドにあるサービスを提供する API を一括で管理して様々な処理 (セキュリティ、レート制限、データ変換、監視、など) を仲介するものです。</p>
<p>今回のスコープである利用ログの収集は、App Service にデプロイしたアプリからのリクエストを APIM を経由させてロギングするような構成で実現できます。</p>
<p><img decoding="async" loading="lazy" alt="architecture" src="https://ks6088ts.github.io/en/assets/images/architecture-3e0246b8aab40d1df29bacd0167d8c4d.png" width="1341" height="1012" class="img_ev3q"></p>
<p>本記事のスコープ外ではありますが、APIM 自体は非常に多機能なサービスなので、API の呼び出し回数を制限するレート制限の設定なども AOAI の利用においては利用が見込まれる機能かと思います。具体的な AOAI の制限については、<a href="https://learn.microsoft.com/ja-jp/azure/cognitive-services/openai/quotas-limits" target="_blank" rel="noopener noreferrer">Azure OpenAI Service のクォータと制限</a>に記載があります。</p>
<p>また、特に大規模なシステム開発の文脈ですと、APIM を境界として、サーバ・クライアント開発者が分業できる開発体制面でのメリットもあります。</p>
<p>(要望が有り次第また発信しようと思います。)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2>
<hr>
<ol>
<li>Azure OpenAI Service を作成する</li>
<li>API Management を作成する</li>
<li>API Management のバックエンド API を登録する</li>
<li>App Service にアプリをデプロイする</li>
<li>認証処理を追加する</li>
<li>ログ出力を有効化する</li>
<li>動作確認</li>
</ol>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-openai-service-を作成する">Azure OpenAI Service を作成する<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#azure-openai-service-%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to Azure OpenAI Service を作成する" title="Direct link to Azure OpenAI Service を作成する">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/cognitive-services/openai/how-to/create-resource?pivots=web-portal" target="_blank" rel="noopener noreferrer">Azure OpenAI を使用してリソースを作成し、モデルをデプロイする</a> を参考に Azure Portal から AOAI のリソースとモデルを作成します。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-management-を作成する">API Management を作成する<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#api-management-%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to API Management を作成する" title="Direct link to API Management を作成する">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/api-management/get-started-create-service-instance" target="_blank" rel="noopener noreferrer">Azure portal を使用して新しい Azure API Management サービス インスタンスを作成する</a> を参考に APIM のサービスインスタンスを作成します。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-management-のバックエンド-api-を登録する">API Management のバックエンド API を登録する<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#api-management-%E3%81%AE%E3%83%90%E3%83%83%E3%82%AF%E3%82%A8%E3%83%B3%E3%83%89-api-%E3%82%92%E7%99%BB%E9%8C%B2%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to API Management のバックエンド API を登録する" title="Direct link to API Management のバックエンド API を登録する">​</a></h3>
<p>APIM のバックエンド API として AOAI を登録します。<br>
<!-- -->AOAI は <a href="https://learn.microsoft.com/ja-jp/azure/cognitive-services/openai/reference" target="_blank" rel="noopener noreferrer">Azure OpenAI Service の REST API リファレンス</a>に REST API の OpenAPI 仕様が公開されています。</p>
<p>OpenAPI 仕様が公開されているバックエンド API であれば、<a href="https://learn.microsoft.com/ja-jp/azure/api-management/import-and-publish" target="_blank" rel="noopener noreferrer">チュートリアル:最初の API のインポートと発行</a>の手順に沿って、APIM にインポートすることができます。</p>
<p>詳細な手順は、<a href="https://github.com/Azure-Samples/openai-python-enterprise-logging/blob/main/README.ja.md#api-management" target="_blank" rel="noopener noreferrer">エンタープライズ向けAzure OpenAIアプリ基盤 / 機能 / API Management</a> に記載があります。</p>
<p>※ 執筆時点(2023/06)では、直接 APIM に AOAI の OpenAPI 仕様をインポートしようとすると、AOAI の OpenAPI 仕様には import できないパラメータが含まれているため、HTTP API を一旦作成した後に OpenAPI 仕様のインポートをする必要がありました。</p>
<p>AOAI の REST API の仕様は GitHub の <a href="https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cognitiveservices/data-plane/AzureOpenAI/inference/stable" target="_blank" rel="noopener noreferrer">specification/cognitiveservices/data-plane/AzureOpenAI/inference/stable</a> のあたりに公開されております。</p>
<p>AOAI に限らずですが、<a href="https://petstore.swagger.io/" target="_blank" rel="noopener noreferrer">Swagger Petstore</a> にアクセスして、見たい OpenAPI spec の json を URL に指定するとウェブブラウザから見やすい形で API 仕様が確認できるので便利です。</p>
<p>インポートできたら APIM の Policy 設定を追加する作業に入ります。<br>
<!-- -->ここでは、クライアントから APIM へ HTTP リクエストすると AOAI が呼び出されるように以下の二点の設定します。</p>
<ol>
<li>Backend API の URL 設定</li>
<li>AOAI の API Key をヘッダーに追加する設定</li>
</ol>
<p>なお、Portal から APIM の設定変更をしている操作は、Policy の XML ファイルを書き換えていることとほぼ同義です。<br>
<!-- -->Azure Portal から GUI ベースで設定する方法は始めは判りやすいのですが、設定項目が増えると面倒です。ある程度慣れたり、決まった設定があるのであれば XML をコピペして直接書き換えるほうが操作が楽になります。</p>
<p>最終的に Policy の設定は以下のようになります。適宜 backend url や API key を書き換えてください。</p>
<div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">policies</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!-- 1. Backend API の URL 設定, https://{Azure OpenAI Service の Endpoint}/openai --&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">set-backend-service</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">base-url</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://your-aoai.openai.azure.com/openai</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">&lt;!-- 2. AOAI の API Key をヘッダーに追加する設定 --&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">set-header</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">api-key</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">exists-action</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">override</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">your-aoai-key</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">set-header</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">backend</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">backend</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">outbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">outbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">on-error</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">on-error</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">policies</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>また、ここでは簡素化のため Subscription キーの要求は無効化します。API の設定から <code>Subscription required</code> のチェックボックスを外して無効化してください。</p>
<p>ここまで設定したら、Azure Portal の <code>APIM &gt; APIs &gt; {AOAI} &gt; Test</code> タブから適当な API を選んで、<code>deployment-id</code>Azure Portal の Test から、APIM 経由で AOAI の API を呼び出す動作確認を行うことができます。</p>
<p>ここでは、</p>
<ul>
<li>APIM にリクエスト発行すると AOAI API のレスポンスが取得できる</li>
<li>(APIM が内部的にヘッダを設定するので)クライアントは AOAI の API Key をヘッダに含めなくてよい</li>
</ul>
<p>ということが確認できます。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="app-service-にアプリをデプロイする">App Service にアプリをデプロイする<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#app-service-%E3%81%AB%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to App Service にアプリをデプロイする" title="Direct link to App Service にアプリをデプロイする">​</a></h3>
<p>おもむろに App Service にアプリをデプロイします。
App Service にデプロイする際、ローカルマシンのランタイムや環境依存で困りたくないので、私は基本的にコンテナイメージを Docker Hub に置いてデプロイしています。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">RESOURCE_GROUP_NAME=rg-easyauth-apim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APP_SERVICE_PLAN_NAME=plan-easyauth-apim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">APP_SERVICE_NAME=app-easyauth-apim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER_IMAGE_NAME=ks6088ts/azure-openai-playground</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># リソースグループを作成する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># App Service Plan を作成する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az appservice plan create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_PLAN_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku B1 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --is-linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># App Service を作成する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --plan $APP_SERVICE_PLAN_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --deployment-container-image-name $CONTAINER_IMAGE_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># App Service の環境変数を設定する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AZURE_OPENAI_API_URL="https://your-apim.azure-api.net/deployments/your-deployment-id/chat/completions?api-version=2023-05-15"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp config appsettings set \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --settings \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        WEBSITES_PORT=3000 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_API_URL=$AZURE_OPENAI_API_URL</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 設定を反映させるために App Service を再起動する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp restart \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ここまでで、App Service にアプリがデプロイされます。
App Service にアクセスしてチャット画面から動作確認を行うことができます。</p>
<p>この時点では認証はかかっておらず、インターネットから誰でもアクセスできてしまう点にご注意ください。</p>
<p>APIM と認証情報をやり取りするため、フロントエンドアプリからは JWT を HTTP のリクエストヘッダに添える必要があります。具体的には、</p>
<ul>
<li><code>/.auth/me</code> の json レスポンスの中の <code>access_token</code> (=JWT) を取得</li>
<li><code>Authorization: Bearer {access_token}</code> をヘッダに付与して APIM に HTTP リクエストする</li>
</ul>
<p>となります。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="認証処理を追加する">認証処理を追加する<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E8%AA%8D%E8%A8%BC%E5%87%A6%E7%90%86%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 認証処理を追加する" title="Direct link to 認証処理を追加する">​</a></h3>
<p>App Service と API Management の認証設定を行います。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="app-service-の組み込み認証easyauth-を有効にする">App Service の組み込み認証(EasyAuth) を有効にする<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#app-service-%E3%81%AE%E7%B5%84%E3%81%BF%E8%BE%BC%E3%81%BF%E8%AA%8D%E8%A8%BCeasyauth-%E3%82%92%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to App Service の組み込み認証(EasyAuth) を有効にする" title="Direct link to App Service の組み込み認証(EasyAuth) を有効にする">​</a></h4>
<p>組み込み認証が何たるかは <a href="https://learn.microsoft.com/ja-jp/azure/app-service/overview-authentication-authorization" target="_blank" rel="noopener noreferrer">Azure App Service および Azure Functions での認証と承認</a> を参照してください。
アプリケーション開発者観点ですと、認証処理の一切を App Service に任せることができる仕組みで、リクエストが Web アプリに到達する前段で認証処理を行ってくれるものと捉えておけばよいです。</p>
<p>実際の設定方法は<a href="https://learn.microsoft.com/ja-jp/azure/app-service/scenario-secure-app-authentication-app-service" target="_blank" rel="noopener noreferrer">チュートリアル: Azure App Service で実行されている Web アプリにアプリの認証を追加する</a>が詳しいです。Azure Portal 上の操作で認証設定を入れるのに、<code>Azure Active Directory</code> ではなく、<code>App Service</code> のリソースから辿っていく操作になる旨、ご注意ください。</p>
<p>認証設定が追加されると、認証前のクライアントは Azure AD 認証画面にリダイレクトされるようになります。<br>
<!-- -->認証が完了するとアプリにアクセスできます。認証が完了したブラウザから、<code>https://{appservice の url}/.auth/me</code> にアクセスすると <code>access_token</code> として JWT が取得できます。<br>
<!-- -->ref. <a href="https://learn.microsoft.com/ja-jp/azure/app-service/configure-authentication-user-identities#access-user-claims-using-the-api" target="_blank" rel="noopener noreferrer">Azure App Service 認証でユーザー ID を操作する / API を使用してユーザー クレームにアクセスする</a></p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="api-management-の-api-に認証情報の検証を追加する">API Management の API に認証情報の検証を追加する<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#api-management-%E3%81%AE-api-%E3%81%AB%E8%AA%8D%E8%A8%BC%E6%83%85%E5%A0%B1%E3%81%AE%E6%A4%9C%E8%A8%BC%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to API Management の API に認証情報の検証を追加する" title="Direct link to API Management の API に認証情報の検証を追加する">​</a></h4>
<p>App Service で認証が完了した後、API Management で認証情報の検証を行います。
<a href="https://learn.microsoft.com/ja-jp/azure/api-management/validate-azure-ad-token-policy" target="_blank" rel="noopener noreferrer">Azure Active Directory のトークンの検証</a>にありますように、API Management には <code>validate-azure-ad-token</code> というポリシーがあります。</p>
<p>Inbound Processing に以下のように <code>validate-azure-ad-token</code> を追加します。
<code>tenant-id</code>, <code>application-id</code> は EasyAuth で設定したものを指定します。</p>
<div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">validate-azure-ad-token</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">tenant-id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">your-tenant-id</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">client-application-ids</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">application-id</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">your-application-id</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">application-id</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">client-application-ids</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">validate-azure-ad-token</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最終的にできあがった API Management のポリシーの全体像は以下のようになります。</p>
<div class="language-xml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-xml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">policies</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">set-backend-service</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">base-url</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://your-aoai.openai.azure.com/openai</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">set-header</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">api-key</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">exists-action</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">override</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">your-aoai-key</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">value</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">set-header</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">validate-azure-ad-token</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">tenant-id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">your-tenant-id</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">client-application-ids</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">application-id</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">your-application-id</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">application-id</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">client-application-ids</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">validate-azure-ad-token</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">inbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">backend</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">backend</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">outbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">outbound</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">on-error</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">base</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">on-error</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">policies</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ログ出力を有効化する">ログ出力を有効化する<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E3%82%92%E6%9C%89%E5%8A%B9%E5%8C%96%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to ログ出力を有効化する" title="Direct link to ログ出力を有効化する">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/azure-monitor/logs/quick-create-workspace?tabs=azure-portal" target="_blank" rel="noopener noreferrer">Log Analytics ワークスペースを作成する</a>を参考に Azure Portal から Log Analytics Workspace を作成します。</p>
<p><code>APIM &gt; Diagnostic settings</code> にて、<code>Add diagnostic setting</code> を選択し以下の設定を作成します。</p>
<ul>
<li><code>Logs &gt; audit/allLogs を有効化</code></li>
<li><code>Log Analytics Workspace を有効化</code></li>
<li><code>Archive to a storage account</code> を選択</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="動作確認">動作確認<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E5%8B%95%E4%BD%9C%E7%A2%BA%E8%AA%8D" class="hash-link" aria-label="Direct link to 動作確認" title="Direct link to 動作確認">​</a></h3>
<p>以下の操作を行い、意図した動作になっているかを確認します。</p>
<ul>
<li>App Service の URL にアクセスする<!-- -->
<ul>
<li>認証画面にリダイレクトされることを確認</li>
</ul>
</li>
<li>APIM の Log を確認(任意)<!-- -->
<ul>
<li>JWT のヘッダが渡っていることを確認</li>
</ul>
</li>
<li>JWT のヘッダなしで APIM にリクエストして API が呼び出せないことを確認<!-- -->
<ul>
<li><code>401 Unauthorized</code> が返ってくることを確認</li>
</ul>
</li>
<li><code>APIM &gt; Logs</code> を開き、クエリとして <code>ApiManagementGatewayLogs</code> を実行し、ログが出力されていることを確認</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tips">Tips<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#tips" class="hash-link" aria-label="Direct link to Tips" title="Direct link to Tips">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="デバッグ方法">デバッグ方法<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E6%96%B9%E6%B3%95" class="hash-link" aria-label="Direct link to デバッグ方法" title="Direct link to デバッグ方法">​</a></h3>
<p>開発過程で私が踏んだトラブルやそのデバッグ方法について記載します。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="ログ出力を有効化は開発観点でも有効">ログ出力を有効化は開発観点でも有効<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E3%83%AD%E3%82%B0%E5%87%BA%E5%8A%9B%E3%82%92%E6%9C%89%E5%8A%B9%E5%8C%96%E3%81%AF%E9%96%8B%E7%99%BA%E8%A6%B3%E7%82%B9%E3%81%A7%E3%82%82%E6%9C%89%E5%8A%B9" class="hash-link" aria-label="Direct link to ログ出力を有効化は開発観点でも有効" title="Direct link to ログ出力を有効化は開発観点でも有効">​</a></h4>
<p>APIM 連携をした際、ポリシー設定が適切に動作しているかの確認や、何か失敗したときの原因を調査する観点でもロギングは有効でした。マネージドサービスということで処理の詳細が隠蔽されてしまうと、えてして開発が困難になりがちなのですが、<code>LastErrorReason</code> や <code>LastErrorMessage</code> などの情報は、何が原因で失敗したかを調査する際に非常に役立ちました。<br>
<!-- -->たとえば、<code>validate-azure-ad-token</code> で失敗した場合、<code>LastErrorReason</code> に <code>Invalid JWT token. Token is expired.</code> というように、失敗した理由がわかったり、
<code>LastErrorReason: SubscriptionKeyNotFound</code>, <code>LastErrorMessage: Access denied due to missing subscription key. Make sure to include subscription key when making requests to an API.</code> が出ている時は Subscription key が抜けていたのだな、など。</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="クライアントとサーバを切り分けて動かす">クライアントとサーバを切り分けて動かす<a href="https://ks6088ts.github.io/en/blog/aoai-apim-easyauth#%E3%82%AF%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%B3%E3%83%88%E3%81%A8%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E5%88%87%E3%82%8A%E5%88%86%E3%81%91%E3%81%A6%E5%8B%95%E3%81%8B%E3%81%99" class="hash-link" aria-label="Direct link to クライアントとサーバを切り分けて動かす" title="Direct link to クライアントとサーバを切り分けて動かす">​</a></h4>
<p>アプリと APIM の連携に関しては、何か不具合が起きたときに App Service なのか APIM の設定なのかの原因切り分けを行うことが重要です。
不具合原因の特定のために、事実の積み上げと仮説の検証をループするわけですが、このときに、クライアントとサーバを切り分けて動かすことで、原因の特定がしやすくなります。</p>
<p>双方が関係しあうインタフェースたる部分は、主に JWT になります。フロントエンドアプリで認証を行った状態で、ブラウザから <code>https://{appservice の URL}/.auth/me</code> にアクセスし、<code>access_token</code> (JWT) を取得し、curl などで APIM にリクエストを送るという手順で、APIM にリクエストを送って切り分けたりしていました。</p>
<p>APIM のポリシー設定は触った感じ即時反映のように見えるのですが、時々心配になったときはユーザー定義できるエラーメッセージの文字列を変えるなどの tips も同僚から教わりました(感謝！)。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-ad" term="azure-ad"/>
        <category label="app-service" term="app-service"/>
        <category label="api-management" term="api-management"/>
        <category label="azure-openai-service" term="azure-openai-service"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure OpenAI Service を利用した ChatGPT お試し環境の構築]]></title>
        <id>https://ks6088ts.github.io/en/blog/fork-azure-openai-playground</id>
        <link href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground"/>
        <updated>2023-05-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure OpenAI Service を利用した ChatGPT の試用環境を作成してみました。]]></summary>
        <content type="html"><![CDATA[<p>Azure OpenAI Service を利用した ChatGPT の試用環境を作成してみました。<br>
<!-- -->ChatGPT を体験する環境としては、既に OpenAI でも Azure OpenAI Service でも使い勝手のいいウェブアプリがあり、ブラウザとアカウントさえあればすぐに試せます。</p>
<ul>
<li>OpenAI: <a href="https://chat.openai.com/" target="_blank" rel="noopener noreferrer">ChatGPT のウェブアプリ</a>, <a href="https://platform.openai.com/playground" target="_blank" rel="noopener noreferrer">Playground</a></li>
<li>Azure: <a href="https://oai.azure.com/portal" target="_blank" rel="noopener noreferrer">Azure OpenAI Studio</a></li>
</ul>
<p>個人的なお試しという観点ですとこれらのウェブアプリを利用するだけで十分ですが、<br>
<!-- -->業務への適用を視野に入れて、広く組織内で試用するユースケースを考えると様々な課題が出てきます。</p>
<p>例えば、シンプルに API Token を払い出してそのまま使う方法ですと、万が一 API Token が漏洩した場合に不正利用を防ぐことができません。また、ユーザーを組織内のメンバーに限定したい場合、何らかの方法で認証する必要がでてきます。これらの課題に対してゼロから取り組むと、本来の目的である ChatGPT の試用に割く時間が減ってしまいます。</p>
<p>そこで、本記事では業務上の PoC 利用を見据え、Azure OpenAI Service を使った OpenAI API の試用環境の構築方法をサンプルコード付きで紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要">概要<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#%E6%A6%82%E8%A6%81" class="hash-link" aria-label="Direct link to 概要" title="Direct link to 概要">​</a></h2>
<p>以下のようなアーキテクチャで構築します。</p>
<p><img decoding="async" loading="lazy" alt="architecture" src="https://ks6088ts.github.io/en/assets/images/architecture-dcd49393a7522cc8d86ca946b46bf8af.png" width="3497" height="2282" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2>
<p>作業手順は以下の通りです。</p>
<hr>
<ol>
<li>Azure OpenAI Service のリソースを作成する</li>
<li>アプリケーションを開発する</li>
<li>App Service にデプロイする</li>
<li>App Service で実行されている Web アプリに認証を追加する</li>
<li>プライベートエンドポイントの設定を追加する</li>
<li>App Service の VNET 統合設定を追加する</li>
</ol>
<hr>
<p>以下では、これら手順について順に見ていきます。
作業が完了したら App Service の URL にアクセスして、ChatGPT を試してみましょう。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-azure-openai-service-のリソースを作成する">1. Azure OpenAI Service のリソースを作成する<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#1-azure-openai-service-%E3%81%AE%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 1. Azure OpenAI Service のリソースを作成する" title="Direct link to 1. Azure OpenAI Service のリソースを作成する">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/cognitive-services/openai/how-to/create-resource?pivots=cli" target="_blank" rel="noopener noreferrer">Azure OpenAI を使用してリソースを作成し、モデルをデプロイする</a>を参考に、Azure Portal から Azure OpenAI Service を作成します。
ここで払い出した Azure Open AI のリソース名、デプロイしたモデルの名前、API キーは後で利用します。</p>
<p>Azure Portal にある Azure OpenAI Studio では、簡単にブラウザからデプロイしたモデルを使った動作確認ができます。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-アプリケーションを開発する">2. アプリケーションを開発する<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#2-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E9%96%8B%E7%99%BA%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 2. アプリケーションを開発する" title="Direct link to 2. アプリケーションを開発する">​</a></h3>
<p>OpenAI のチャットのフォームや Playground のパラメータ設定 UI など、必要な UI コンポーネントはそれなりに多く、フロントエンドアプリをゼロから書くと結構な工数になります。<br>
<!-- -->フロントエンドアプリの実装は目的ではないので、ひとまず最短で目的が達成されることを優先するため良さそうな OSS を探します。<br>
<!-- -->GitHub で Star 数でソートして、いくつか OSS を漁ってみたところ、Azure OpenAI Service を利用したそのものズバリなアプリは見つからなかったのですが、<a href="https://github.com/Nashex/gpt4-playground" target="_blank" rel="noopener noreferrer">Nashex/gpt4-playground</a> という OpenAI の Playground をクローンした OSS が見つかりました。<br>
<!-- -->demo サイト (<a href="https://www.gpt4-playground.com/" target="_blank" rel="noopener noreferrer">GPT-4 Playground</a>) もあって、OpenAI の API を利用している点を除き、今回の目的にほぼ合致してそうです。</p>
<p>この OSS を fork して、OpenAI API をコールしている箇所を Azure OpenAI Service を利用するように変更すればサクッと動きそうです。<br>
<!-- -->以下のコードがそれに該当します。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">gpt4-playground/src/utils/OpenAI/OpenAI.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"https://api.openai.com/v1/chat/completions"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">"Content-Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    method</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"POST"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>fetch 先 url とリクエストヘッダの <code>Authorization</code> を <code>api-key</code> に書き換えると Azure OpenAI Service で同様の機能が動きました。<br>
<!-- -->最終的に Docker イメージにしてデプロイする予定だったので、API KEY のような秘匿情報やリソース名などは環境変数で外部から設定できるようにします。Next.js フレームワークを採用しているため、環境変数の設定方法は、<a href="https://nextjs.org/docs/basic-features/environment-variables" target="_blank" rel="noopener noreferrer">Next.js のドキュメント</a>を参照しました。</p>
<p>ローカル環境で動作が確認できたら、Dockerfile を書いてコンテナ化して Docker Hub に push しておきます。
イメージを作成する際は、Next.js の production build を実行して、その成果物をイメージに配置します。</p>
<p>fork して改変したアプリのソースコードは <a href="https://github.com/ks6088ts-labs/azure-openai-playground" target="_blank" rel="noopener noreferrer">ks6088ts-labs/azure-openai-playground</a> に公開しています。<br>
<!-- -->パッと動かす目的で場当たり的に改変している箇所も多々あるので、参考程度にしてください。<br>
<!-- -->Docker イメージは<a href="https://hub.docker.com/r/ks6088ts/azure-openai-playground" target="_blank" rel="noopener noreferrer">ks6088ts/azure-openai-playground</a>で公開しています。<br>
<!-- -->手元で動かしたいだけであれば、Azure OpenAI Service のリソースを払い出したあと、以下コマンドでサービスの動作確認ができます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># run the following command and access to localhost:3000 with your browser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker run --platform=linux/amd64 --rm \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -p "3000:3000" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_API_KEY=&lt;YOUR API KEY&gt;" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_NAME=&lt;YOUR AOAI NAME&gt;" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_DEPLOYMENT_NAME=&lt;YOUR DEPLOYMENT NAME&gt;" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_API_VERSION=$(AZURE_OPENAI_API_VERSION)" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ks6088ts/azure-openai-playground:0.0.5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-app-service-にデプロイする">3. App Service にデプロイする<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#3-app-service-%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 3. App Service にデプロイする" title="Direct link to 3. App Service にデプロイする">​</a></h3>
<p>2 で実装したアプリを、Azure App Service で公開します。
ここでは Docker Hub にある Docker コンテナイメージを App Service に pull して公開するシナリオとなります。</p>
<p>Azure CLI でコマンドを以下のように実行していきます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># リソースグループを作成する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># App Service Plan を作成する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az appservice plan create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_PLAN_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku B1 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --is-linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># App Service を作成する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --plan $APP_SERVICE_PLAN_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --deployment-container-image-name $CONTAINER_IMAGE_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># App Service の環境変数を設定する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp config appsettings set \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --settings \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        WEBSITES_PORT=3000 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_API_KEY=$AZURE_OPENAI_API_KEY \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_NAME=$AZURE_OPENAI_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_DEPLOYMENT_NAME=$AZURE_OPENAI_DEPLOYMENT_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_API_VERSION=$AZURE_OPENAI_API_VERSION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 設定を反映させるために App Service を再起動する</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp restart \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>これで、App Service の URL にアクセスすると、先ほどローカルで動かしたときと同じように動作するはずです。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-app-service-で実行されている-web-アプリに認証を追加する">4. App Service で実行されている Web アプリに認証を追加する<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#4-app-service-%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B-web-%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AB%E8%AA%8D%E8%A8%BC%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 4. App Service で実行されている Web アプリに認証を追加する" title="Direct link to 4. App Service で実行されている Web アプリに認証を追加する">​</a></h3>
<p>Web アプリに認証機能を組み込むのは結構手間です。App Service では組み込みの認証(=EasyAuth)と承認がサポートされているため、Web アプリでコードをまったく記述せずにユーザーをサインインさせることができます。<br>
<!-- -->手順は<a href="https://learn.microsoft.com/ja-jp/azure/app-service/scenario-secure-app-authentication-app-service" target="_blank" rel="noopener noreferrer">チュートリアル: Azure App Service で実行されている Web アプリにアプリの認証を追加する</a>を参照ください。<br>
<!-- -->Azure Portal から <code>AppService &gt; Authentication &gt; Add identity provider</code> と辿って所望の認証プロバイダを追加するだけです。認証プロバイダも主要なものはサポートされており簡単に認証機能を追加できます。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-プライベートエンドポイントの設定を追加する">5. プライベートエンドポイントの設定を追加する<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#5-%E3%83%97%E3%83%A9%E3%82%A4%E3%83%99%E3%83%BC%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 5. プライベートエンドポイントの設定を追加する" title="Direct link to 5. プライベートエンドポイントの設定を追加する">​</a></h3>
<p>Azure Virtual Network (VNet)経由のプライベートネットワーク接続に限定して Azure OpenAI Service を利用できるように設定します。
プライベートネットワーク経由でのリクエストに限定することで、万が一 API Key が漏れたとしても外部からのリソースの不正利用を防ぐことができます。<br>
<!-- -->手順は<a href="https://blog.jbs.co.jp/entry/2023/04/07/173940" target="_blank" rel="noopener noreferrer">Azure OpenAIにプライベートエンドポイント（Private Endpoint）を設定して東日本リージョンの仮想ネットワークのみから使う</a>を参照ください。記事に従って、Azure Portal から以下の操作を実施すると、確かに期待通り Azure OpenAI Playground から API が呼び出せないことを確認できました。</p>
<ul>
<li><code>Azure OpenAI &gt; Networking &gt; Firewalls and virtual networks &gt; Disabled</code> に設定し、Private Endpoint を有効化する</li>
<li><code>Azure OpenAI &gt; Networking &gt; Private endpoint connections &gt; + Private endpoint</code> から Private Endpoint を作成する</li>
</ul>
<p>なお、ネットワーク周りの設定は即時反映では無いので少し待ってから確認する必要があります。急いで確認したら反映されていなくてハマりました。<br>
<!-- -->気になって API レスポンスの中身も確認したかったので curl で直接 REST API を叩いてみました。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl "https://${AOAI_NAME}.openai.azure.com/openai/deployments/${MODEL_NAME}/completions?api-version=2022-12-01" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H 'api-key: your-api-key' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H 'content-type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --data-raw '{"prompt":"Write a product launch email for new AI-powered headphones that are priced at $79.99 and available at Best Buy, Target and Amazon.com. The target audience is tech-savvy music lovers and the tone is friendly and exciting.\n\n1. What should be the subject line of the email?  \n2. What should be the body of the email?","temperature":1,"top_p":1,"frequency_penalty":0,"presence_penalty":0,"max_tokens":350,"stop":null,"stream":true}' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --compressed -vvvv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>レスポンスの中には以下のパラメータもありましたので、Private Endpoint が確かに有効になっていそうです。</p>
<ul>
<li><code>policy-id: ThrowExceptionDueToTrafficDenied</code></li>
<li><code>{"error":{"code":"AccessDenied","message": "Public access is disabled. Please configure private endpoint."}}</code></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-app-service-の-vnet-統合設定を追加する">6. App Service の VNET 統合設定を追加する<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#6-app-service-%E3%81%AE-vnet-%E7%B5%B1%E5%90%88%E8%A8%AD%E5%AE%9A%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to 6. App Service の VNET 統合設定を追加する" title="Direct link to 6. App Service の VNET 統合設定を追加する">​</a></h3>
<p>App Service の Outbound 通信設定で VNet 統合を有効化し、App Service からのリクエストを VNet 経由で Azure OpenAI Service に送信するように設定します。
<a href="https://techblog.ap-com.co.jp/entry/2021/03/12/150117" target="_blank" rel="noopener noreferrer">【Azure】App ServiceのVNet統合とプライベートリンクを利用した通信閉域化</a>を参考に、<code>AppService &gt; Networking &gt; Outbound Traffic &gt; VNet integration &gt; + Add VNet</code> から VNet を追加します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="まとめ">まとめ<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground#%E3%81%BE%E3%81%A8%E3%82%81" class="hash-link" aria-label="Direct link to まとめ" title="Direct link to まとめ">​</a></h2>
<p>ここまでの手順を実行して、以下の動作を確認できました。</p>
<ul>
<li>未認証ユーザーは所定の認証プロバイダの認証画面にリダイレクトされる</li>
<li>認証に成功すると、Web アプリの画面が表示される</li>
<li>チャットフォームから送信した文章に対して Azure OpenAI Service が応答する</li>
<li>Azure OpenAI Playground から API を叩くとエラーになる</li>
</ul>
<p>本記事では、Azure OpenAI Service を App Service から利用するための手順をまとめました。
App Service の組み込み認証や、Vnet 統合を利用することで、手間を掛けることなく Azure OpenAI Service を安全に利用する環境を構築できました。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-ad" term="azure-ad"/>
        <category label="azure-openai-service" term="azure-openai-service"/>
        <category label="app-service" term="app-service"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a ChatGPT trial environment using Azure OpenAI Service]]></title>
        <id>https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en</id>
        <link href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en"/>
        <updated>2023-05-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[* This article is translated from Azure OpenAI Service を利用した ChatGPT お試し環境の構築]]></summary>
        <content type="html"><![CDATA[<ul>
<li>This article is translated from <a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground">Azure OpenAI Service を利用した ChatGPT お試し環境の構築</a></li>
</ul>
<hr>
<p>We have created a trial environment for ChatGPT using Azure OpenAI Service.<br>
<!-- -->Both OpenAI and Azure OpenAI Service already have easy-to-use web apps for experiencing ChatGPT, and all you need is a browser and an account to try it out.</p>
<ul>
<li>OpenAI: <a href="https://chat.openai.com/" target="_blank" rel="noopener noreferrer">ChatGPT Web App</a>, <a href="https://platform.openai.com/playground" target="_blank" rel="noopener noreferrer">Playground</a></li>
<li>Azure: <a href="https://oai.azure.com/portal" target="_blank" rel="noopener noreferrer">Azure OpenAI Studio</a></li>
</ul>
<p>From the perspective of a personal trial, just using these web applications is sufficient.<br>
<!-- -->However, when considering the use case of trial use within a wide range of organizations with a view to business application, various issues arise.</p>
<p>For example, if you simply obtain an API Token and use it in a direct way, you cannot prevent unauthorized use when the API Token is leaked. Also, if you want to limit users to members of your organization, you will need to authenticate them in some way. If you tackle these issues from scratch, you will have less time to spend on the trial of ChatGPT, which is the original purpose of this project.</p>
<p>Therefore, this article introduces how to build a trial environment for OpenAI API using Azure OpenAI Service with sample code, with a view to using OpenAI API for business PoC.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="overview">Overview<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview">​</a></h2>
<p>The following diagram shows the architecture of the trial environment we will build.</p>
<p><img decoding="async" loading="lazy" alt="architecture" src="https://ks6088ts.github.io/en/assets/images/architecture-dcd49393a7522cc8d86ca946b46bf8af.png" width="3497" height="2282" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hands-on">Hands on<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#hands-on" class="hash-link" aria-label="Direct link to Hands on" title="Direct link to Hands on">​</a></h2>
<p>The following steps are required to build the trial environment.</p>
<hr>
<ol>
<li>Create Azure OpenAI Service resource</li>
<li>Develop a Chat app</li>
<li>Deploy to App Service</li>
<li>Add authentication to the web app running on App Service</li>
<li>Add private endpoint settings</li>
<li>Add VNET integration settings for App Service</li>
</ol>
<hr>
<p>The following sections will walk you through these steps.
When you are done, go to the App Service URL and try ChatGPT.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-create-azure-openai-service-resource">1. Create Azure OpenAI Service resource<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#1-create-azure-openai-service-resource" class="hash-link" aria-label="Direct link to 1. Create Azure OpenAI Service resource" title="Direct link to 1. Create Azure OpenAI Service resource">​</a></h3>
<p>See <a href="https://learn.microsoft.com/en-us/azure/cognitive-services/openai/how-to/create-resource?pivots=cli" target="_blank" rel="noopener noreferrer">Create a resource and deploy a model using Azure OpenAI
</a> to create Azure OpenAI Service resource.</p>
<p>The <code>Azure OpenAI resource name</code>, <code>deployed model name</code>, and <code>API key</code> will be used later.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-develop-a-chat-app">2. Develop a Chat app<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#2-develop-a-chat-app" class="hash-link" aria-label="Direct link to 2. Develop a Chat app" title="Direct link to 2. Develop a Chat app">​</a></h3>
<p>There are many necessary UI components such as chat forms for OpenAI and parameter setting UI for Playground, and writing a front-end app from scratch will take a lot of time.<br>
<!-- -->Since the implementation of a front-end app is not our goal, we will look for a good OSS to achieve our goal in the shortest time possible.</p>
<p>I sorted by Star count on GitHub and scoured some OSS, and could not find the exact app that uses the Azure OpenAI Service, but I did find <a href="https://github.com/Nashex/gpt4-playground" target="_blank" rel="noopener noreferrer">Nashex/gpt4-playground</a>, an OSS clone of OpenAI's Playground.</p>
<p>There is a demo site (<a href="https://www.gpt4-playground.com/" target="_blank" rel="noopener noreferrer">GPT-4 Playground</a>), and it seems to be almost in line with the purpose of this project, except that it uses OpenAI's API.</p>
<p>If we fork this OSS and modify the code that calls OpenAI API to use Azure OpenAI Service, it should work easily.<br>
<!-- -->The following code is applicable.</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">gpt4-playground/src/utils/OpenAI/OpenAI.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"https://api.openai.com/v1/chat/completions"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">"Content-Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    method</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"POST"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>By rewriting the <code>Authorization</code> in the fetch destination url and request header to <code>api-key</code>, the same functionality worked with Azure OpenAI Service.</p>
<p>Since I planned to deploy a Docker image in the final stage, I used environment variables to set confidential information such as <code>API KEY</code> and resource names from the outside. <a href="https://nextjs.org/docs/basic-features/environment-variables" target="_blank" rel="noopener noreferrer">Next.js / Environment Variables
</a>.</p>
<p>After confirming that it works in the local environment, write a Dockerfile to containerize it and push it to Docker Hub.</p>
<p>When creating the image, production build for the Next.js app should be applied and place the artifact into the image.</p>
<p>The source code of the forked and modified application is available at <a href="https://github.com/ks6088ts-labs/azure-openai-playground" target="_blank" rel="noopener noreferrer">ks6088ts-labs/azure-openai-playground</a>.</p>
<p>Please note that many parts of the source code have been modified in an ad-hoc manner for the purpose of quick implementation, so please use it only as a reference.</p>
<p>Docker images are available at <a href="https://hub.docker.com/r/ks6088ts/azure-openai-playground" target="_blank" rel="noopener noreferrer">ks6088ts/azure-openai-playground</a>.</p>
<p>If you just want to run the service in local environment, you can check the service operation with the following command</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># run the following command and access to localhost:3000 with your browser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">docker run --platform=linux/amd64 --rm \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -p "3000:3000" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_API_KEY=&lt;YOUR API KEY&gt;" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_NAME=&lt;YOUR AOAI NAME&gt;" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_DEPLOYMENT_NAME=&lt;YOUR DEPLOYMENT NAME&gt;" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env "AZURE_OPENAI_API_VERSION=$(AZURE_OPENAI_API_VERSION)" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ks6088ts/azure-openai-playground:0.0.5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-deploy-to-app-service">3. Deploy to App Service<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#3-deploy-to-app-service" class="hash-link" aria-label="Direct link to 3. Deploy to App Service" title="Direct link to 3. Deploy to App Service">​</a></h3>
<p>The app implemented in step 2 will be published on the Azure App Service.
In this scenario, the Docker container image in the Docker Hub will be pulled and published to the App Service.</p>
<p>Execute the following commands in the Azure CLI.</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># create resource group</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create App Service Plan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az appservice plan create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_PLAN_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku B1 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --is-linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create App Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --plan $APP_SERVICE_PLAN_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --deployment-container-image-name $CONTAINER_IMAGE_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># set environment variables for App Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp config appsettings set \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --settings \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        WEBSITES_PORT=3000 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_API_KEY=$AZURE_OPENAI_API_KEY \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_NAME=$AZURE_OPENAI_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_DEPLOYMENT_NAME=$AZURE_OPENAI_DEPLOYMENT_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        AZURE_OPENAI_API_VERSION=$AZURE_OPENAI_API_VERSION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># restart App Service to reflect the environment variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp restart \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $APP_SERVICE_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now, when you access the App Service URL, it should work the same way it did when you ran it locally earlier.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-add-authentication-to-the-web-app-running-on-app-service">4. Add authentication to the web app running on App Service<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#4-add-authentication-to-the-web-app-running-on-app-service" class="hash-link" aria-label="Direct link to 4. Add authentication to the web app running on App Service" title="Direct link to 4. Add authentication to the web app running on App Service">​</a></h3>
<p>Since the App Service supports built-in authentication (=EasyAuth) and authorization, you can have users sign in without writing any code in your web app.<br>
<!-- -->For instructions, see <a href="https://learn.microsoft.com/en-us/azure/app-service/scenario-secure-app-authentication-app-service" target="_blank" rel="noopener noreferrer">Tutorial: Add app authentication to your web app running on Azure App Service</a>.<br>
<!-- -->Simply follow <code>AppService &gt; Authentication &gt; Add identity provider</code> from the Azure Portal to add the desired authentication provider. The major authentication providers are supported, so it is easy to add authentication functionality.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-add-private-endpoint-settings">5. Add private endpoint settings<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#5-add-private-endpoint-settings" class="hash-link" aria-label="Direct link to 5. Add private endpoint settings" title="Direct link to 5. Add private endpoint settings">​</a></h3>
<p>Configure Azure OpenAI Service to be available only for private network connections via Azure Virtual Network (VNet).
By limiting requests to those made via the private network, you can prevent unauthorized use of resources from outside, even in the unlikely event that the API Key is leaked.<br>
<!-- -->For instructions, please refer to <a href="https://blog.jbs.co.jp/entry/2023/04/07/173940" target="_blank" rel="noopener noreferrer">Azure OpenAIにプライベートエンドポイント（Private Endpoint）を設定して東日本リージョンの仮想ネットワークのみから使う</a> (*This article is in Japanese, unfortunately).
Following the article, I performed the following operation from Azure Portal and confirmed that the API cannot be called from Azure OpenAI Playground, as expected.</p>
<ul>
<li>Check <code>Azure OpenAI &gt; Networking &gt; Firewalls and virtual networks &gt; Disabled</code> and then activate Private Endpoint</li>
<li>Create Private Endpoint from <code>Azure OpenAI &gt; Networking &gt; Private endpoint connections &gt; + Private endpoint</code></li>
</ul>
<p>Note that the network settings are not immediately reflected, so you need to wait a bit before checking. When I hurriedly checked, it was not reflected and I got stuck...<br>
<!-- -->To confirm content of the API response, you can simply use <code>curl</code> to call the REST API.</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl "https://${AOAI_NAME}.openai.azure.com/openai/deployments/${MODEL_NAME}/completions?api-version=2022-12-01" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H 'api-key: your-api-key' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H 'content-type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --data-raw '{"prompt":"Write a product launch email for new AI-powered headphones that are priced at $79.99 and available at Best Buy, Target and Amazon.com. The target audience is tech-savvy music lovers and the tone is friendly and exciting.\n\n1. What should be the subject line of the email?  \n2. What should be the body of the email?","temperature":1,"top_p":1,"frequency_penalty":0,"presence_penalty":0,"max_tokens":350,"stop":null,"stream":true}' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --compressed -vvvv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It seems that Private Endpoint is indeed enabled, since the following parameters were also found in the response.</p>
<ul>
<li><code>policy-id: ThrowExceptionDueToTrafficDenied</code></li>
<li><code>{"error":{"code":"AccessDenied","message": "Public access is disabled. Please configure private endpoint."}}</code></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-add-vnet-integration-settings-for-app-service">6. Add VNet integration settings for App Service<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#6-add-vnet-integration-settings-for-app-service" class="hash-link" aria-label="Direct link to 6. Add VNet integration settings for App Service" title="Direct link to 6. Add VNet integration settings for App Service">​</a></h3>
<p>Enable VNet integration in the Outbound communication settings of the App Service and configure it to send requests from the App Service to the Azure OpenAI Service via VNet.
Refer to <a href="https://techblog.ap-com.co.jp/entry/2021/03/12/150117" target="_blank" rel="noopener noreferrer">【Azure】App ServiceのVNet統合とプライベートリンクを利用した通信閉域化</a>(*This article is in Japanese, unfortunately) and set <code>AppService &gt; Networking &gt; Outbound Traffic &gt; VNet integration &gt; + Add VNet</code> to add VNet.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground-en#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>After following the steps described in the article, the following behavior has been confirmed</p>
<ul>
<li>Unauthenticated users are redirected to the authentication screen of the given authentication provider</li>
<li>Upon successful authentication, users can access to the web app</li>
<li>Azure OpenAI Service responds to the text sent from the chat form</li>
<li>API requests failed from Azure OpenAI Playground, which is outside the VNet</li>
</ul>
<p>This article summarizes the steps to use Azure OpenAI Service from the App Service.
By using the App Service's built-in authentication and Vnet integration, we were able to build a secure environment to use Azure OpenAI Service without any hassle.</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-ad" term="azure-ad"/>
        <category label="azure-openai-service" term="azure-openai-service"/>
        <category label="app-service" term="app-service"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PowerShell 開発入門]]></title>
        <id>https://ks6088ts.github.io/en/blog/powershell-get-started</id>
        <link href="https://ks6088ts.github.io/en/blog/powershell-get-started"/>
        <updated>2023-03-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PowerShell スクリプトの開発入門に便利だと思ったツールや情報をまとめます。]]></summary>
        <content type="html"><![CDATA[<p>PowerShell スクリプトの開発入門に便利だと思ったツールや情報をまとめます。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="エディタ">エディタ<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF" class="hash-link" aria-label="Direct link to エディタ" title="Direct link to エディタ">​</a></h2>
<ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell" target="_blank" rel="noopener noreferrer">VS Code extension / PowerShell</a>: Syntax highlighting, intellisense, LSP サポートなどがあり便利</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ユニットテスト">ユニットテスト<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%83%A6%E3%83%8B%E3%83%83%E3%83%88%E3%83%86%E3%82%B9%E3%83%88" class="hash-link" aria-label="Direct link to ユニットテスト" title="Direct link to ユニットテスト">​</a></h2>
<ul>
<li><a href="https://pester.dev/docs/quick-start/" target="_blank" rel="noopener noreferrer">Pester / Quick Start</a>: テストフレームワーク</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docker">Docker<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#docker" class="hash-link" aria-label="Direct link to Docker" title="Direct link to Docker">​</a></h2>
<ul>
<li><a href="https://mcr.microsoft.com/en-us/product/powershell/about" target="_blank" rel="noopener noreferrer">mcr.microsoft.com/powershell</a>: PowerShell の Docker イメージ。ライブラリの廃止に伴う移行作業やテストなど、隔離された環境での実行が必要な場合に便利</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ライブラリ">ライブラリ<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA" class="hash-link" aria-label="Direct link to ライブラリ" title="Direct link to ライブラリ">​</a></h2>
<ul>
<li><a href="https://github.com/microsoftgraph/msgraph-sdk-powershell" target="_blank" rel="noopener noreferrer">microsoftgraph/msgraph-sdk-powershell</a>
<ul>
<li>Microsoft Graph API を PowerShell から叩くときに使う</li>
<li>参考リンク<!-- -->
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/powershell/microsoftgraph/authentication-commands?view=graph-powershell-1.0" target="_blank" rel="noopener noreferrer">Authentication module cmdlets in Microsoft Graph PowerShell</a></li>
<li><a href="https://learn.microsoft.com/ja-jp/graph/api/overview?view=graph-rest-1.0" target="_blank" rel="noopener noreferrer">Microsoft Graph REST API v1.0 エンドポイント リファレンス</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="スニペット">スニペット<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%82%B9%E3%83%8B%E3%83%9A%E3%83%83%E3%83%88" class="hash-link" aria-label="Direct link to スニペット" title="Direct link to スニペット">​</a></h2>
<p>しょっちゅう文法を忘れて同じことを繰り返すので、スニペットを作成しておく。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="モジュールの一括インストール">モジュールの一括インストール<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E4%B8%80%E6%8B%AC%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB" class="hash-link" aria-label="Direct link to モジュールの一括インストール" title="Direct link to モジュールの一括インストール">​</a></h3>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">install-modules.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env pwsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host "Running "$MyInvocation.MyCommand.Name" ..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$modules = @(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Microsoft.Graph"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "MicrosoftTeams"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Pester"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foreach ($module in $modules) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Write-Host "Installing $module"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Install-Module -Name $module -Scope CurrentUser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="powershell-module-の作成と利用">PowerShell module の作成と利用<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#powershell-module-%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E5%88%A9%E7%94%A8" class="hash-link" aria-label="Direct link to PowerShell module の作成と利用" title="Direct link to PowerShell module の作成と利用">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="powershell-モジュール">PowerShell モジュール<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#powershell-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB" class="hash-link" aria-label="Direct link to PowerShell モジュール" title="Direct link to PowerShell モジュール">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">mymodule.psm1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$global:MyModuleVersion = "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function Get-MyName {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return "Hello-World"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Export variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Variable MyModuleVersion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Export functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Function Get-MyName</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="powershell-モジュールの利用">PowerShell モジュールの利用<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#powershell-%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E5%88%A9%E7%94%A8" class="hash-link" aria-label="Direct link to PowerShell モジュールの利用" title="Direct link to PowerShell モジュールの利用">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">client.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">using module "./mymodule.psm1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">param (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$Hello,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$World)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$name = Get-MyName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host $name, $MyModuleVersion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host Args: $Hello, $World</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="実行">実行<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E5%AE%9F%E8%A1%8C" class="hash-link" aria-label="Direct link to 実行" title="Direct link to 実行">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./client.ps1 -Hello Hello -World World</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hello-World v0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Args: Hello World</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="テスト">テスト<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%83%86%E3%82%B9%E3%83%88" class="hash-link" aria-label="Direct link to テスト" title="Direct link to テスト">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="テストスクリプト">テストスクリプト<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%83%86%E3%82%B9%E3%83%88%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88" class="hash-link" aria-label="Direct link to テストスクリプト" title="Direct link to テストスクリプト">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">mymodule.test.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">using module "./mymodule.psm1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Describe "Smoke test" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Context "Nominal case" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        It "Check global variables" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # version variable settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $MyModuleVersion | Should Be "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        It "Connect-Helper" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Get-MyName | Should Be "Hello-World"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="テストの実行">テストの実行<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C" class="hash-link" aria-label="Direct link to テストの実行" title="Direct link to テストの実行">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Invoke-Pester ./mymodule.test.ps1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Describing Smoke test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Context Nominal case</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [+] Check global variables 495ms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [+] Connect-Helper 72ms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Tests completed in 568ms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Passed: 2 Failed: 0 Skipped: 0 Pending: 0 Inconclusive: 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="http-リクエストの発行">HTTP リクエストの発行<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#http-%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%AE%E7%99%BA%E8%A1%8C" class="hash-link" aria-label="Direct link to HTTP リクエストの発行" title="Direct link to HTTP リクエストの発行">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="microsoft-graph-api-の呼び出し例">Microsoft Graph API の呼び出し例<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#microsoft-graph-api-%E3%81%AE%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E4%BE%8B" class="hash-link" aria-label="Direct link to Microsoft Graph API の呼び出し例" title="Direct link to Microsoft Graph API の呼び出し例">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">httpRequest.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">param (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$TenantId,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$ClientId,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$ClientSecret,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$Csv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># -- Token を取得する --</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$token = Invoke-RestMethod -Method Post -Uri "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token" -Body @{client_id="$clientId";scope="https://graph.microsoft.com/.default";client_secret="$clientSecret";grant_type="client_credentials"} -ContentType 'application/x-www-form-urlencoded'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$accessToken = $token.access_token</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="実行例">実行例<a href="https://ks6088ts.github.io/en/blog/powershell-get-started#%E5%AE%9F%E8%A1%8C%E4%BE%8B" class="hash-link" aria-label="Direct link to 実行例" title="Direct link to 実行例">​</a></h4>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./httpRequest.ps1 -TenantId 789 -ClientId 566 -ClientSecret 444 </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="powershell" term="powershell"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure IoT Edge を用いたハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/handson-iot-edge</id>
        <link href="https://ks6088ts.github.io/en/blog/handson-iot-edge"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure IoT Edge を使ったハンズオンをしました。]]></summary>
        <content type="html"><![CDATA[<p>Azure IoT Edge を使ったハンズオンをしました。
基礎的な検証に必要な情報のリンクをまとめます。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2>
<ul>
<li>Docker</li>
<li>Visual Studio Code</li>
<li>Azure</li>
<li>Azure CLI</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-リソース構築">Azure リソース構築<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#azure-%E3%83%AA%E3%82%BD%E3%83%BC%E3%82%B9%E6%A7%8B%E7%AF%89" class="hash-link" aria-label="Direct link to Azure リソース構築" title="Direct link to Azure リソース構築">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-cli">Azure CLI<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#azure-cli" class="hash-link" aria-label="Direct link to Azure CLI" title="Direct link to Azure CLI">​</a></h3>
<p>サービス側のリソースとして、Azure IoT Hub, Azure Container Registry を作成します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Parameters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LOCATION="japaneast"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RESOURCE_GROUP_NAME="handson_iotedge"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">IOTHUB_NAME="iothub0322"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER_REGISTRY_NAME="acr0322"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DEVICE_ID="myEdgeDevice"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create resource group</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location $LOCATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create Azure IoT Hub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az iot hub create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $IOTHUB_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku F1 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --partition-count 2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create device identity in IoT Hub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az iot hub device-identity create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --device-id $DEVICE_ID \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --edge-enabled \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --hub-name $IOTHUB_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create Azure Container Registry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ref. https://learn.microsoft.com/ja-jp/azure/container-registry/container-registry-get-started-azure-cli#create-a-container-registry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az acr create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $CONTAINER_REGISTRY_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku Basic \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --admin-enabled true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># copy connection string for creating VM later.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CONNECTION_STRING=$(az iot hub device-identity connection-string show --device-id $DEVICE_ID --hub-name $IOTHUB_NAME -o tsv)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>エッジ側のリソースとして、仮想マシン上にアプリケーションをデプロイします。<br>
<!-- -->Azure IoT Edge によるアプリケーションのデプロイでは、エッジ側にコンテナランタイムやエージェントのインストールが必要になります。<br>
<a href="https://learn.microsoft.com/ja-jp/azure/iot-edge/quickstart-linux?view=iotedge-1.4#deploy-the-iot-edge-device" target="_blank" rel="noopener noreferrer">クイック スタート:初めての IoT Edge モジュールを Linux 仮想デバイスにデプロイする</a>を参考に ARM テンプレートを利用して、仮想マシンを以下のコマンドでデプロイします。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Parameters</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LOCATION="japaneast"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RESOURCE_GROUP_NAME="handson_iotedge_device"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create resource group</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $RESOURCE_GROUP_NAME \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location $LOCATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create VM instance via Azure Portal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   1. Go to `Deploy a custom template` at Azure Portal</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   2. Go to `Build your own template in the editor` to paste template at `https://raw.githubusercontent.com/Azure/iotedge-vm-deploy/1.4/edgeDeploy.json`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#   3. Fill in the parameters and create VM</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>仮想マシン上では、以下のように <code>iotedge</code> コマンドを用いて状態の確認ができます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># login to VM via SSH with the password specified above</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ssh adminUser@"$VM_NAME.$LOCATION".cloudapp.azure.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo iotedge -h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo iotedge system status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo iotedge system logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo iotedge list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo iotedge logs &lt;module&gt; -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="terraform">Terraform<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#terraform" class="hash-link" aria-label="Direct link to Terraform" title="Direct link to Terraform">​</a></h3>
<p>WIP</p>
<h1>開発</h1>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="iot-edge-module-開発">IoT Edge Module 開発<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#iot-edge-module-%E9%96%8B%E7%99%BA" class="hash-link" aria-label="Direct link to IoT Edge Module 開発" title="Direct link to IoT Edge Module 開発">​</a></h2>
<p>IoT Edge Module としてエッジに配信するための Docker イメージを作成します。Visual Studio Code 拡張機能を入れて GUI 操作で簡単にデプロイできます。<br>
<!-- -->操作手順は <a href="https://learn.microsoft.com/ja-jp/azure/iot-edge/tutorial-develop-for-linux?view=iotedge-1.4" target="_blank" rel="noopener noreferrer">チュートリアル: Linux コンテナーを使用して IoT Edge モジュールを開発する</a> を参照ください。
各言語ごとのチュートリアルは、例えば Python の場合 <a href="https://learn.microsoft.com/ja-jp/azure/iot-edge/tutorial-python-module?view=iotedge-1.4" target="_blank" rel="noopener noreferrer">チュートリアル: Linux コンテナーを使用して Python IoT Edge モジュールを開発してデプロイする</a> が参考になります。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-container-registry-の接続設定">Azure Container Registry の接続設定<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#azure-container-registry-%E3%81%AE%E6%8E%A5%E7%B6%9A%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="Direct link to Azure Container Registry の接続設定" title="Direct link to Azure Container Registry の接続設定">​</a></h3>
<p>Azure Container Registry に Docker image を push するため、以下の設定ファイルを作成します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># create .env corresponding to your Azure Container Registry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat .env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER_REGISTRY_ADDRESS="YOUR_CONTAINER_REGISTRY.azurecr.io"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER_REGISTRY_USERNAME="YOUR_USERNAME"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER_REGISTRY_PASSWORD="YOUR_PASSWORD"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>設定情報は、Azure Portal の <code>Azure Container Registry &gt; Settings &gt; Access Keys</code> から確認できます。<br>
<!-- -->ACR にログインするため、以下のコマンドを実行します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">az acr login --name $CONTAINER_REGISTRY_NAME</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iot-edge-module-の-build--push">IoT Edge Module の Build &amp; Push<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#iot-edge-module-%E3%81%AE-build--push" class="hash-link" aria-label="Direct link to IoT Edge Module の Build &amp; Push" title="Direct link to IoT Edge Module の Build &amp; Push">​</a></h3>
<ol>
<li><a href="https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.azure-iot-toolkit" target="_blank" rel="noopener noreferrer">Azure IoT Hub の VSCode 拡張</a>をインストール</li>
<li>コマンドパレットを開き、<code>Azure IoT Hub : Select IoT Hub</code> から対象となる IoT Hub を選択</li>
<li>VSCode の Explorer にて <code>deployment.template.json</code> を右クリックし、<code>Build and Push IoT Edge Solution</code> を選択</li>
<li>Docker Image の Build と ACR への Push が実行され、ACR の Repository にコンテナイメージが追加される</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iot-module-のデプロイ">IoT Module のデプロイ<a href="https://ks6088ts.github.io/en/blog/handson-iot-edge#iot-module-%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4" class="hash-link" aria-label="Direct link to IoT Module のデプロイ" title="Direct link to IoT Module のデプロイ">​</a></h3>
<ol>
<li>VSCode の Explorer の <code>AZURE IOT HUB</code> タブの対象デバイスを右クリックし <code>Create Deployment for Single Device</code> を選択</li>
<li><code>config/deployment.json</code> を選択して IoT Edge Module を転送</li>
</ol>
<p>Azure Portal の <code>Azure IoT Hub &gt; IoT Edge</code> から適切に IoT Edge Module が設定されているか確認できます。<br>
<!-- -->または、転送先の Edge から以下のコマンドで IoT Edge Module の起動状態を確認できます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo iotedge list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h1>References</h1>
<ul>
<li><a href="https://www.youtube.com/watch?v=UsxycuFpC8c&amp;list=PLSmINpYYRBsO4Es9FxVfKg6n4e3QdFbcs" target="_blank" rel="noopener noreferrer">Hands on workshop / Azure IoT Edge #1 - Azure IoT Edge について</a></li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="iot-edge" term="iot-edge"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[textlint を有効化する]]></title>
        <id>https://ks6088ts.github.io/en/blog/how-to-apply-textlint</id>
        <link href="https://ks6088ts.github.io/en/blog/how-to-apply-textlint"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[textlint を有効化して blog 執筆時に校正処理を自動でかけられるようにします。]]></summary>
        <content type="html"><![CDATA[<p>textlint を有効化して blog 執筆時に校正処理を自動でかけられるようにします。</p>
<p><a href="https://textlint.github.io/" target="_blank" rel="noopener noreferrer">textlint</a> を使った校正環境を構築します。
Node.js と yarn がインストールされていることを前提とします。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="textlint-とルール設定のインストール">textlint とルール設定のインストール<a href="https://ks6088ts.github.io/en/blog/how-to-apply-textlint#textlint-%E3%81%A8%E3%83%AB%E3%83%BC%E3%83%AB%E8%A8%AD%E5%AE%9A%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB" class="hash-link" aria-label="Direct link to textlint とルール設定のインストール" title="Direct link to textlint とルール設定のインストール">​</a></h2>
<p>以下のコマンドでプロジェクトの依存関係に textlint 本体とルール設定をインストールします。<br>
<!-- -->テストジョブでのみ必要なモジュールであるため、<code>devDependencies</code> として依存関係を追加します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">install dependencies</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yarn add --dev \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-preset-ja-spacing \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-preset-ja-technical-writing \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-prh \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-spellcheck-tech-word</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="textlint-のルール設定">textlint のルール設定<a href="https://ks6088ts.github.io/en/blog/how-to-apply-textlint#textlint-%E3%81%AE%E3%83%AB%E3%83%BC%E3%83%AB%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="Direct link to textlint のルール設定" title="Direct link to textlint のルール設定">​</a></h2>
<p>設定ファイルは <code>.textlintrc</code> ファイルで記述します。
「である・ですます調の不一致」「単語の表記揺れ」「句読点の使いすぎ」など、様々なルールを定義して文章をチェックできます。<br>
<!-- -->一度設定を構築し、CI プロセスなどに組み込んでおけばドキュメントの品質を保つことができます。</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">textlint settings: .textlintrc</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"filters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"rules"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"preset-ja-spacing"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"ja-space-between-half-and-full-width"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"space"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"always"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"preset-ja-technical-writing"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"spellcheck-tech-word"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"textlint-rule-no-dropping-the-ra"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"textlint-rule-ja-no-space-between-full-width"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"prh"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"rulePaths"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"./prh.yaml"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>prh (=<strong>P</strong>roof<strong>R</strong>eading <strong>H</strong>elper)はドキュメントの表記ゆれを検出するためのツールです。例えば以下の設定ファイルを書くことで表記を GitHub に統一できます。</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">prh settings: prh.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">rules</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">expected</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> GitHub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">patterns</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> github</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Github</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="textlint" term="textlint"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出す]]></title>
        <id>https://ks6088ts.github.io/en/blog/azure-ad-function-api</id>
        <link href="https://ks6088ts.github.io/en/blog/azure-ad-function-api"/>
        <updated>2023-03-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出すハンズオンをしました。]]></summary>
        <content type="html"><![CDATA[<p>Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出すハンズオンをしました。
参考になった情報のリンクをまとめます。</p>
<p>Azure App Service 上にデプロイされた React 製のフロントエンドアプリから、Azure Functions を呼び出すサンプルを提供します。</p>
<p>本アプリは以下の要求事項を満たします。</p>
<ul>
<li>フロントエンドアプリは Azure AD 認証を通すことを必須とする</li>
<li>Azure Functions は Azure AD 認証を必須とする</li>
<li>フロントエンドアプリの Azure AD 認証を通したユーザは、<strong>追加の認証を通すことなく</strong>、フロントエンドアプリの認証情報を用いて Azure Functions を呼び出すことができる</li>
<li>フロントエンドアプリ、Azure Functions 双方は Azure App Service の組み込み認証を利用し、認証処理の一切をアプリケーションコードに組み込む必要がない</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="react-アプリの作成">React アプリの作成<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#react-%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="Direct link to React アプリの作成" title="Direct link to React アプリの作成">​</a></h3>
<p>以下の記事を参考に、<code>create-react-app</code> を用いてフロントエンドアプリを作成します。</p>
<ul>
<li>
<p><a href="https://learn.microsoft.com/ja-jp/azure/developer/javascript/how-to/with-web-app/static-web-app-with-swa-cli/create-react-app#create-react-app-with-npm-targeting-typescript" target="_blank" rel="noopener noreferrer">TypeScript を対象とする npm を使用した React アプリを作成する</a></p>
</li>
<li>
<p><a href="https://create-react-app.dev/docs/adding-typescript/#installation" target="_blank" rel="noopener noreferrer">Create React App / Adding TypeScript</a></p>
</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># create SPA app in spa directory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npx create-react-app react-ts --template typescript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># install dependencies</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd react-ts &amp;&amp; npm install</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># build an app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># run an app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="react-アプリのデプロイ">React アプリのデプロイ<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#react-%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AE%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4" class="hash-link" aria-label="Direct link to React アプリのデプロイ" title="Direct link to React アプリのデプロイ">​</a></h3>
<p>以下の記事を参考に、App Service に React のフロントエンドアプリをデプロイします。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/app-service/quickstart-html#create-a-web-app" target="_blank" rel="noopener noreferrer">Azure で静的 HTML Web アプリを作成する</a></li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># アプリのビルド</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npm run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># build 実行で生成された静的サイトが格納されたディレクトリに移動</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Azure CLI で Azure App Service にデプロイする</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">randomIdentifier="1128"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name="react$randomIdentifier"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resourceGroup="$name-rg"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">location="eastus"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># create resource group</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create --name $resourceGroup --location $location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># deploy web app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp up \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group $resourceGroup \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --plan "$name-plan" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name $name \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location $location \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku FREE \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --html</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="フロントエンドアプリから-azure-ad-認証を必要とする-api-を呼び出す">フロントエンドアプリから Azure AD 認証を必要とする API を呼び出す<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#%E3%83%95%E3%83%AD%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89%E3%82%A2%E3%83%97%E3%83%AA%E3%81%8B%E3%82%89-azure-ad-%E8%AA%8D%E8%A8%BC%E3%82%92%E5%BF%85%E8%A6%81%E3%81%A8%E3%81%99%E3%82%8B-api-%E3%82%92%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%99" class="hash-link" aria-label="Direct link to フロントエンドアプリから Azure AD 認証を必要とする API を呼び出す" title="Direct link to フロントエンドアプリから Azure AD 認証を必要とする API を呼び出す">​</a></h3>
<p><a href="https://learn.microsoft.com/ja-jp/azure/app-service/configure-authentication-oauth-tokens#retrieve-tokens-in-app-code" target="_blank" rel="noopener noreferrer">アプリ コードでのトークンの取得</a> に記載があるように、AAD 認証済クライアントは、<code>/.auth/me</code> にリクエストすることでアクセストークンを取得できます。</p>
<p>API コールのためにフロントエンドアプリコードで必要な実装は、以下の 2 点です。</p>
<ul>
<li><code>/.auth/me</code> にリクエストして <code>access_token</code> を取得</li>
<li>取得した <code>access_token</code> をヘッダに追加して Azure Functions を呼び出す</li>
</ul>
<p>実証実験のためのサンプルコードは以下の通りです。簡略化のためエラーハンドリング等は省略しています。</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter literal-property property" style="color:#36acaa">url</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> json </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token known-class-name class-name">ReferenceError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Empty response'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">json: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation known-class-name class-name">JSON</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation method function property-access" style="color:#d73a49">stringify</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation">json</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'access_token'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">callApi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter literal-property property" style="color:#36acaa">url</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">token</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">resp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            resp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">respStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">success: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">respStr</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> authUrl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://YOURAPP.azurewebsites.net/.auth/me'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">authUrl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">token: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> apiUrl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'https://YOURFUNC.azurewebsites.net/api/YOURFUNC?code=YOURCODE'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">callApi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiUrl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上記実装を追加した Pull Request はこちらです。</p>
<p><a href="https://github.com/ks6088ts-labs/react-ts/pull/4/files#diff-26ad4b834941d9b19ebf9db8082bd202aaf72ea0ddea85f5a8a0cb3c729cc6f2R7" target="_blank" rel="noopener noreferrer">support api call #4</a></p>
<p>動作確認したサンプルコードはこちらで公開しています。</p>
<p><a href="https://github.com/ks6088ts-labs/react-ts" target="_blank" rel="noopener noreferrer">github.com/ks6088ts-labs/react-ts</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="aad-認証の設定">AAD 認証の設定<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#aad-%E8%AA%8D%E8%A8%BC%E3%81%AE%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="Direct link to AAD 認証の設定" title="Direct link to AAD 認証の設定">​</a></h2>
<ul>
<li>App Service (=フロントエンドアプリ)<!-- -->
<ul>
<li><code>App Service &gt; 認証</code> に Microsoft の ID プロバイダーを登録<!-- -->
<ul>
<li>発行者の URL を空欄にする</li>
</ul>
</li>
<li><code>Azure AD &gt; 管理 &gt; API のアクセス許可</code> に API (=Azure Functions) のアクセス許可を追加</li>
<li><code>loginParameters</code> 設定を Azure Resource Explorer で書き換える。(Azure Functions のアプリケーション ID を追記)</li>
<li>参考: <a href="https://azureossd.github.io/2021/06/07/authsettingsv2-graph/" target="_blank" rel="noopener noreferrer">Accessing Microsoft Graph with App Service Auth V2</a></li>
</ul>
</li>
<li>Azure Functions (=API)<!-- -->
<ul>
<li><code>関数アプリ &gt; 設定 &gt; 認証</code> の ID プロバイダーに Microsoft を追加<!-- -->
<ul>
<li>発行者の URL を空欄にする</li>
</ul>
</li>
<li><code>Azure AD &gt; 管理 &gt; API のアクセス許可</code> に API (=Azure Functions) のアクセス許可を追加</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cors-設定">CORS 設定<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#cors-%E8%A8%AD%E5%AE%9A" class="hash-link" aria-label="Direct link to CORS 設定" title="Direct link to CORS 設定">​</a></h2>
<p>最新のブラウザーでは、クライアントで悪意のあるコードが実行されるのを防ぐために、Web アプリケーションから別のドメインで実行されるリソースへの要求をブロックします。</p>
<p>今回は、App Service にデプロイした静的サイトのドメインからのリクエストを許可するため、Azure Functions の CORS 設定を変更します。</p>
<p>具体的には、Azure ポータルにて、<code>関数アプリ &gt; API &gt; CORS</code> を開いて、許可される元のドメインに <code>https://YOURAPP.azurewebsites.net</code> を追加するだけです。</p>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/azure-functions/functions-how-to-use-azure-function-app-settings?tabs=portal#cors" target="_blank" rel="noopener noreferrer">お使いの Function App の管理 / クロス オリジン リソース共有</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="msal-を使う場合">MSAL を使う場合<a href="https://ks6088ts.github.io/en/blog/azure-ad-function-api#msal-%E3%82%92%E4%BD%BF%E3%81%86%E5%A0%B4%E5%90%88" class="hash-link" aria-label="Direct link to MSAL を使う場合" title="Direct link to MSAL を使う場合">​</a></h2>
<ul>
<li><a href="https://learn.microsoft.com/ja-jp/azure/active-directory/develop/tutorial-v2-react" target="_blank" rel="noopener noreferrer">チュートリアル: 認証コード フローを使用して、ユーザーをサインインさせて React シングルページ アプリ (SPA) から Microsoft Graph API を呼び出す</a></li>
<li><a href="https://github.com/Azure-Samples/ms-identity-javascript-react-spa" target="_blank" rel="noopener noreferrer">Azure-Samples/ms-identity-javascript-react-spa</a></li>
<li><a href="https://www.smcculloch.com/how-to-call-aad-protected-azure-function-from-react#:~:text=How%20to%20call%20an%20AAD%20protected%20Azure%20Function,...%205%20Step%205%3A%20Obtain%20Access%20Token%20" target="_blank" rel="noopener noreferrer">How to call an AAD protected Azure Function from React</a></li>
</ul>
<p>実装に際しては上記ドキュメントをご参照ください。
MSAL ライブラリをアプリケーション側に組み込むため以下の対応が必要になります。</p>
<ul>
<li>リソース変更の度に ID 設定変更を入れてフロントエンドアプリをリビルドする</li>
<li>依存ライブラリの更新があったら都度更新する</li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-ad" term="azure-ad"/>
        <category label="msal" term="msal"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Container Apps ハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/container-apps-handson</id>
        <link href="https://ks6088ts.github.io/en/blog/container-apps-handson"/>
        <updated>2023-03-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure Container Apps を使ってマルチコンテナアプリケーションのハンズオンをしました。]]></summary>
        <content type="html"><![CDATA[<p>Azure Container Apps を使ってマルチコンテナアプリケーションのハンズオンをしました。</p>
<p>Azure Container Apps は Kubernetes の実装詳細を隠蔽し、簡単にマルチコンテナアプリケーションをデプロイできるサービスです。<br>
<!-- -->素の Kubernetes を使うとケアしなければならなかったことが、Azure Container Apps によって隠蔽されていて、やりたいことを実現するために必要な知識が少なくなっています。<br>
<!-- -->サービスの詳細は <a href="https://learn.microsoft.com/ja-jp/azure/container-apps/overview" target="_blank" rel="noopener noreferrer">Azure Container Apps の概要</a> にあります。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="https://ks6088ts.github.io/en/blog/container-apps-handson#%E3%83%8F%E3%83%B3%E3%82%BA%E3%82%AA%E3%83%B3" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2>
<p>個人的には座学よりは手を動かす方が早く理解できるので、<a href="https://amzn.to/3lgDTca" target="_blank" rel="noopener noreferrer">Azureコンテナアプリケーション開発</a> を買ってハンズオンをしてみました。</p>
<p>『Azure コンテナアプリケーション開発』（技術評論社，2023 年）のサンプルコードは <a href="https://github.com/gihyo-book/azure-container-dev-book" target="_blank" rel="noopener noreferrer">github.com/gihyo-book/azure-container-dev-book</a> にあります。<br>
<!-- -->dev container もあるので、VS Code で開くと環境が一気に整います。<br>
<!-- -->ハンズオンで実行する Azure CLI コマンドは <a href="https://github.com/gihyo-book/azure-container-dev-book/blob/main/apps/part3/README.azcli" target="_blank" rel="noopener noreferrer">azure-container-dev-book/apps/part3/README.azcli</a> にあります。dev container から逐次実行して動作確認しました。</p>
<p>コンテナアプリケーションのバージョン管理やアップデート戦略などの解説もあり、Azure Container Apps の概要を知るのには十分な内容だと思いました。
Kubernetes の場合はサービスメッシュを導入してトラフィックコントロールが Azure Container Apps では簡単にできます。
また、カナリアリリースやリビジョン管理など、マルチコンテナアプリケーションの開発に必要な機能が揃っていることを理解できました。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考リンク">参考リンク<a href="https://ks6088ts.github.io/en/blog/container-apps-handson#%E5%8F%82%E8%80%83%E3%83%AA%E3%83%B3%E3%82%AF" class="hash-link" aria-label="Direct link to 参考リンク" title="Direct link to 参考リンク">​</a></h2>
<ul>
<li><a href="https://techblog.ap-com.co.jp/entry/2021/11/03/093821" target="_blank" rel="noopener noreferrer">Azure Container Appsを試してみた</a>
<ul>
<li>Azure Portal から試した例</li>
</ul>
</li>
<li><a href="https://techblog.ap-com.co.jp/entry/2023/02/10/155135" target="_blank" rel="noopener noreferrer">TerraformでAzure Container Appsがサポートされたので爆速でデプロイする</a>
<ul>
<li>Terraform でデプロイした例。AzureRM Provider の v.3.43.0 からサポートされてすぐに記事が出ていて非常に助かりました。</li>
</ul>
</li>
<li><a href="https://techblog.ap-com.co.jp/entry/2022/09/01/120000" target="_blank" rel="noopener noreferrer">Azure Container AppsでCI/CD(GitHub Actions編)</a>
<ul>
<li>GitHub Actions でコンテナイメージをビルドして ACR へ格納し、そのイメージを Container Apps へデプロイする例</li>
</ul>
</li>
<li><a href="https://github.com/Azure-Samples/todo-nodejs-mongo-aca" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-aca</a>
<ul>
<li>Azure Developer CLI でデプロイできる ACA を使ったサンプルアプリケーション</li>
</ul>
</li>
</ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="container" term="container"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[テンプレートから学ぶ Azure ~ Web API 編 ~]]></title>
        <id>https://ks6088ts.github.io/en/blog/learn-from-template-webapi</id>
        <link href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi"/>
        <updated>2023-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[簡単な TODO アプリのテンプレートから Azure を学ぶシリーズ。]]></summary>
        <content type="html"><![CDATA[<p>簡単な TODO アプリのテンプレートから Azure を学ぶシリーズ。
今回は <a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-terraform</a>を触って勉強します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="目的">目的<a href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi#%E7%9B%AE%E7%9A%84" class="hash-link" aria-label="Direct link to 目的" title="Direct link to 目的">​</a></h2>
<p>簡単な TODO アプリのテンプレートをデプロイして、実動作とソースコードを確かめつつ、Azure の基本的な機能を学びます。
アーキテクチャ図は以下の通りです。</p>
<p><img decoding="async" loading="lazy" src="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform/raw/main/assets/resources.png" alt="architecture" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="デプロイ">デプロイ<a href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi#%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4" class="hash-link" aria-label="Direct link to デプロイ" title="Direct link to デプロイ">​</a></h2>
<p>まずは <a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform/blob/main/README.md" target="_blank" rel="noopener noreferrer">README.md</a> を読み、デプロイ手順を確認します。</p>
<p>このリポジトリは <code>azd</code> 対応なので、コマンド一発でデプロイできます。
azd については、<a href="https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started">Azure Developer CLI による開発プロセスの高速化</a>を参照してください。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># リポジトリを clone</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone git@github.com:Azure-Samples/todo-nodejs-mongo-terraform.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cd todo-nodejs-mongo-terraform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># APIM を使いたいので環境変数を設定</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd env set USE_APIM true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># デプロイ</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上で Azure 上にリソースが作成され、デプロイが完了します。
デプロイされた API サーバーや Web アプリにアクセスして動作確認します。</p>
<ul>
<li>API サーバーにアクセス(Swagger UI が開く): <code>https://app-api-{RESOURCE_TOKEN}.azurewebsites.net/</code></li>
<li>Web サーバーにアクセス(Web アプリが開く): <code>https://app-web-{RESOURCE_TOKEN}.azurewebsites.net/</code></li>
</ul>
<p>また、コマンドラインから動作メトリクスを確認できます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Azure Dashboard を開く</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd monitor --overview</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Application Insights の Live metrics stream を開く</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd monitor --live</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Application Insights の Logs を開く</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd monitor --logs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="コードを読む">コードを読む<a href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi#%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E8%AA%AD%E3%82%80" class="hash-link" aria-label="Direct link to コードを読む" title="Direct link to コードを読む">​</a></h2>
<p><code>azd</code> 対応なプロジェクトは、ディレクトリ構造に規則性があるのでソースコードが読みやすいです。
一例として自分のコードの読み方を紹介します。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="iac-コードの概要をつかむ">IaC コードの概要をつかむ<a href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi#iac-%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E6%A6%82%E8%A6%81%E3%82%92%E3%81%A4%E3%81%8B%E3%82%80" class="hash-link" aria-label="Direct link to IaC コードの概要をつかむ" title="Direct link to IaC コードの概要をつかむ">​</a></h3>
<p>インフラ側のリソース定義は、<code>infra/</code> 以下にあります。
<a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform/blob/main/infra/main.tf" target="_blank" rel="noopener noreferrer">infra/main.tf</a> がプログラムのエントリポイントになっていて、ここで定義される各種 module の実装詳細は <code>modules/</code> 以下に配置されています。</p>
<p>細部を読み込む前に、まずはこの main.tf を読んで全体像を把握しておきましょう。
ここでは一例として <code>applicationinsights</code> を見てみます。</p>
<div class="language-terraform codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-terraform codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">module "applicationinsights" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  source           = "./modules/applicationinsights"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location         = var.location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rg_name          = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  environment_name = var.environment_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  workspace_id     = module.loganalytics.LOGANALYTICS_WORKSPACE_ID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tags             = azurerm_resource_group.rg.tags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resource_token   = local.resource_token</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ここで引数として指定されている <code>module.loganalytics.LOGANALYTICS_WORKSPACE_ID</code> に注目します。<br>
<!-- -->これは applicationinsights が loganalytics に依存していることを意味します。
すべてを頭に入れるのは大変なので、どのモジュールがどのような方向で依存を張っているのかの概要をざっくり把握しておくと、後々の細部の理解が楽になります。<br>
<!-- -->(図に書いてモジュール間の依存を矢印で書くと良いです)</p>
<p>Web アプリケーションと API サーバーの実装は、<code>modules/appservicenode/</code> 以下にあります。
それぞれ環境変数として参照しているパラメータから依存関係が判ります。
以下は API サーバーの設定値です。</p>
<div class="language-terraform codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-terraform codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  app_settings = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "AZURE_COSMOS_CONNECTION_STRING_KEY"    = local.cosmos_connection_string_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "AZURE_COSMOS_DATABASE_NAME"            = module.cosmos.AZURE_COSMOS_DATABASE_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "SCM_DO_BUILD_DURING_DEPLOYMENT"        = "true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "AZURE_KEY_VAULT_ENDPOINT"              = module.keyvault.AZURE_KEY_VAULT_ENDPOINT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "APPLICATIONINSIGHTS_CONNECTION_STRING" = module.applicationinsights.APPLICATIONINSIGHTS_CONNECTION_STRING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>ざっくり以下のことが分ります。</p>
<ul>
<li><code>module.cosmos</code>, <code>AZURE_COSMOS_CONNECTION_STRING_KEY</code> から Cosmos DB に依存</li>
<li><code>AZURE_KEY_VAULT_ENDPOINT</code> から Key Vault に依存</li>
<li><code>module.applicationinsights.APPLICATIONINSIGHTS_CONNECTION_STRING</code> から Application Insights に依存</li>
</ul>
<p><code>azd up</code> で作成された各種リソースは <code>.azure/ENVIRONMENT_NAME/terraform.tfstate</code> に記録されていますので、実際に設定された個々のパラメータを確認できます。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wip-azureyaml-の-services-のビルドプロセスについて">WIP: azure.yaml の services のビルドプロセスについて<a href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi#wip-azureyaml-%E3%81%AE-services-%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6" class="hash-link" aria-label="Direct link to WIP: azure.yaml の services のビルドプロセスについて" title="Direct link to WIP: azure.yaml の services のビルドプロセスについて">​</a></h3>
<p><code>azd</code> は、<code>azure.yaml</code> に定義された <code>services</code> のビルドプロセスを自動化しています。
挙動の詳細は把握し次第追記します。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="terraform" term="terraform"/>
        <category label="azure" term="azure"/>
        <category label="apim" term="apim"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PowerShell スクリプト開発環境の構築]]></title>
        <id>https://ks6088ts.github.io/en/blog/powershell-development-environment</id>
        <link href="https://ks6088ts.github.io/en/blog/powershell-development-environment"/>
        <updated>2023-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PowerShell スクリプト開発環境の構築にあたり、便利なツールや環境を紹介します。]]></summary>
        <content type="html"><![CDATA[<p>PowerShell スクリプト開発環境の構築にあたり、便利なツールや環境を紹介します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="エディタ">エディタ<a href="https://ks6088ts.github.io/en/blog/powershell-development-environment#%E3%82%A8%E3%83%87%E3%82%A3%E3%82%BF" class="hash-link" aria-label="Direct link to エディタ" title="Direct link to エディタ">​</a></h2>
<p>Syntax highlighting、インテリセンスなどを有効にするため、<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell" target="_blank" rel="noopener noreferrer">PowerShell for Visual Studio Code</a>をインストールして VS Code 上で開発します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="ドキュメント">ドキュメント<a href="https://ks6088ts.github.io/en/blog/powershell-development-environment#%E3%83%89%E3%82%AD%E3%83%A5%E3%83%A1%E3%83%B3%E3%83%88" class="hash-link" aria-label="Direct link to ドキュメント" title="Direct link to ドキュメント">​</a></h2>
<p>基本的には、<a href="https://learn.microsoft.com/ja-jp/powershell/" target="_blank" rel="noopener noreferrer">PowerShell Documentation</a>の公式情報を参照します。
具体的な文法や使い方に関してサンプルコードを見たい場合は、<a href="https://learn.microsoft.com/ja-jp/powershell/scripting/learn/deep-dives/everything-about-arrays" target="_blank" rel="noopener noreferrer">~について知りたかったことのすべて</a>を参照すると良いです。
PowerShell スクリプト開発のベストプラクティスを知りたい場合は、<a href="https://poshcode.gitbook.io/powershell-practice-and-style/" target="_blank" rel="noopener noreferrer">PowerShell Best Practices and Style Guide</a> が参考になります。</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="code-snippets">Code snippets<a href="https://ks6088ts.github.io/en/blog/powershell-development-environment#code-snippets" class="hash-link" aria-label="Direct link to Code snippets" title="Direct link to Code snippets">​</a></h3>
<p>個人的によく使うスニペット集を作成して、コード資産を使いまわすと効率的です。
細かい文法などは触っていないと忘れがちなので、よく使うスニペットは使いまわせるようにしておくとよいでしょう。</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Install PowerShell modules</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env pwsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host "Running "$MyInvocation.MyCommand.Name" ..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$modules = @(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Microsoft.Graph"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Pester"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foreach ($module in $modules) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Write-Host "Installing $module"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Install-Module -Name $module -Scope CurrentUser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">PowerShell module: mymodule.psm1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># mymodule のバージョン</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$global:MyModuleVersion = "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function Initialize-MyModule {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # do something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Variable MyModuleVersion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Function Initialize-MyModule</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">PowerShell script: client.test.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># unit test by Pester</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using module "./mymodule.psm1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Describe "Smoke test" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Context "Nominal case" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        It "Check global variables" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # version variable settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $MyModuleVersion | Should Be "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="静的解析">静的解析<a href="https://ks6088ts.github.io/en/blog/powershell-development-environment#%E9%9D%99%E7%9A%84%E8%A7%A3%E6%9E%90" class="hash-link" aria-label="Direct link to 静的解析" title="Direct link to 静的解析">​</a></h2>
<p><a href="https://github.com/PowerShell/PSScriptAnalyzer" target="_blank" rel="noopener noreferrer">PowerShell/PSScriptAnalyzer</a>をインストールします。</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Install-Module -Name PSScriptAnalyzer -Scope CurrentUser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>使い方は <a href="https://qiita.com/nimzo6689/items/1c55c6782027a78a51e5" target="_blank" rel="noopener noreferrer">PSScriptAnalyzerを使ってPowerShellのコードをキレイに保とう</a>を参照します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="テスト">テスト<a href="https://ks6088ts.github.io/en/blog/powershell-development-environment#%E3%83%86%E3%82%B9%E3%83%88" class="hash-link" aria-label="Direct link to テスト" title="Direct link to テスト">​</a></h2>
<p>ユニットテストフレームワークとして<a href="https://pester.dev/docs/quick-start/" target="_blank" rel="noopener noreferrer">Pester / Quick Start</a>を使います。</p>
<div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Install-Module -Name Pester -Scope CurrentUser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docker">Docker<a href="https://ks6088ts.github.io/en/blog/powershell-development-environment#docker" class="hash-link" aria-label="Direct link to Docker" title="Direct link to Docker">​</a></h2>
<p>PowerShell スクリプトの再現性担保のために、Docker コンテナ上で開発したい場合、ベースとなるコンテナイメージは <a href="https://mcr.microsoft.com/en-us/product/powershell/tags" target="_blank" rel="noopener noreferrer">mcr.microsoft.com/powershell</a> にあります。必要な tag を指定して利用してください。
特に、PowerShell module が廃止になる場合、その module の依存を剥がす開発をする場合などで重宝しました。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="powershell" term="powershell"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Developer CLI による開発プロセスの高速化]]></title>
        <id>https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started</id>
        <link href="https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started"/>
        <updated>2023-03-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[実際に Azure Developer CLI を使ってみて良かった点や、参考となるサイトについて纏めます。]]></summary>
        <content type="html"><![CDATA[<p>実際に Azure Developer CLI を使ってみて良かった点や、参考となるサイトについて纏めます。</p>
<p>Azure Developer CLI (以下、<code>azd</code>) は、Azure 上でクラウドアプリをビルドするプロセスを高速化するオープンソースツールです。<br>
<!-- -->規定のディレクトリ構造をもつテンプレートプロジェクトを指定して、<code>azd</code> コマンドを実行することでテンプレートを Azure 上にデプロイできます。<br>
<!-- -->これらのテンプレートは、アプリケーションコード・IaC ファイル(<code>Bicep</code> or <code>Terraform</code>)・プロジェクト構造を記述する <code>azure.yaml</code> ファイルから構成されます。<br>
<!-- -->こちらでは簡単な使い方が紹介されています。</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/VTk-FhJyo7s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe>
<p><code>azd</code> を使うとテンプレートのアプリケーションを簡単かつ再現性のある形でデプロイできます。<br>
<!-- -->やりたいことに近しいプロジェクトのテンプレートを探して、そこから設定変更やソースコードの微修正していくと、開発工数が大幅に削減できます。</p>
<p><a href="https://github.com/Azure/awesome-azd" target="_blank" rel="noopener noreferrer">Azure/awesome-azd</a>には azd 関連のブログ記事や動画などの情報がまとまっています。<br>
<code>azd</code> 互換なテンプレートは以下のリンクから探せます。</p>
<ul>
<li><a href="https://aka.ms/awesome-azd" target="_blank" rel="noopener noreferrer">Awesome AZD Templates Gallery</a>: azd 互換なテンプレートが検索可能なサイト</li>
<li><a href="https://github.com/topics/azd-templates" target="_blank" rel="noopener noreferrer">Azure Developer CLI templates</a>: GitHub で <code>Azure Developer CLI templates</code> topic がついているもの</li>
</ul>
<h1>Azure Developer CLI のハンズオン</h1>
<p>ハンズオンといってもツールのインストールとコマンドの実行だけなので数分で完結します。<br>
<!-- -->まずは <code>azd</code> をインストールします。<br>
<a href="https://learn.microsoft.com/ja-jp/azure/developer/azure-developer-cli/install-azd?tabs=localinstall%2Cwindows%2Cbrew" target="_blank" rel="noopener noreferrer">Azure Developer CLIをインストールする (プレビュー)</a> を参考に、開発環境の OS に応じたインストール手順を実行し、<code>azd</code> コマンドが通ることを確認してください。<br>
<!-- -->たとえば Linux/macOS の場合は以下のコマンドでインストールできます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">azd のインストール</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl -fsSL https://aka.ms/install-azd.sh | bash</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>次に <code>azd</code> コマンドを使って Azure にログインし、認証情報を取得します。<br>
<!-- -->以下のコマンドを実行するとブラウザからログインできます。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Azure にログイン</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ azd login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Logged in to Azure.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>適当なテンプレートを指定して <code>azd</code> で Azure にデプロイします。<br>
<!-- -->ここでは <a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-terraform</a> を指定します。<br>
<code>azd up</code> でプロジェクトの初期化、プロビジョニング、デプロイを実行します。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">azd でデプロイ</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ azd up --template todo-nodejs-mongo-terraform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Initializing a new project (azd init)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  (✓) Done: Initialized git repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  (✓) Done: Downloading template code to: ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please enter a new environment name: handson_test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please enter a new environment name: handson_test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select an Azure Subscription to use:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please select an Azure location to use:  9. (Asia Pacific) Japan East (japaneast)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Provisioning Azure resources (azd provision)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Provisioning Azure resources can take some time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>--template</code> の指定方法は、<code>Azure-Samples/</code> 配下のサンプルであれば上記のようにリポジトリ名だけで実行できます。また、<code>https://github.com/Azure-Samples/todo-nodejs-mongo-terraform</code> のように URI をフルで指定もできます。</p>
<p>なお、<code>azd up</code> は以下のコマンドを個別に実行することと等価です。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ azd init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ azd provision</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ azd deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>公式の <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azure-dev" target="_blank" rel="noopener noreferrer">VS Code extension</a> もあるので、VS Code 上の操作で <code>azd</code> の各種コマンドを実行できます。</p>
<h1>何が嬉しいのか</h1>
<p>今時、新規プロジェクト立ち上げようとすると、CI/CD pipeline、dev container、vscode 設定、linter/formatter、IaC など、やることが多いです。<br>
<!-- -->ほとんどの作業は定型的な作業ではあるので、この辺を丸っと抽象化して適切なデフォルト設定をテンプレート側で与えてくれる点が嬉しいポイントです。</p>
<p>テンプレートを取っ掛かりにして、必要な変更をソースコードに入れたり、設定値をチューニングするだけでやりたいことに早く近づけます。<br>
<!-- -->今後さらに azd 互換なテンプレートが増えればその勢いは増していきます。</p>
<p>この手の scaffolding ツールは既に世の中にあり、template repo を fork したり cookiecutter を使うのとほぼ等価ではあります。が、以下の点が <code>azd</code> ならではのメリットです。</p>
<ul>
<li>利用者は CLI で完結して作業できる</li>
<li>テンプレートのディレクトリ階層の規約があるので利用者の認知負荷が低い</li>
</ul>
<p><a href="https://github.com/Azure/reliable-web-app-pattern-dotnet" target="_blank" rel="noopener noreferrer">Azure/reliable-web-app-pattern-dotnet</a> のように production grade なものも開発されています。<br>
<!-- -->Azure ユーザーの生産性を向上させるエコシステムの発展が、より多くのことを少ない手間で実現するための一助になるのではと期待しています。</p>
<h1>TODO</h1>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azd-互換プロジェクトの作成">azd 互換プロジェクトの作成<a href="https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started#azd-%E4%BA%92%E6%8F%9B%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90" class="hash-link" aria-label="Direct link to azd 互換プロジェクトの作成" title="Direct link to azd 互換プロジェクトの作成">​</a></h2>
<p><a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/make-azd-compatible?pivots=azd-create#azd-conventions" target="_blank" rel="noopener noreferrer"><code>azd</code> conventions</a>に従ってプロジェクトを作成します。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="azd-に-contribute-する">azd に contribute する<a href="https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started#azd-%E3%81%AB-contribute-%E3%81%99%E3%82%8B" class="hash-link" aria-label="Direct link to azd に contribute する" title="Direct link to azd に contribute する">​</a></h2>
<p>CLI と extension は monorepo 構成で<a href="https://github.com/Azure/azure-dev" target="_blank" rel="noopener noreferrer">Azure/azure-dev</a>にて開発されています。
extension は TypeScript、azd 本体は Go で書かれています。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azd" term="azd"/>
    </entry>
</feed>