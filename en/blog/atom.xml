<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ks6088ts.github.io/en/blog</id>
    <title>ks6088ts Blog</title>
    <updated>2023-05-01T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ks6088ts.github.io/en/blog"/>
    <subtitle>ks6088ts Blog</subtitle>
    <icon>https://ks6088ts.github.io/en/https://github.com/ks6088ts.png</icon>
    <entry>
        <title type="html"><![CDATA[Azure OpenAI Service を利用した ChatGPT お試し環境の構築]]></title>
        <id>https://ks6088ts.github.io/en/blog/fork-azure-openai-playground</id>
        <link href="https://ks6088ts.github.io/en/blog/fork-azure-openai-playground"/>
        <updated>2023-05-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure OpenAI Service を利用した ChatGPT の試用環境を作成してみました。]]></summary>
        <content type="html"><![CDATA[<p>Azure OpenAI Service を利用した ChatGPT の試用環境を作成してみました。<br>
<!-- -->ChatGPT を体験する環境としては、既に OpenAI でも Azure OpenAI Service でも使い勝手のいいウェブアプリがあり、ブラウザとアカウントさえあればすぐに試せます。</p><ul><li>OpenAI: <a href="https://chat.openai.com/" target="_blank" rel="noopener noreferrer">ChatGPT のウェブアプリ</a>, <a href="https://platform.openai.com/playground" target="_blank" rel="noopener noreferrer">Playground</a></li><li>Azure: <a href="https://oai.azure.com/portal" target="_blank" rel="noopener noreferrer">Azure OpenAI Studio</a></li></ul><p>個人的なお試しという観点ですとこれらのウェブアプリを利用するだけで十分なのですが、業務への適用を視野に入れて、広く組織内で試用するユースケースを考えると様々な課題が出てきます。  </p><p>例えば、シンプルに API Token を払い出してそのまま使う方法ですと、万が一 API Token が漏洩した場合に不正利用を防ぐことができません。<br>
<!-- -->また、ユーザーを組織内のメンバーに限定したい場合、何らかの方法で認証する必要がでてきます。  </p><p>これらの課題に対してゼロから取り組むと、本来の目的である ChatGPT の試用に割く時間が減ってしまいます。<br>
<!-- -->そこで、本記事では業務上の PoC 利用を見据え、Azure OpenAI Service を使った OpenAI API の試用環境の構築方法をサンプルコード付きで紹介します。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要">概要<a href="#概要" class="hash-link" aria-label="Direct link to 概要" title="Direct link to 概要">​</a></h2><p>以下のようなアーキテクチャで構築します。</p><p><img loading="lazy" alt="architecture" src="/en/assets/images/architecture-9cbab4a2330d76bdcd550c55275efa4d.png" width="3497" height="2235" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="#ハンズオン" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2><p>作業手順は以下の通りです。</p><ol><li>Azure OpenAI Service のリソースを作成する</li><li>アプリケーションを開発する</li><li>App Service にデプロイする</li><li>App Service で実行されている Web アプリに認証を追加する</li><li>プライベートエンドポイントの設定を追加する</li><li>App Service の VNET 統合設定を追加する</li></ol><p>以下では、これら手順について順に見ていきます。
作業が完了したら App Service の URL にアクセスして、ChatGPT を試してみましょう。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-azure-openai-service-のリソースを作成する">1. Azure OpenAI Service のリソースを作成する<a href="#1-azure-openai-service-のリソースを作成する" class="hash-link" aria-label="Direct link to 1. Azure OpenAI Service のリソースを作成する" title="Direct link to 1. Azure OpenAI Service のリソースを作成する">​</a></h3><p><a href="https://learn.microsoft.com/ja-jp/azure/cognitive-services/openai/how-to/create-resource?pivots=cli" target="_blank" rel="noopener noreferrer">Azure OpenAI を使用してリソースを作成し、モデルをデプロイする</a>を参考に、Azure Portal から Azure OpenAI Service を作成します。
ここで払い出した Azure Open AI のリソース名、デプロイしたモデルの名前、API キーは後で利用します。</p><p>Azure Portal にある Azure OpenAI Studio で簡単にブラウザからデプロイしたモデルを使った動作確認ができます。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-アプリケーションを開発する">2. アプリケーションを開発する<a href="#2-アプリケーションを開発する" class="hash-link" aria-label="Direct link to 2. アプリケーションを開発する" title="Direct link to 2. アプリケーションを開発する">​</a></h3><p>OpenAI のチャットのフォームや Playground のパラメータ設定 UI など、必要な UI コンポーネントはそれなりに多く、フロントエンドアプリをゼロから書くと結構な工数になります。<br>
<!-- -->フロントエンドアプリの実装は目的ではないので、ひとまず最短で目的が達成されることを優先するため良さそうな OSS を探します。<br>
<!-- -->GitHub で Star 数でソートすると先人たちが評価しているものが簡単に見つかります。</p><p><a href="https://github.com/Nashex/gpt4-playground" target="_blank" rel="noopener noreferrer">Nashex/gpt4-playground</a>という OpenAI 提供の ChatGPT アプリや Playground をクローンした OSS が見つかりましたので、これをベースに作業します。<br>
<!-- -->demo サイト (<a href="https://www.gpt4-playground.com/" target="_blank" rel="noopener noreferrer">GPT-4 Playground</a>) もあって、今回の目的にほぼ合致してそうです。<br>
<!-- -->この OSS を fork して、OpenAI API をコールしている箇所を Azure OpenAI Service を利用するように変更すればサクッと動きそうです。<br>
<a href="https://github.com/Nashex/gpt4-playground/blob/main/src/utils/OpenAI/OpenAI.ts#L28" target="_blank" rel="noopener noreferrer">gpt4-playground/src/utils/OpenAI/OpenAI.ts</a> がそれに該当します。</p><div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">gpt4-playground/src/utils/OpenAI/OpenAI.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> response </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"https://api.openai.com/v1/chat/completions"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string-property property" style="color:#36acaa">"Content-Type"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    method</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"POST"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>fetch 先 url とリクエストヘッダの <code>Authorization</code> を <code>api-key</code> に書き換えるだけです。
最終的に Docker イメージにしてデプロイする予定だったので、API KEY のような秘匿情報は環境変数で隔離します。<br>
<!-- -->Next.js フレームワークを採用しているため、環境変数の設定方法は、<a href="https://nextjs.org/docs/basic-features/environment-variables" target="_blank" rel="noopener noreferrer">Next.js のドキュメント</a>を参照して設定します。</p><p>ローカル環境で動作が確認できたら、Dockerfile を書いてコンテナ化して Docker Hub に push しておきます。<br>
<!-- -->イメージを作成する際、Next.js の production build を実行して、その成果物をイメージに配置する必要があります。</p><p>fork して改変したアプリのソースコードは <a href="https://github.com/ks6088ts-labs/azure-openai-playground" target="_blank" rel="noopener noreferrer">ks6088ts-labs/azure-openai-playground</a> に公開しています。<br>
<!-- -->Docker イメージは<a href="https://hub.docker.com/r/ks6088ts/azure-openai-playground" target="_blank" rel="noopener noreferrer">ks6088ts/azure-openai-playground</a>で公開しています。<br>
<!-- -->手元で動かしたいだけであれば、Azure OpenAI Service のリソースを払い出したあと、以下のワンライナーでサービスの動作確認ができます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># run the following command and access to localhost:3000 with your browser</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">docker</span><span class="token plain"> run --platform</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">linux/amd64 --rm </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -p </span><span class="token string" style="color:#e3116c">"3000:3000"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env </span><span class="token string" style="color:#e3116c">"AZURE_OPENAI_API_KEY=&lt;YOUR API KEY&gt;"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env </span><span class="token string" style="color:#e3116c">"AZURE_OPENAI_NAME=&lt;YOUR AOAI NAME&gt;"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --env </span><span class="token string" style="color:#e3116c">"AZURE_OPENAI_DEPLOYMENT_NAME=&lt;YOUR DEPLOYMENT NAME&gt;"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ks6088ts/azure-openai-playground:0.0.2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-app-service-にデプロイする">3. App Service にデプロイする<a href="#3-app-service-にデプロイする" class="hash-link" aria-label="Direct link to 3. App Service にデプロイする" title="Direct link to 3. App Service にデプロイする">​</a></h3><p>2 で実装したアプリを、Azure App Service で公開します。
ここでは Docker Hub にある Docker コンテナイメージを App Service に pull して公開するシナリオとなります。</p><p>Azure CLI でコマンドを以下のように実行していきます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># リソースグループを作成する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># App Service Plan を作成する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az appservice plan create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$APP_SERVICE_PLAN_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location japaneast </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku B1 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --is-linux</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># App Service を作成する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$APP_SERVICE_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --plan </span><span class="token variable" style="color:#36acaa">$APP_SERVICE_PLAN_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --deployment-container-image-name </span><span class="token variable" style="color:#36acaa">$CONTAINER_IMAGE_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># App Service の環境変数を設定する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp config appsettings </span><span class="token builtin class-name">set</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$APP_SERVICE_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --settings </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">WEBSITES_PORT</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">3000</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">AZURE_OPENAI_API_KEY</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$AZURE_OPENAI_API_KEY</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">AZURE_OPENAI_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$AZURE_OPENAI_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token assign-left variable" style="color:#36acaa">AZURE_OPENAI_DEPLOYMENT_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$AZURE_OPENAI_DEPLOYMENT_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 設定を反映させるために App Service を再起動する</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp restart </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$APP_SERVICE_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>これで、App Service の URL にアクセスすると、先ほどローカルで動かしたときと同じように動作するはずです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-app-service-で実行されている-web-アプリに認証を追加する">4. App Service で実行されている Web アプリに認証を追加する<a href="#4-app-service-で実行されている-web-アプリに認証を追加する" class="hash-link" aria-label="Direct link to 4. App Service で実行されている Web アプリに認証を追加する" title="Direct link to 4. App Service で実行されている Web アプリに認証を追加する">​</a></h3><p>App Service では組み込みの認証(=EasyAuth)と承認がサポートされているため、Web アプリでコードをまったく記述せずにユーザーをサインインさせることができます。<br>
<!-- -->手順は<a href="https://learn.microsoft.com/ja-jp/azure/app-service/scenario-secure-app-authentication-app-service" target="_blank" rel="noopener noreferrer">チュートリアル: Azure App Service で実行されている Web アプリにアプリの認証を追加する</a>を参照ください。</p><p>Azure Portal から <code>AppService &gt; Authentication &gt; Add identity provider</code> と辿って所望の認証プロバイダを追加するだけです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-プライベートエンドポイントの設定を追加する">5. プライベートエンドポイントの設定を追加する<a href="#5-プライベートエンドポイントの設定を追加する" class="hash-link" aria-label="Direct link to 5. プライベートエンドポイントの設定を追加する" title="Direct link to 5. プライベートエンドポイントの設定を追加する">​</a></h3><p>Azure Virtual Network (VNet)経由のプライベートネットワーク接続に限定して Azure OpenAI Service を利用できるように設定します。
プライベートネットワーク限定で利用することで、万が一 API Key が漏れたとしても外部からのリソースの不正利用を防ぐことができます。  </p><p>手順は<a href="https://blog.jbs.co.jp/entry/2023/04/07/173940" target="_blank" rel="noopener noreferrer">Azure OpenAIにプライベートエンドポイント（Private Endpoint）を設定して東日本リージョンの仮想ネットワークのみから使う</a>を参照ください。</p><p><img loading="lazy" src="https://cdn-ak.f.st-hatena.com/images/fotolife/j/jbs_eueda/20230405/20230405133001.png" class="img_ev3q"></p><p>Azure OpenAI Service 側の設定としては、Azure Portal から以下の操作を実施すれば良さそうでした。</p><ul><li><code>Azure OpenAI &gt; Networking &gt; Firewalls and virtual networks &gt; Disabled</code> に設定し、Private Endpoint を有効化する</li><li><code>Azure OpenAI &gt; Networking &gt; Private endpoint connections &gt; + Private endpoint</code> から Private Endpoint を作成する</li></ul><p>Azure OpenAI Playground から API が呼び出せないことも確認できました。<br>
<!-- -->ネットワーク周りの設定は即時反映では無いので少し待ってから確認する必要があります。<br>
<!-- -->レスポンスの中身も確認したかったので curl で直接 REST API を叩いてみました。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"https://</span><span class="token string variable" style="color:#36acaa">${AOAI_NAME}</span><span class="token string" style="color:#e3116c">.openai.azure.com/openai/deployments/</span><span class="token string variable" style="color:#36acaa">${MODEL_NAME}</span><span class="token string" style="color:#e3116c">/completions?api-version=2022-12-01"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H </span><span class="token string" style="color:#e3116c">'api-key: your-api-key'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -H </span><span class="token string" style="color:#e3116c">'content-type: application/json'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --data-raw </span><span class="token string" style="color:#e3116c">'{"prompt":"Write a product launch email for new AI-powered headphones that are priced at $79.99 and available at Best Buy, Target and Amazon.com. The target audience is tech-savvy music lovers and the tone is friendly and exciting.\n\n1. What should be the subject line of the email?  \n2. What should be the body of the email?","temperature":1,"top_p":1,"frequency_penalty":0,"presence_penalty":0,"max_tokens":350,"stop":null,"stream":true}'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  --compressed -vvvv</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>レスポンスの中に以下の情報がありましたので、Private Endpoint が確かに有効になっていそうです。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">`policy-id: ThrowExceptionDueToTrafficDenied`</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">`{"error":{"code":"AccessDenied","message": "Public access is disabled. Please configure private endpoint."}}`</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-app-service-の-vnet-統合設定を追加する">6. App Service の VNET 統合設定を追加する<a href="#6-app-service-の-vnet-統合設定を追加する" class="hash-link" aria-label="Direct link to 6. App Service の VNET 統合設定を追加する" title="Direct link to 6. App Service の VNET 統合設定を追加する">​</a></h3><p><a href="https://techblog.ap-com.co.jp/entry/2021/03/12/150117" target="_blank" rel="noopener noreferrer">【Azure】App ServiceのVNet統合とプライベートリンクを利用した通信閉域化</a>を参考に、App Service で VNet 接続します。<br>
<code>AppService &gt; Networking &gt; Outbound Traffic &gt; VNet integration &gt; + Add VNet</code> から VNet を追加します。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-ad" term="azure-ad"/>
        <category label="azure-openai-service" term="azure-openai-service"/>
        <category label="app-service" term="app-service"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PowerShell 開発入門]]></title>
        <id>https://ks6088ts.github.io/en/blog/powershell-get-started</id>
        <link href="https://ks6088ts.github.io/en/blog/powershell-get-started"/>
        <updated>2023-03-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PowerShell スクリプトの開発入門に便利だと思ったツールや情報をまとめます。]]></summary>
        <content type="html"><![CDATA[<p>PowerShell スクリプトの開発入門に便利だと思ったツールや情報をまとめます。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="エディタ">エディタ<a href="#エディタ" class="hash-link" aria-label="Direct link to エディタ" title="Direct link to エディタ">​</a></h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell" target="_blank" rel="noopener noreferrer">VS Code extension / PowerShell</a>: Syntax highlighting, intellisense, LSP サポートなどがあり便利</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ユニットテスト">ユニットテスト<a href="#ユニットテスト" class="hash-link" aria-label="Direct link to ユニットテスト" title="Direct link to ユニットテスト">​</a></h2><ul><li><a href="https://pester.dev/docs/quick-start/" target="_blank" rel="noopener noreferrer">Pester / Quick Start</a>: テストフレームワーク</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="docker">Docker<a href="#docker" class="hash-link" aria-label="Direct link to Docker" title="Direct link to Docker">​</a></h2><ul><li><a href="https://mcr.microsoft.com/en-us/product/powershell/about" target="_blank" rel="noopener noreferrer">mcr.microsoft.com/powershell</a>: PowerShell の Docker イメージ。ライブラリの廃止に伴う移行作業やテストなど、隔離された環境での実行が必要な場合に便利</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ライブラリ">ライブラリ<a href="#ライブラリ" class="hash-link" aria-label="Direct link to ライブラリ" title="Direct link to ライブラリ">​</a></h2><ul><li><a href="https://github.com/microsoftgraph/msgraph-sdk-powershell" target="_blank" rel="noopener noreferrer">microsoftgraph/msgraph-sdk-powershell</a><ul><li>Microsoft Graph API を PowerShell から叩くときに使う</li><li>参考リンク<ul><li><a href="https://learn.microsoft.com/ja-jp/powershell/microsoftgraph/authentication-commands?view=graph-powershell-1.0" target="_blank" rel="noopener noreferrer">Authentication module cmdlets in Microsoft Graph PowerShell</a></li><li><a href="https://learn.microsoft.com/ja-jp/graph/api/overview?view=graph-rest-1.0" target="_blank" rel="noopener noreferrer">Microsoft Graph REST API v1.0 エンドポイント リファレンス</a></li></ul></li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="スニペット">スニペット<a href="#スニペット" class="hash-link" aria-label="Direct link to スニペット" title="Direct link to スニペット">​</a></h2><p>しょっちゅう文法を忘れて同じことを繰り返すので、スニペットを作成しておく。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="モジュールの一括インストール">モジュールの一括インストール<a href="#モジュールの一括インストール" class="hash-link" aria-label="Direct link to モジュールの一括インストール" title="Direct link to モジュールの一括インストール">​</a></h3><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">install-modules.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env pwsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host "Running "$MyInvocation.MyCommand.Name" ..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$modules = @(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Microsoft.Graph"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "MicrosoftTeams"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Pester"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foreach ($module in $modules) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Write-Host "Installing $module"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Install-Module -Name $module -Scope CurrentUser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="powershell-module-の作成と利用">PowerShell module の作成と利用<a href="#powershell-module-の作成と利用" class="hash-link" aria-label="Direct link to PowerShell module の作成と利用" title="Direct link to PowerShell module の作成と利用">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="powershell-モジュール">PowerShell モジュール<a href="#powershell-モジュール" class="hash-link" aria-label="Direct link to PowerShell モジュール" title="Direct link to PowerShell モジュール">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">mymodule.psm1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$global:MyModuleVersion = "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function Get-MyName {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return "Hello-World"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Export variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Variable MyModuleVersion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Export functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Function Get-MyName</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="powershell-モジュールの利用">PowerShell モジュールの利用<a href="#powershell-モジュールの利用" class="hash-link" aria-label="Direct link to PowerShell モジュールの利用" title="Direct link to PowerShell モジュールの利用">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">client.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">using module "./mymodule.psm1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">param (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$Hello,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$World)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$name = Get-MyName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host $name, $MyModuleVersion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host Args: $Hello, $World</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="実行">実行<a href="#実行" class="hash-link" aria-label="Direct link to 実行" title="Direct link to 実行">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./client.ps1 -Hello Hello -World World</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Hello-World v0.0.1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Args: Hello World</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="テスト">テスト<a href="#テスト" class="hash-link" aria-label="Direct link to テスト" title="Direct link to テスト">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="テストスクリプト">テストスクリプト<a href="#テストスクリプト" class="hash-link" aria-label="Direct link to テストスクリプト" title="Direct link to テストスクリプト">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">mymodule.test.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">using module "./mymodule.psm1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Describe "Smoke test" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Context "Nominal case" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        It "Check global variables" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # version variable settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $MyModuleVersion | Should Be "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        It "Connect-Helper" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            Get-MyName | Should Be "Hello-World"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="テストの実行">テストの実行<a href="#テストの実行" class="hash-link" aria-label="Direct link to テストの実行" title="Direct link to テストの実行">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Invoke-Pester ./mymodule.test.ps1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&gt;&gt;&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Describing Smoke test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Context Nominal case</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [+] Check global variables 495ms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [+] Connect-Helper 72ms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Tests completed in 568ms</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Passed: 2 Failed: 0 Skipped: 0 Pending: 0 Inconclusive: 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="http-リクエストの発行">HTTP リクエストの発行<a href="#http-リクエストの発行" class="hash-link" aria-label="Direct link to HTTP リクエストの発行" title="Direct link to HTTP リクエストの発行">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="microsoft-graph-api-の呼び出し例">Microsoft Graph API の呼び出し例<a href="#microsoft-graph-api-の呼び出し例" class="hash-link" aria-label="Direct link to Microsoft Graph API の呼び出し例" title="Direct link to Microsoft Graph API の呼び出し例">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">httpRequest.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">param (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$TenantId,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$ClientId,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$ClientSecret,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    [parameter(mandatory=$true)][string]$Csv)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># -- Token を取得する --</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$token = Invoke-RestMethod -Method Post -Uri "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token" -Body @{client_id="$clientId";scope="https://graph.microsoft.com/.default";client_secret="$clientSecret";grant_type="client_credentials"} -ContentType 'application/x-www-form-urlencoded'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$accessToken = $token.access_token</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="実行例">実行例<a href="#実行例" class="hash-link" aria-label="Direct link to 実行例" title="Direct link to 実行例">​</a></h4><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">./httpRequest.ps1 -TenantId 789 -ClientId 566 -ClientSecret 444 </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="powershell" term="powershell"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure IoT Edge を用いたハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/handson-iot-edge</id>
        <link href="https://ks6088ts.github.io/en/blog/handson-iot-edge"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure IoT Edge を使ったハンズオンをしました。]]></summary>
        <content type="html"><![CDATA[<p>Azure IoT Edge を使ったハンズオンをしました。
基礎的な検証に必要な情報のリンクをまとめます。</p><h1>開発環境の構築</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="prerequisites">Prerequisites<a href="#prerequisites" class="hash-link" aria-label="Direct link to Prerequisites" title="Direct link to Prerequisites">​</a></h2><ul><li>Docker</li><li>Visual Studio Code</li><li>Azure</li><li>Azure CLI</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="azure-リソース構築">Azure リソース構築<a href="#azure-リソース構築" class="hash-link" aria-label="Direct link to Azure リソース構築" title="Direct link to Azure リソース構築">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-cli">Azure CLI<a href="#azure-cli" class="hash-link" aria-label="Direct link to Azure CLI" title="Direct link to Azure CLI">​</a></h3><p>サービス側のリソースとして、Azure IoT Hub, Azure Container Registry を作成します。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">LOCATION</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"japaneast"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">RESOURCE_GROUP_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"handson_iotedge"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">IOTHUB_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"iothub0322"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">CONTAINER_REGISTRY_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"acr0322"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">DEVICE_ID</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"myEdgeDevice"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location </span><span class="token variable" style="color:#36acaa">$LOCATION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create Azure IoT Hub</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az iot hub create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$IOTHUB_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku F1 </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --partition-count </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create device identity in IoT Hub</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az iot hub device-identity create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --device-id </span><span class="token variable" style="color:#36acaa">$DEVICE_ID</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --edge-enabled </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --hub-name </span><span class="token variable" style="color:#36acaa">$IOTHUB_NAME</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create Azure Container Registry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># ref. https://learn.microsoft.com/ja-jp/azure/container-registry/container-registry-get-started-azure-cli#create-a-container-registry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az acr create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$CONTAINER_REGISTRY_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku Basic </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --admin-enabled </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># copy connection string for creating VM later.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">CONNECTION_STRING</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$(</span><span class="token variable" style="color:#36acaa">az iot hub device-identity connection-string show --device-id $DEVICE_ID --hub-name $IOTHUB_NAME -o tsv</span><span class="token variable" style="color:#36acaa">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>エッジ側のリソースとして、仮想マシン上にアプリケーションをデプロイします。<br>
<!-- -->Azure IoT Edge によるアプリケーションのデプロイでは、エッジ側にコンテナランタイムやエージェントのインストールが必要になります。<br>
<a href="https://learn.microsoft.com/ja-jp/azure/iot-edge/quickstart-linux?view=iotedge-1.4#deploy-the-iot-edge-device" target="_blank" rel="noopener noreferrer">クイック スタート:初めての IoT Edge モジュールを Linux 仮想デバイスにデプロイする</a>を参考に ARM テンプレートを利用して、仮想マシンを以下のコマンドでデプロイします。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Parameters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">LOCATION</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"japaneast"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">RESOURCE_GROUP_NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"handson_iotedge_device"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$RESOURCE_GROUP_NAME</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location </span><span class="token variable" style="color:#36acaa">$LOCATION</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create VM instance via Azure Portal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   1. Go to `Deploy a custom template` at Azure Portal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   2. Go to `Build your own template in the editor` to paste template at `https://raw.githubusercontent.com/Azure/iotedge-vm-deploy/1.4/edgeDeploy.json`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">#   3. Fill in the parameters and create VM</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>仮想マシン上では、以下のように <code>iotedge</code> コマンドを用いて状態の確認ができます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># login to VM via SSH with the password specified above</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">ssh</span><span class="token plain"> adminUser@</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$VM_NAME</span><span class="token string" style="color:#e3116c">.</span><span class="token string variable" style="color:#36acaa">$LOCATION</span><span class="token string" style="color:#e3116c">"</span><span class="token plain">.cloudapp.azure.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> iotedge -h</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> iotedge system status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> iotedge system logs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> iotedge list</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> iotedge logs </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">module</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="terraform">Terraform<a href="#terraform" class="hash-link" aria-label="Direct link to Terraform" title="Direct link to Terraform">​</a></h3><p>WIP</p><h1>開発</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="iot-edge-module-開発">IoT Edge Module 開発<a href="#iot-edge-module-開発" class="hash-link" aria-label="Direct link to IoT Edge Module 開発" title="Direct link to IoT Edge Module 開発">​</a></h2><p>IoT Edge Module としてエッジに配信するための Docker イメージを作成します。Visual Studio Code 拡張機能を入れて GUI 操作で簡単にデプロイできます。<br>
<!-- -->操作手順は <a href="https://learn.microsoft.com/ja-jp/azure/iot-edge/tutorial-develop-for-linux?view=iotedge-1.4" target="_blank" rel="noopener noreferrer">チュートリアル: Linux コンテナーを使用して IoT Edge モジュールを開発する</a> を参照ください。
各言語ごとのチュートリアルは、例えば Python の場合 <a href="https://learn.microsoft.com/ja-jp/azure/iot-edge/tutorial-python-module?view=iotedge-1.4" target="_blank" rel="noopener noreferrer">チュートリアル: Linux コンテナーを使用して Python IoT Edge モジュールを開発してデプロイする</a> が参考になります。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-container-registry-の接続設定">Azure Container Registry の接続設定<a href="#azure-container-registry-の接続設定" class="hash-link" aria-label="Direct link to Azure Container Registry の接続設定" title="Direct link to Azure Container Registry の接続設定">​</a></h3><p>Azure Container Registry に Docker image を push するため、以下の設定ファイルを作成します。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># create .env corresponding to your Azure Container Registry</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">cat</span><span class="token plain"> .env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">CONTAINER_REGISTRY_ADDRESS</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"YOUR_CONTAINER_REGISTRY.azurecr.io"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">CONTAINER_REGISTRY_USERNAME</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"YOUR_USERNAME"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">CONTAINER_REGISTRY_PASSWORD</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"YOUR_PASSWORD"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>設定情報は、Azure Portal の <code>Azure Container Registry &gt; Settings &gt; Access Keys</code> から確認できます。<br>
<!-- -->ACR にログインするため、以下のコマンドを実行します。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">az acr login --name </span><span class="token variable" style="color:#36acaa">$CONTAINER_REGISTRY_NAME</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="iot-edge-module-の-build--push">IoT Edge Module の Build &amp; Push<a href="#iot-edge-module-の-build--push" class="hash-link" aria-label="Direct link to IoT Edge Module の Build &amp; Push" title="Direct link to IoT Edge Module の Build &amp; Push">​</a></h3><ol><li><a href="https://marketplace.visualstudio.com/items?itemName=vsciot-vscode.azure-iot-toolkit" target="_blank" rel="noopener noreferrer">Azure IoT Hub の VSCode 拡張</a>をインストール</li><li>コマンドパレットを開き、<code>Azure IoT Hub : Select IoT Hub</code> から対象となる IoT Hub を選択</li><li>VSCode の Explorer にて <code>deployment.template.json</code> を右クリックし、<code>Build and Push IoT Edge Solution</code> を選択</li><li>Docker Image の Build と ACR への Push が実行され、ACR の Repository にコンテナイメージが追加される</li></ol><h3 class="anchor anchorWithStickyNavbar_LWe7" id="iot-module-のデプロイ">IoT Module のデプロイ<a href="#iot-module-のデプロイ" class="hash-link" aria-label="Direct link to IoT Module のデプロイ" title="Direct link to IoT Module のデプロイ">​</a></h3><ol><li>VSCode の Explorer の <code>AZURE IOT HUB</code> タブの対象デバイスを右クリックし <code>Create Deployment for Single Device</code> を選択</li><li><code>config/deployment.json</code> を選択して IoT Edge Module を転送</li></ol><p>Azure Portal の <code>Azure IoT Hub &gt; IoT Edge</code> から適切に IoT Edge Module が設定されているか確認できます。<br>
<!-- -->または、転送先の Edge から以下のコマンドで IoT Edge Module の起動状態を確認できます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">sudo</span><span class="token plain"> iotedge list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>References</h1><ul><li><a href="https://www.youtube.com/watch?v=UsxycuFpC8c&amp;list=PLSmINpYYRBsO4Es9FxVfKg6n4e3QdFbcs" target="_blank" rel="noopener noreferrer">Hands on workshop / Azure IoT Edge #1 - Azure IoT Edge について</a></li></ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="iot-edge" term="iot-edge"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[textlint を有効化する]]></title>
        <id>https://ks6088ts.github.io/en/blog/how-to-apply-textlint</id>
        <link href="https://ks6088ts.github.io/en/blog/how-to-apply-textlint"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[textlint を有効化して blog 執筆時に校正処理を自動でかけられるようにします。]]></summary>
        <content type="html"><![CDATA[<p>textlint を有効化して blog 執筆時に校正処理を自動でかけられるようにします。</p><h1>textlint による校正環境をセットアップする</h1><p><a href="https://textlint.github.io/" target="_blank" rel="noopener noreferrer">textlint</a> を使った校正環境を構築します。
Node.js と yarn がインストールされていることを前提とします。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="textlint-とルール設定のインストール">textlint とルール設定のインストール<a href="#textlint-とルール設定のインストール" class="hash-link" aria-label="Direct link to textlint とルール設定のインストール" title="Direct link to textlint とルール設定のインストール">​</a></h2><p>以下のコマンドでプロジェクトの依存関係に textlint 本体とルール設定をインストールします。<br>
<!-- -->テストジョブでのみ必要なモジュールであるため、<code>devDependencies</code> として依存関係を追加します。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">install dependencies</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">yarn</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">add</span><span class="token plain"> --dev </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-preset-ja-spacing </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-preset-ja-technical-writing </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-prh </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    textlint-rule-spellcheck-tech-word</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="textlint-のルール設定">textlint のルール設定<a href="#textlint-のルール設定" class="hash-link" aria-label="Direct link to textlint のルール設定" title="Direct link to textlint のルール設定">​</a></h2><p>設定ファイルは <code>.textlintrc</code> ファイルで記述します。
「である・ですます調の不一致」「単語の表記揺れ」「句読点の使いすぎ」など、様々なルールを定義して文章をチェックできます。<br>
<!-- -->一度設定を構築し、CI プロセスなどに組み込んでおけばドキュメントの品質を保つことができます。</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">textlint settings: .textlintrc</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"filters"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"rules"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"preset-ja-spacing"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"ja-space-between-half-and-full-width"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token property" style="color:#36acaa">"space"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"always"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"preset-ja-technical-writing"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"spellcheck-tech-word"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"textlint-rule-no-dropping-the-ra"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"textlint-rule-ja-no-space-between-full-width"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"prh"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#36acaa">"rulePaths"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"./prh.yaml"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>prh (=<strong>P</strong>roof<strong>R</strong>eading <strong>H</strong>elper)はドキュメントの表記ゆれを検出するためのツールです。例えば以下の設定ファイルを書くことで表記を GitHub に統一できます。</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">prh settings: prh.yaml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">rules</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">expected</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> GitHub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">patterns</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> github</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> Github</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="textlint" term="textlint"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出す]]></title>
        <id>https://ks6088ts.github.io/en/blog/azure-ad-function-api</id>
        <link href="https://ks6088ts.github.io/en/blog/azure-ad-function-api"/>
        <updated>2023-03-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出すハンズオンをしました。]]></summary>
        <content type="html"><![CDATA[<p>Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出すハンズオンをしました。
参考になった情報のリンクをまとめます。</p><h1>Azure AD 認可情報を用いてフロントエンドアプリから Azure Functions を呼び出す</h1><p>Azure App Service 上にデプロイされた React 製のフロントエンドアプリから、Azure Functions を呼び出すサンプルを提供します。</p><p>本アプリは以下の要求事項を満たします。</p><ul><li>フロントエンドアプリは Azure AD 認証を通すことを必須とする</li><li>Azure Functions は Azure AD 認証を必須とする</li><li>フロントエンドアプリの Azure AD 認証を通したユーザは、<strong>追加の認証を通すことなく</strong>、フロントエンドアプリの認証情報を用いて Azure Functions を呼び出すことができる</li><li>フロントエンドアプリ、Azure Functions 双方は Azure App Service の組み込み認証を利用し、認証処理の一切をアプリケーションコードに組み込む必要がない</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="#ハンズオン" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="react-アプリの作成">React アプリの作成<a href="#react-アプリの作成" class="hash-link" aria-label="Direct link to React アプリの作成" title="Direct link to React アプリの作成">​</a></h3><p>以下の記事を参考に、<code>create-react-app</code> を用いてフロントエンドアプリを作成します。</p><ul><li><p><a href="https://learn.microsoft.com/ja-jp/azure/developer/javascript/how-to/with-web-app/static-web-app-with-swa-cli/create-react-app#create-react-app-with-npm-targeting-typescript" target="_blank" rel="noopener noreferrer">TypeScript を対象とする npm を使用した React アプリを作成する</a></p></li><li><p><a href="https://create-react-app.dev/docs/adding-typescript/#installation" target="_blank" rel="noopener noreferrer">Create React App / Adding TypeScript</a></p></li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># create SPA app in spa directory</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">npx create-react-app react-ts --template typescript</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># install dependencies</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> react-ts </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># build an app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># run an app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="react-アプリのデプロイ">React アプリのデプロイ<a href="#react-アプリのデプロイ" class="hash-link" aria-label="Direct link to React アプリのデプロイ" title="Direct link to React アプリのデプロイ">​</a></h3><p>以下の記事を参考に、App Service に React のフロントエンドアプリをデプロイします。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/azure/app-service/quickstart-html#create-a-web-app" target="_blank" rel="noopener noreferrer">Azure で静的 HTML Web アプリを作成する</a></li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># アプリのビルド</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> run build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># build 実行で生成された静的サイトが格納されたディレクトリに移動</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> build</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Azure CLI で Azure App Service にデプロイする</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">randomIdentifier</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"1128"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"react</span><span class="token string variable" style="color:#36acaa">$randomIdentifier</span><span class="token string" style="color:#e3116c">"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">resourceGroup</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$name</span><span class="token string" style="color:#e3116c">-rg"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token assign-left variable" style="color:#36acaa">location</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"eastus"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># create resource group</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az group create --name </span><span class="token variable" style="color:#36acaa">$resourceGroup</span><span class="token plain"> --location </span><span class="token variable" style="color:#36acaa">$location</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># deploy web app</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">az webapp up </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --resource-group </span><span class="token variable" style="color:#36acaa">$resourceGroup</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --plan </span><span class="token string" style="color:#e3116c">"</span><span class="token string variable" style="color:#36acaa">$name</span><span class="token string" style="color:#e3116c">-plan"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --name </span><span class="token variable" style="color:#36acaa">$name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --location </span><span class="token variable" style="color:#36acaa">$location</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --sku FREE </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    --html</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="フロントエンドアプリから-azure-ad-認証を必要とする-api-を呼び出す">フロントエンドアプリから Azure AD 認証を必要とする API を呼び出す<a href="#フロントエンドアプリから-azure-ad-認証を必要とする-api-を呼び出す" class="hash-link" aria-label="Direct link to フロントエンドアプリから Azure AD 認証を必要とする API を呼び出す" title="Direct link to フロントエンドアプリから Azure AD 認証を必要とする API を呼び出す">​</a></h3><p><a href="https://learn.microsoft.com/ja-jp/azure/app-service/configure-authentication-oauth-tokens#retrieve-tokens-in-app-code" target="_blank" rel="noopener noreferrer">アプリ コードでのトークンの取得</a> に記載があるように、AAD 認証済クライアントは、<code>/.auth/me</code> にリクエストすることでアクセストークンを取得できます。</p><p>API コールのためにフロントエンドアプリコードで必要な実装は、以下の 2 点です。</p><ul><li><code>/.auth/me</code> にリクエストして <code>access_token</code> を取得</li><li>取得した <code>access_token</code> をヘッダに追加して Azure Functions を呼び出す</li></ul><p>実証実験のためのサンプルコードは以下の通りです。簡略化のためエラーハンドリング等は省略しています。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter literal-property property" style="color:#36acaa">url</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> json </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">json</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">json</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token known-class-name class-name">ReferenceError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Empty response'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">json: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation known-class-name class-name">JSON</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation method function property-access" style="color:#d73a49">stringify</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation">json</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'access_token'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">callApi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter literal-property property" style="color:#36acaa">url</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> </span><span class="token parameter literal-property property" style="color:#36acaa">token</span><span class="token parameter operator" style="color:#393A34">:</span><span class="token parameter"> string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">fetch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">headers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token literal-property property" style="color:#36acaa">Authorization</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Bearer </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">resp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            resp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">text</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">respStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">success: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">respStr</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> authUrl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://YOURAPP.azurewebsites.net/.auth/me'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> token </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">authUrl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">token: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">token</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> apiUrl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">'https://YOURFUNC.azurewebsites.net/api/YOURFUNC?code=YOURCODE'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">callApi</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">apiUrl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> token</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>上記実装を追加した Pull Request はこちらです。</p><p><a href="https://github.com/ks6088ts-labs/react-ts/pull/4/files#diff-26ad4b834941d9b19ebf9db8082bd202aaf72ea0ddea85f5a8a0cb3c729cc6f2R7" target="_blank" rel="noopener noreferrer">support api call #4</a></p><p>動作確認したサンプルコードはこちらで公開しています。</p><p><a href="https://github.com/ks6088ts-labs/react-ts" target="_blank" rel="noopener noreferrer">github.com/ks6088ts-labs/react-ts</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="aad-認証の設定">AAD 認証の設定<a href="#aad-認証の設定" class="hash-link" aria-label="Direct link to AAD 認証の設定" title="Direct link to AAD 認証の設定">​</a></h2><ul><li>App Service (=フロントエンドアプリ)<ul><li><code>App Service &gt; 認証</code> に Microsoft の ID プロバイダーを登録<ul><li>発行者の URL を空欄にする</li></ul></li><li><code>Azure AD &gt; 管理 &gt; API のアクセス許可</code> に API (=Azure Functions) のアクセス許可を追加</li><li><code>loginParameters</code> 設定を Azure Resource Explorer で書き換える。(Azure Functions のアプリケーション ID を追記)</li><li>参考: <a href="https://azureossd.github.io/2021/06/07/authsettingsv2-graph/" target="_blank" rel="noopener noreferrer">Accessing Microsoft Graph with App Service Auth V2</a></li></ul></li><li>Azure Functions (=API)<ul><li><code>関数アプリ &gt; 設定 &gt; 認証</code> の ID プロバイダーに Microsoft を追加<ul><li>発行者の URL を空欄にする</li></ul></li><li><code>Azure AD &gt; 管理 &gt; API のアクセス許可</code> に API (=Azure Functions) のアクセス許可を追加</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cors-設定">CORS 設定<a href="#cors-設定" class="hash-link" aria-label="Direct link to CORS 設定" title="Direct link to CORS 設定">​</a></h2><p>最新のブラウザーでは、クライアントで悪意のあるコードが実行されるのを防ぐために、Web アプリケーションから別のドメインで実行されるリソースへの要求をブロックします。</p><p>今回は、App Service にデプロイした静的サイトのドメインからのリクエストを許可するため、Azure Functions の CORS 設定を変更します。</p><p>具体的には、Azure ポータルにて、<code>関数アプリ &gt; API &gt; CORS</code> を開いて、許可される元のドメインに <code>https://YOURAPP.azurewebsites.net</code> を追加するだけです。</p><ul><li><a href="https://learn.microsoft.com/ja-jp/azure/azure-functions/functions-how-to-use-azure-function-app-settings?tabs=portal#cors" target="_blank" rel="noopener noreferrer">お使いの Function App の管理 / クロス オリジン リソース共有</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="msal-を使う場合">MSAL を使う場合<a href="#msal-を使う場合" class="hash-link" aria-label="Direct link to MSAL を使う場合" title="Direct link to MSAL を使う場合">​</a></h2><ul><li><a href="https://learn.microsoft.com/ja-jp/azure/active-directory/develop/tutorial-v2-react" target="_blank" rel="noopener noreferrer">チュートリアル: 認証コード フローを使用して、ユーザーをサインインさせて React シングルページ アプリ (SPA) から Microsoft Graph API を呼び出す</a></li><li><a href="https://github.com/Azure-Samples/ms-identity-javascript-react-spa" target="_blank" rel="noopener noreferrer">Azure-Samples/ms-identity-javascript-react-spa</a></li><li><a href="https://www.smcculloch.com/how-to-call-aad-protected-azure-function-from-react#:~:text=How%20to%20call%20an%20AAD%20protected%20Azure%20Function,...%205%20Step%205%3A%20Obtain%20Access%20Token%20" target="_blank" rel="noopener noreferrer">How to call an AAD protected Azure Function from React</a></li></ul><p>実装に際しては上記ドキュメントをご参照ください。
MSAL ライブラリをアプリケーション側に組み込むため以下の対応が必要になります。</p><ul><li>リソース変更の度に ID 設定変更を入れてフロントエンドアプリをリビルドする</li><li>依存ライブラリの更新があったら都度更新する</li></ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azure-ad" term="azure-ad"/>
        <category label="msal" term="msal"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Container Apps ハンズオン]]></title>
        <id>https://ks6088ts.github.io/en/blog/container-apps-handson</id>
        <link href="https://ks6088ts.github.io/en/blog/container-apps-handson"/>
        <updated>2023-03-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Azure Container Apps を使ってマルチコンテナアプリケーションのハンズオンをしました。]]></summary>
        <content type="html"><![CDATA[<p>Azure Container Apps を使ってマルチコンテナアプリケーションのハンズオンをしました。</p><h1>Azure Container Apps を使ってみる</h1><p>Azure Container Apps は Kubernetes の実装詳細を隠蔽し、簡単にマルチコンテナアプリケーションをデプロイできるサービスです。<br>
<!-- -->素の Kubernetes を使うとケアしなければならなかったことが、Azure Container Apps によって隠蔽されていて、やりたいことを実現するために必要な知識が少なくなっています。<br>
<!-- -->サービスの詳細は <a href="https://learn.microsoft.com/ja-jp/azure/container-apps/overview" target="_blank" rel="noopener noreferrer">Azure Container Apps の概要</a> にあります。  </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ハンズオン">ハンズオン<a href="#ハンズオン" class="hash-link" aria-label="Direct link to ハンズオン" title="Direct link to ハンズオン">​</a></h2><p>個人的には座学よりは手を動かす方が早く理解できるので、<a href="https://amzn.to/3lgDTca" target="_blank" rel="noopener noreferrer">Azureコンテナアプリケーション開発</a> を買ってハンズオンをしてみました。</p><p>『Azure コンテナアプリケーション開発』（技術評論社，2023 年）のサンプルコードは <a href="https://github.com/gihyo-book/azure-container-dev-book" target="_blank" rel="noopener noreferrer">github.com/gihyo-book/azure-container-dev-book</a> にあります。<br>
<!-- -->dev container もあるので、VS Code で開くと環境が一気に整います。<br>
<!-- -->ハンズオンで実行する Azure CLI コマンドは <a href="https://github.com/gihyo-book/azure-container-dev-book/blob/main/apps/part3/README.azcli" target="_blank" rel="noopener noreferrer">azure-container-dev-book/apps/part3/README.azcli</a> にあります。dev container から逐次実行して動作確認しました。</p><p>コンテナアプリケーションのバージョン管理やアップデート戦略などの解説もあり、Azure Container Apps の概要を知るのには十分な内容だと思いました。
Kubernetes の場合はサービスメッシュを導入してトラフィックコントロールが Azure Container Apps では簡単にできます。
また、カナリアリリースやリビジョン管理など、マルチコンテナアプリケーションの開発に必要な機能が揃っていることを理解できました。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考リンク">参考リンク<a href="#参考リンク" class="hash-link" aria-label="Direct link to 参考リンク" title="Direct link to 参考リンク">​</a></h2><ul><li><a href="https://techblog.ap-com.co.jp/entry/2021/11/03/093821" target="_blank" rel="noopener noreferrer">Azure Container Appsを試してみた</a><ul><li>Azure Portal から試した例</li></ul></li><li><a href="https://techblog.ap-com.co.jp/entry/2023/02/10/155135" target="_blank" rel="noopener noreferrer">TerraformでAzure Container Appsがサポートされたので爆速でデプロイする</a><ul><li>Terraform でデプロイした例。AzureRM Provider の v.3.43.0 からサポートされてすぐに記事が出ていて非常に助かりました。</li></ul></li><li><a href="https://techblog.ap-com.co.jp/entry/2022/09/01/120000" target="_blank" rel="noopener noreferrer">Azure Container AppsでCI/CD(GitHub Actions編)</a><ul><li>GitHub Actions でコンテナイメージをビルドして ACR へ格納し、そのイメージを Container Apps へデプロイする例</li></ul></li><li><a href="https://github.com/Azure-Samples/todo-nodejs-mongo-aca" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-aca</a><ul><li>Azure Developer CLI でデプロイできる ACA を使ったサンプルアプリケーション</li></ul></li></ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="container" term="container"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[テンプレートから学ぶ Azure ~ Web API 編 ~]]></title>
        <id>https://ks6088ts.github.io/en/blog/learn-from-template-webapi</id>
        <link href="https://ks6088ts.github.io/en/blog/learn-from-template-webapi"/>
        <updated>2023-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[簡単な TODO アプリのテンプレートから Azure を学ぶシリーズ。]]></summary>
        <content type="html"><![CDATA[<p>簡単な TODO アプリのテンプレートから Azure を学ぶシリーズ。
今回は <a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-terraform</a>を触って勉強します。</p><h1><a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-terraform</a></h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="目的">目的<a href="#目的" class="hash-link" aria-label="Direct link to 目的" title="Direct link to 目的">​</a></h2><p>簡単な TODO アプリのテンプレートをデプロイして、実動作とソースコードを確かめつつ、Azure の基本的な機能を学びます。
アーキテクチャ図は以下の通りです。</p><p><img loading="lazy" src="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform/raw/main/assets/resources.png" alt="architecture" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="デプロイ">デプロイ<a href="#デプロイ" class="hash-link" aria-label="Direct link to デプロイ" title="Direct link to デプロイ">​</a></h2><p>まずは <a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform/blob/main/README.md" target="_blank" rel="noopener noreferrer">README.md</a> を読み、デプロイ手順を確認します。</p><p>このリポジトリは <code>azd</code> 対応なので、コマンド一発でデプロイできます。
azd については、<a href="/en/blog/azure-developer-cli-get-started">Azure Developer CLI による開発プロセスの高速化</a>を参照してください。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># リポジトリを clone</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone git@github.com:Azure-Samples/todo-nodejs-mongo-terraform.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> todo-nodejs-mongo-terraform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># APIM を使いたいので環境変数を設定</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd </span><span class="token function" style="color:#d73a49">env</span><span class="token plain"> </span><span class="token builtin class-name">set</span><span class="token plain"> USE_APIM </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># デプロイ</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上で Azure 上にリソースが作成され、デプロイが完了します。
デプロイされた API サーバーや Web アプリにアクセスして動作確認します。</p><ul><li>API サーバーにアクセス(Swagger UI が開く): <code>https://app-api-{RESOURCE_TOKEN}.azurewebsites.net/</code></li><li>Web サーバーにアクセス(Web アプリが開く): <code>https://app-web-{RESOURCE_TOKEN}.azurewebsites.net/</code></li></ul><p>また、コマンドラインから動作メトリクスを確認できます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># Azure Dashboard を開く</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd monitor --overview</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Application Insights の Live metrics stream を開く</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd monitor --live</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># Application Insights の Logs を開く</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">azd monitor --logs</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="コードを読む">コードを読む<a href="#コードを読む" class="hash-link" aria-label="Direct link to コードを読む" title="Direct link to コードを読む">​</a></h2><p><code>azd</code> 対応なプロジェクトは、ディレクトリ構造に規則性があるのでソースコードが読みやすいです。
一例として自分のコードの読み方を紹介します。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="iac-コードの概要をつかむ">IaC コードの概要をつかむ<a href="#iac-コードの概要をつかむ" class="hash-link" aria-label="Direct link to IaC コードの概要をつかむ" title="Direct link to IaC コードの概要をつかむ">​</a></h3><p>インフラ側のリソース定義は、<code>infra/</code> 以下にあります。
<a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform/blob/main/infra/main.tf" target="_blank" rel="noopener noreferrer">infra/main.tf</a> がプログラムのエントリポイントになっていて、ここで定義される各種 module の実装詳細は <code>modules/</code> 以下に配置されています。</p><p>細部を読み込む前に、まずはこの main.tf を読んで全体像を把握しておきましょう。
ここでは一例として <code>applicationinsights</code> を見てみます。</p><div class="language-terraform codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-terraform codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">module "applicationinsights" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  source           = "./modules/applicationinsights"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location         = var.location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  rg_name          = azurerm_resource_group.rg.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  environment_name = var.environment_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  workspace_id     = module.loganalytics.LOGANALYTICS_WORKSPACE_ID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tags             = azurerm_resource_group.rg.tags</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resource_token   = local.resource_token</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ここで引数として指定されている <code>module.loganalytics.LOGANALYTICS_WORKSPACE_ID</code> に注目します。<br>
<!-- -->これは applicationinsights が loganalytics に依存していることを意味します。
すべてを頭に入れるのは大変なので、どのモジュールがどのような方向で依存を張っているのかの概要をざっくり把握しておくと、後々の細部の理解が楽になります。<br>
<!-- -->(図に書いてモジュール間の依存を矢印で書くと良いです)</p><p>Web アプリケーションと API サーバーの実装は、<code>modules/appservicenode/</code> 以下にあります。
それぞれ環境変数として参照しているパラメータから依存関係が判ります。
以下は API サーバーの設定値です。</p><div class="language-terraform codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-terraform codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  app_settings = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "AZURE_COSMOS_CONNECTION_STRING_KEY"    = local.cosmos_connection_string_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "AZURE_COSMOS_DATABASE_NAME"            = module.cosmos.AZURE_COSMOS_DATABASE_NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "SCM_DO_BUILD_DURING_DEPLOYMENT"        = "true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "AZURE_KEY_VAULT_ENDPOINT"              = module.keyvault.AZURE_KEY_VAULT_ENDPOINT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "APPLICATIONINSIGHTS_CONNECTION_STRING" = module.applicationinsights.APPLICATIONINSIGHTS_CONNECTION_STRING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ざっくり以下のことが分ります。</p><ul><li><code>module.cosmos</code>, <code>AZURE_COSMOS_CONNECTION_STRING_KEY</code> から Cosmos DB に依存</li><li><code>AZURE_KEY_VAULT_ENDPOINT</code> から Key Vault に依存</li><li><code>module.applicationinsights.APPLICATIONINSIGHTS_CONNECTION_STRING</code> から Application Insights に依存</li></ul><p><code>azd up</code> で作成された各種リソースは <code>.azure/ENVIRONMENT_NAME/terraform.tfstate</code> に記録されていますので、実際に設定された個々のパラメータを確認できます。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="wip-azureyaml-の-services-のビルドプロセスについて">WIP: azure.yaml の services のビルドプロセスについて<a href="#wip-azureyaml-の-services-のビルドプロセスについて" class="hash-link" aria-label="Direct link to WIP: azure.yaml の services のビルドプロセスについて" title="Direct link to WIP: azure.yaml の services のビルドプロセスについて">​</a></h3><p><code>azd</code> は、<code>azure.yaml</code> に定義された <code>services</code> のビルドプロセスを自動化しています。
挙動の詳細は把握し次第追記します。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="terraform" term="terraform"/>
        <category label="azure" term="azure"/>
        <category label="apim" term="apim"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[PowerShell スクリプト開発環境の構築]]></title>
        <id>https://ks6088ts.github.io/en/blog/powershell-development-environment</id>
        <link href="https://ks6088ts.github.io/en/blog/powershell-development-environment"/>
        <updated>2023-03-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PowerShell スクリプト開発環境の構築にあたり、便利なツールや環境を紹介します。]]></summary>
        <content type="html"><![CDATA[<p>PowerShell スクリプト開発環境の構築にあたり、便利なツールや環境を紹介します。</p><h1>PowerShell 開発環境の構築</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="エディタ">エディタ<a href="#エディタ" class="hash-link" aria-label="Direct link to エディタ" title="Direct link to エディタ">​</a></h2><p>Syntax highlighting、インテリセンスなどを有効にするため、<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell" target="_blank" rel="noopener noreferrer">PowerShell for Visual Studio Code</a>をインストールして VS Code 上で開発します。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ドキュメント">ドキュメント<a href="#ドキュメント" class="hash-link" aria-label="Direct link to ドキュメント" title="Direct link to ドキュメント">​</a></h2><p>基本的には、<a href="https://learn.microsoft.com/ja-jp/powershell/" target="_blank" rel="noopener noreferrer">PowerShell Documentation</a>の公式情報を参照します。
具体的な文法や使い方に関してサンプルコードを見たい場合は、<a href="https://learn.microsoft.com/ja-jp/powershell/scripting/learn/deep-dives/everything-about-arrays" target="_blank" rel="noopener noreferrer">~について知りたかったことのすべて</a>を参照すると良いです。
PowerShell スクリプト開発のベストプラクティスを知りたい場合は、<a href="https://poshcode.gitbook.io/powershell-practice-and-style/" target="_blank" rel="noopener noreferrer">PowerShell Best Practices and Style Guide</a> が参考になります。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="code-snippets">Code snippets<a href="#code-snippets" class="hash-link" aria-label="Direct link to Code snippets" title="Direct link to Code snippets">​</a></h3><p>個人的によく使うスニペット集を作成して、コード資産を使いまわすと効率的です。
細かい文法などは触っていないと忘れがちなので、よく使うスニペットは使いまわせるようにしておくとよいでしょう。</p><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Install PowerShell modules</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/usr/bin/env pwsh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Write-Host "Running "$MyInvocation.MyCommand.Name" ..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$modules = @(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Microsoft.Graph"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "Pester"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">foreach ($module in $modules) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Write-Host "Installing $module"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Install-Module -Name $module -Scope CurrentUser</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">PowerShell module: mymodule.psm1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># mymodule のバージョン</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$global:MyModuleVersion = "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function Initialize-MyModule {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # do something</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Variable MyModuleVersion</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Export-ModuleMember -Function Initialize-MyModule</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">PowerShell script: client.test.ps1</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># unit test by Pester</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">using module "./mymodule.psm1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Describe "Smoke test" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Context "Nominal case" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        It "Check global variables" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # version variable settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            $MyModuleVersion | Should Be "v0.0.1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="静的解析">静的解析<a href="#静的解析" class="hash-link" aria-label="Direct link to 静的解析" title="Direct link to 静的解析">​</a></h2><p><a href="https://github.com/PowerShell/PSScriptAnalyzer" target="_blank" rel="noopener noreferrer">PowerShell/PSScriptAnalyzer</a>をインストールします。</p><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Install-Module -Name PSScriptAnalyzer -Scope CurrentUser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>使い方は <a href="https://qiita.com/nimzo6689/items/1c55c6782027a78a51e5" target="_blank" rel="noopener noreferrer">PSScriptAnalyzerを使ってPowerShellのコードをキレイに保とう</a>を参照します。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="テスト">テスト<a href="#テスト" class="hash-link" aria-label="Direct link to テスト" title="Direct link to テスト">​</a></h2><p>ユニットテストフレームワークとして<a href="https://pester.dev/docs/quick-start/" target="_blank" rel="noopener noreferrer">Pester / Quick Start</a>を使います。</p><div class="language-powershell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-powershell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Install-Module -Name Pester -Scope CurrentUser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="docker">Docker<a href="#docker" class="hash-link" aria-label="Direct link to Docker" title="Direct link to Docker">​</a></h2><p>PowerShell スクリプトの再現性担保のために、Docker コンテナ上で開発したい場合、ベースとなるコンテナイメージは <a href="https://mcr.microsoft.com/en-us/product/powershell/tags" target="_blank" rel="noopener noreferrer">mcr.microsoft.com/powershell</a> にあります。必要な tag を指定して利用してください。
特に、PowerShell module が廃止になる場合、その module の依存を剥がす開発をする場合などで重宝しました。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="powershell" term="powershell"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Developer CLI による開発プロセスの高速化]]></title>
        <id>https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started</id>
        <link href="https://ks6088ts.github.io/en/blog/azure-developer-cli-get-started"/>
        <updated>2023-03-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[実際に Azure Developer CLI を使ってみて良かった点や、参考となるサイトについて纏めます。]]></summary>
        <content type="html"><![CDATA[<p>実際に Azure Developer CLI を使ってみて良かった点や、参考となるサイトについて纏めます。</p><h1>Azure Developer CLI とは</h1><p>Azure Developer CLI (以下、<code>azd</code>) は、Azure 上でクラウドアプリをビルドするプロセスを高速化するオープンソースツールです。<br>
<!-- -->規定のディレクトリ構造をもつテンプレートプロジェクトを指定して、<code>azd</code> コマンドを実行することでテンプレートを Azure 上にデプロイできます。<br>
<!-- -->これらのテンプレートは、アプリケーションコード・IaC ファイル(<code>Bicep</code> or <code>Terraform</code>)・プロジェクト構造を記述する <code>azure.yaml</code> ファイルから構成されます。<br>
<!-- -->こちらでは簡単な使い方が紹介されています。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/VTk-FhJyo7s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe><p><code>azd</code> を使うとテンプレートのアプリケーションを簡単かつ再現性のある形でデプロイできます。<br>
<!-- -->やりたいことに近しいプロジェクトのテンプレートを探して、そこから設定変更やソースコードの微修正していくと、開発工数が大幅に削減できます。</p><p><a href="https://github.com/Azure/awesome-azd" target="_blank" rel="noopener noreferrer">Azure/awesome-azd</a>には azd 関連のブログ記事や動画などの情報がまとまっています。<br>
<code>azd</code> 互換なテンプレートは以下のリンクから探せます。</p><ul><li><a href="https://aka.ms/awesome-azd" target="_blank" rel="noopener noreferrer">Awesome AZD Templates Gallery</a>: azd 互換なテンプレートが検索可能なサイト</li><li><a href="https://github.com/topics/azd-templates" target="_blank" rel="noopener noreferrer">Azure Developer CLI templates</a>: GitHub で <code>Azure Developer CLI templates</code> topic がついているもの</li></ul><h1>Azure Developer CLI のハンズオン</h1><p>ハンズオンといってもツールのインストールとコマンドの実行だけなので数分で完結します。<br>
<!-- -->まずは <code>azd</code> をインストールします。<br>
<a href="https://learn.microsoft.com/ja-jp/azure/developer/azure-developer-cli/install-azd?tabs=localinstall%2Cwindows%2Cbrew" target="_blank" rel="noopener noreferrer">Azure Developer CLIをインストールする (プレビュー)</a> を参考に、開発環境の OS に応じたインストール手順を実行し、<code>azd</code> コマンドが通ることを確認してください。<br>
<!-- -->たとえば Linux/macOS の場合は以下のコマンドでインストールできます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">azd のインストール</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ </span><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -fsSL https://aka.ms/install-azd.sh </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">bash</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>次に <code>azd</code> コマンドを使って Azure にログインし、認証情報を取得します。<br>
<!-- -->以下のコマンドを実行するとブラウザからログインできます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Azure にログイン</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ azd login</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Logged </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> to Azure.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>適当なテンプレートを指定して <code>azd</code> で Azure にデプロイします。<br>
<!-- -->ここでは <a href="https://github.com/Azure-Samples/todo-nodejs-mongo-terraform" target="_blank" rel="noopener noreferrer">Azure-Samples/todo-nodejs-mongo-terraform</a> を指定します。<br>
<code>azd up</code> でプロジェクトの初期化、プロビジョニング、デプロイを実行します。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">azd でデプロイ</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ azd up --template todo-nodejs-mongo-terraform</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Initializing a new project </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">azd init</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">✓</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> Done: Initialized </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> repository</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">✓</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> Done: Downloading template code to: </span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please enter a new environment name: handson_test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please enter a new environment name: handson_test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> an Azure Subscription to use:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">? Please </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> an Azure location to use:  </span><span class="token number" style="color:#36acaa">9</span><span class="token plain">. </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Asia Pacific</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> Japan East </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">japaneast</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Provisioning Azure resources </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">azd provision</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Provisioning Azure resources can take some </span><span class="token function" style="color:#d73a49">time</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">..</span><span class="token plain">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>--template</code> の指定方法は、<code>Azure-Samples/</code> 配下のサンプルであれば上記のようにリポジトリ名だけで実行できます。また、<code>https://github.com/Azure-Samples/todo-nodejs-mongo-terraform</code> のように URI をフルで指定もできます。  </p><p>なお、<code>azd up</code> は以下のコマンドを個別に実行することと等価です。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ azd init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ azd provision</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ azd deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>公式の <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.azure-dev" target="_blank" rel="noopener noreferrer">VS Code extension</a> もあるので、VS Code 上の操作で <code>azd</code> の各種コマンドを実行できます。</p><h1>何が嬉しいのか</h1><p>今時、新規プロジェクト立ち上げようとすると、CI/CD pipeline、dev container、vscode 設定、linter/formatter、IaC など、やることが多いです。<br>
<!-- -->ほとんどの作業は定型的な作業ではあるので、この辺を丸っと抽象化して適切なデフォルト設定をテンプレート側で与えてくれる点が嬉しいポイントです。</p><p>テンプレートを取っ掛かりにして、必要な変更をソースコードに入れたり、設定値をチューニングするだけでやりたいことに早く近づけます。<br>
<!-- -->今後さらに azd 互換なテンプレートが増えればその勢いは増していきます。</p><p>この手の scaffolding ツールは既に世の中にあり、template repo を fork したり cookiecutter を使うのとほぼ等価ではあります。が、以下の点が <code>azd</code> ならではのメリットです。</p><ul><li>利用者は CLI で完結して作業できる</li><li>テンプレートのディレクトリ階層の規約があるので利用者の認知負荷が低い</li></ul><p><a href="https://github.com/Azure/reliable-web-app-pattern-dotnet" target="_blank" rel="noopener noreferrer">Azure/reliable-web-app-pattern-dotnet</a> のように production grade なものも開発されています。<br>
<!-- -->Azure ユーザーの生産性を向上させるエコシステムの発展が、より多くのことを少ない手間で実現するための一助になるのではと期待しています。</p><h1>TODO</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="azd-互換プロジェクトの作成">azd 互換プロジェクトの作成<a href="#azd-互換プロジェクトの作成" class="hash-link" aria-label="Direct link to azd 互換プロジェクトの作成" title="Direct link to azd 互換プロジェクトの作成">​</a></h2><p><a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli/make-azd-compatible?pivots=azd-create#azd-conventions" target="_blank" rel="noopener noreferrer"><code>azd</code> conventions</a>に従ってプロジェクトを作成します。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="azd-に-contribute-する">azd に contribute する<a href="#azd-に-contribute-する" class="hash-link" aria-label="Direct link to azd に contribute する" title="Direct link to azd に contribute する">​</a></h2><p>CLI と extension は monorepo 構成で<a href="https://github.com/Azure/azure-dev" target="_blank" rel="noopener noreferrer">Azure/azure-dev</a>にて開発されています。
extension は TypeScript、azd 本体は Go で書かれています。</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="azure" term="azure"/>
        <category label="azd" term="azd"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Pages by Docusaurus]]></title>
        <id>https://ks6088ts.github.io/en/blog/gh-pages-by-docusaurus</id>
        <link href="https://ks6088ts.github.io/en/blog/gh-pages-by-docusaurus"/>
        <updated>2023-03-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A note for deploying a static site built with docusaurus on GitHub Pages]]></summary>
        <content type="html"><![CDATA[<p>A note for deploying a static site built with docusaurus on GitHub Pages</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="get-started">Get started<a href="#get-started" class="hash-link" aria-label="Direct link to Get started" title="Direct link to Get started">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="scaffold-project-website">Scaffold project website<a href="#scaffold-project-website" class="hash-link" aria-label="Direct link to Scaffold project website" title="Direct link to Scaffold project website">​</a></h3><ul><li>Reference: <a href="https://docusaurus.io/docs/installation#scaffold-project-website" target="_blank" rel="noopener noreferrer">Docusaurus / Installation / Scaffold project website</a></li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npx create-docusaurus@latest ks6088ts-labs.github.io classic --typescript</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus-configurations">Docusaurus configurations<a href="#docusaurus-configurations" class="hash-link" aria-label="Direct link to Docusaurus configurations" title="Direct link to Docusaurus configurations">​</a></h3><ul><li>Reference: <a href="https://docusaurus.io/docs/api/docusaurus-config" target="_blank" rel="noopener noreferrer">docusaurus.config.js</a></li><li>Commit: <a href="https://github.com/ks6088ts/ks6088ts.github.io/commit/c02e76e5f68febeeb6c4cd2df02a0473f762e9fb" target="_blank" rel="noopener noreferrer">update settings for docusaurus</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="deploy-to-github-actions-with-github-actions">Deploy to GitHub Actions with GitHub Actions<a href="#deploy-to-github-actions-with-github-actions" class="hash-link" aria-label="Direct link to Deploy to GitHub Actions with GitHub Actions" title="Direct link to Deploy to GitHub Actions with GitHub Actions">​</a></h3><ul><li>Reference: <a href="https://docusaurus.io/docs/deployment#triggering-deployment-with-github-actions" target="_blank" rel="noopener noreferrer">Docusaurus / Deployment / Triggering deployment with GitHub Actions</a></li><li>Commit: <a href="https://github.com/ks6088ts/ks6088ts.github.io/commit/f27953ff6b308eb61986d7941f779f0a24fc57ef" target="_blank" rel="noopener noreferrer">add deploy action</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="update-github-settings">Update GitHub Settings<a href="#update-github-settings" class="hash-link" aria-label="Direct link to Update GitHub Settings" title="Direct link to Update GitHub Settings">​</a></h3><ul><li><a href="https://github.com/ad-m/github-push-action/issues/96#issuecomment-889984928" target="_blank" rel="noopener noreferrer">remote: Permission to git denied to github-actions[bot]. #96</a></li><li><a href="https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site" target="_blank" rel="noopener noreferrer">Configuring a publishing source for your GitHub Pages site</a></li></ul>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="docusaurus" term="docusaurus"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Terraform provider for SORACOM を作って Azure Functions と連携してみた]]></title>
        <id>https://ks6088ts.github.io/en/blog/terraform-provider-soracom</id>
        <link href="https://ks6088ts.github.io/en/blog/terraform-provider-soracom"/>
        <updated>2022-12-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Terraform で SORACOM のリソース管理をしたかったので、SORACOM 向けの Terraform カスタムプロバイダを実装してみました。カスタムプロバイダ開発に係る知見や、Terraform provider for SORACOM で SORACOM のリソース管理をしてみた例をご紹介します。]]></summary>
        <content type="html"><![CDATA[<p>Terraform で SORACOM のリソース管理をしたかったので、SORACOM 向けの Terraform カスタムプロバイダを実装してみました。カスタムプロバイダ開発に係る知見や、Terraform provider for SORACOM で SORACOM のリソース管理をしてみた例をご紹介します。  </p><ol><li>Terraform のカスタムプロバイダの概要</li><li>SORACOM 向けカスタムプロバイダの実装</li><li>SORACOM x Azure Functions の利用例</li></ol><p>といった章立てでまとめてみます。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-terraform-のカスタムプロバイダの概要"><strong>1. Terraform のカスタムプロバイダの概要</strong><a href="#1-terraform-のカスタムプロバイダの概要" class="hash-link" aria-label="Direct link to 1-terraform-のカスタムプロバイダの概要" title="Direct link to 1-terraform-のカスタムプロバイダの概要">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-iac-"><strong>Why IaC ?</strong><a href="#why-iac-" class="hash-link" aria-label="Direct link to why-iac-" title="Direct link to why-iac-">​</a></h3><p>そもそもなぜ IaC が必要なのか？というところから、私の過去の経験を元に整理してみます。  </p><p>新しいものはたいてい怖いもので、初見では <code>「ウェブコンソールとか CLI ツールで十分でしょ？IaC ツールっていらなくないですか？」</code> といった気持ちでした。<br>
<!-- -->確かに CLI ツールは何かのリソースの操作や状態の確認などの目的で手軽に利用できて便利です。CLI ツールを駆使したシェルスクリプトでも IaC ツールで実施しているようなリソース管理を "技術的には" 実現できるかもしれません。<br>
<!-- -->実際に CLI でリソースの管理をしようとすると、手続き的な処理を書くことになります。リソースの差分チェックや個々の処理のエラーハンドリングなど、実は厳密にやろうとすると考慮することが多くてなかなか大変です。結果、複雑でメンテナンスが困難なスクリプトが出来上がったりします。<br>
<!-- -->とまぁここまで手を動かしてみてようやく重い腰を上げて IaC ツールを触ってみるか、ということになりました。実際に使ってみると、CLI で考慮する必要のあった差分チェックやらエラーハンドリングといった複雑さをツールが丸っと面倒を見てくれるおかげで、望ましいリソースの状態を宣言的に記述してツールに喰わせるだけになるのです。リソース設定を環境の再現性をもたせて移管するといったことも簡単になります。開発者体験が飛躍的に進歩した感じがします。<br>
<!-- -->IaC ツールがこれだけ便利だと、いついかなる時も IaC がしたくなる病に駆られてちょっとした検証とかで IaC するオーバーエンジニアリングをした時期もありました。<a href="https://www.google.com/search?q=Typescript%E4%BE%9D%E5%AD%98%E3%81%AE%E6%82%AA%E5%BE%AA%E7%92%B0&amp;sxsrf=ALiCzsbbYTvTMh39om3QUsgRGj7nvS3Z4w:1668426679347&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=2ahUKEwj7iLncza37AhVZmFYBHe94BKoQ_AUoAXoECBkQAw&amp;biw=1080&amp;bih=1724&amp;dpr=1" target="_blank" rel="noopener noreferrer">TypeScript依存の悪循環</a> を想起しますね。<br>
<!-- -->IaC 化するにも作業コストがかかるので、<code>他者と協業する</code>とか<code>構築するシステムが大規模・複雑</code>になってきたときに、IaC を検討するとバランスが良いかと思います。</p><ul><li>CLI はあくまでワンショットのタスクの実行といった <code>動的な操作</code> を支援するツール</li><li>IaC ツールはリソースの構築といった<code>静的な操作</code>を支援するツール</li></ul><p>という認識を持って、用法容量を守って正しく使い分けるのが良さそうです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="terraform-って何"><strong>Terraform って何？</strong><a href="#terraform-って何" class="hash-link" aria-label="Direct link to terraform-って何" title="Direct link to terraform-って何">​</a></h3><p>IaC ツールとしてカテゴライズされるソフトウェアとしては、<a href="https://aws.amazon.com/jp/cdk/" target="_blank" rel="noopener noreferrer">AWS CDK</a>・<a href="https://www.terraform.io/" target="_blank" rel="noopener noreferrer">Terraform</a>・<a href="https://learn.microsoft.com/ja-jp/azure/azure-resource-manager/bicep/overview?tabs=bicep" target="_blank" rel="noopener noreferrer">Bicep</a> などがあります。<br>
<!-- -->中でも Terraform は、カスタムプロバイダと呼ばれる pluggable なインタフェースが存在していて、カスタムプロバイダを実装しさえすれば API を公開している Web サービスに対してリソースのプロビジョニングが可能になります。<br>
<!-- -->AWS, Azure, GCP などのクラウドサービスはもちろんのこと、既に数多くのカスタムプロバイダが <a href="https://registry.terraform.io/" target="_blank" rel="noopener noreferrer">Terraform Registry</a> に公開されています。使いたいサービス向けのプロバイダが無いか検索してみると面白いです。</p><hr><h3 class="anchor anchorWithStickyNavbar_LWe7" id="カスタムプロバイダの開発に役立つ資料"><strong>カスタムプロバイダの開発に役立つ資料</strong><a href="#カスタムプロバイダの開発に役立つ資料" class="hash-link" aria-label="Direct link to カスタムプロバイダの開発に役立つ資料" title="Direct link to カスタムプロバイダの開発に役立つ資料">​</a></h3><p>カスタムプロバイダの実装に関して、私が読んで参考になった資料を紹介します。  </p><ul><li><strong><a href="https://developer.hashicorp.com/terraform/intro" target="_blank" rel="noopener noreferrer">HashiCorp / What is Terraform?</a></strong><ul><li>まずは一次情報にあたるのが賢明です。HashiCorp 公式の情報はかなり整理されていて読みやすいです。</li></ul></li><li><strong><a href="https://developer.hashicorp.com/terraform/tutorials/providers" target="_blank" rel="noopener noreferrer">Call APIs with Custom SDK Providers</a></strong><ul><li>とりあえず作ってみて<code>完全に理解した</code>状態になるためには、こちらのチュートリアルを一周するのがおすすめです。カスタムプロバイダの実装から、Terraform Registry に公開までキャッチアップできます。リリースパイプラインを GitHub Actions で構築する手順なんかも再利用性が高くて秀逸です。  </li></ul></li><li><strong><a href="https://amzn.to/3fPfHuW" target="_blank" rel="noopener noreferrer">エキスパートたちのGo言語</a></strong><ul><li>これまで全部英語の文献を紹介しましたが、「いやいや、日本語が良いんだけど...」という方もご安心を。<code>エキスパートたちのGo言語: 3.5 Custom Terraform Provider によるプロビジョニングの自動化</code> にもカスタムプロバイダの作り方が書いてあります。</li></ul></li></ul><hr><p>ここまで記事を一通り読めば、「カスタムプロバイダなんとなく実装できそう」な状態になります。いざ開発を進めてみると、</p><ul><li>具体的にどんな単位で責務を分割してパッケージに落とし込むか</li><li>CI/CD などのパイプラインってどう構築したらいいのだろうか</li></ul><p>といった悩みが出てくるケースもあるかと思います。そんな時は既存のカスタムプロバイダの実装の中に答えがあります。例えば <a href="https://github.com/hashicorp/terraform-provider-aws" target="_blank" rel="noopener noreferrer">hashicorp/terraform-provider-aws</a> では、</p><ul><li><code>internal/conns</code> 以下でクライアントオブジェクト周りを集約</li><li><code>internal/service</code> 配下に各種リソースをハンドルするパッケージを配置</li></ul><p>といった構成になっています。「authentication 周りは conns パッケージに集約する」とか「service パッケージ以下でサービスの追加機能を横に拡張していく」といった参考になる設計が多々ありました。どんな形であれ設計レベルで暗黙の前提が決まっていると実装方法が一意になり、開発の生産性を上げてくれるので予め決めておくとよいと思います。</p><p>CI/CD については、上で言及した HashiCorp さんのチュートリアル記事 <a href="https://developer.hashicorp.com/terraform/tutorials/providers/provider-release-publish" target="_blank" rel="noopener noreferrer">Release and Publish a Provider to the Terraform Registry</a> に、<code>Git tag を打つと GitHub Actions で release ジョブが回って Terraform Registry に自動的に公開される</code> パイプラインの記述があり非常に参考になりました。最終的に Terraform Registry への公開も想定すると、いろんなプラットフォーム向けにバイナリを生成する必要が出てきます。いちいち温かみのある手作業をしていると日が暮れてしまいますので、<a href="https://github.com/goreleaser/goreleaser-action" target="_blank" rel="noopener noreferrer">goreleaser/goreleaser-action</a> を活用してリリースパイプラインを GitHub Actions で構築しておくと良いです。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="api-クライアントを作る"><strong>API クライアントを作る</strong><a href="#api-クライアントを作る" class="hash-link" aria-label="Direct link to api-クライアントを作る" title="Direct link to api-クライアントを作る">​</a></h3><p>既存のカスタムプロバイダの実装をいくつか見るとわかることですが、カスタムプロバイダの実装には原則的に API コールのための実装詳細は含まれていません。いずれも API クライアントライブラリ or SDK に実装詳細を抱え込んでもらって、provider はそれを利用するアプリケーションとしての構成になっています。<br>
<!-- -->Terraform plugin がどのように動作するのかの概略図は以下の通りです。HashiCorp 社の資料でもクライアントライブラリとして切り離す設計を推奨しています。  </p><p><img loading="lazy" src="https://content.hashicorp.com/api/assets?product=tutorials&amp;version=main&amp;asset=public%2Fimg%2Fterraform%2Fproviders%2Fcore-plugins-api.png" alt="Overview" class="img_ev3q"></p><p>!!! tip
Tip: We recommend Terraform plugins consume an external API client library, as shown in the diagram above. If one doesn't exist, you should create one. This is aligned with modern coding practices of keeping software projects modular.<br>
<!-- -->出典: <a href="https://developer.hashicorp.com/terraform/tutorials/configuration-language/provider-use?in=terraform%2Fconfiguration-language&amp;utm_offer=ARTICLE_PAGE#terraform-plugins" target="_blank" rel="noopener noreferrer">Perform CRUD Operations with Providers / Terraform plugins</a></p><p>なお、HashiCorp 提供の plugin ライブラリが Go で書かれているので、クライアントライブラリの言語も Go がよいです。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-soracom-向けカスタムプロバイダの実装"><strong>2. SORACOM 向けカスタムプロバイダの実装</strong><a href="#2-soracom-向けカスタムプロバイダの実装" class="hash-link" aria-label="Direct link to 2-soracom-向けカスタムプロバイダの実装" title="Direct link to 2-soracom-向けカスタムプロバイダの実装">​</a></h2><p>SORACOM は SORACOM Funk, SORACOM Funnel といった各種クラウドプロバイダと簡単に接続するアプリケーションサービスを提供しています。SORACOM が Terraform 対応するとこれまで手動でやっていた諸々の連携設定作業をすべて Terraform で完結できるようになって便利なのでは？と妄想が膨らみ、今回 SORACOM 向けにカスタムプロバイダを開発するに至りました。</p><p>カスタムプロバイダ本体は Terraform Registry の <a href="https://registry.terraform.io/providers/ks6088ts/soracom/latest" target="_blank" rel="noopener noreferrer">ks6088ts/soracom</a> に公開済ですのですぐに触れる状態です。2022/12月時点で 1000 回近くダウンロードされているようです。まだまだ工事中なポイントが多々ありまして、機能が足りてなかったりドキュメントが手薄だったりしているので contribution は大歓迎です。<br>
<!-- -->基本的には <a href="https://github.com/ks6088ts/terraform-provider-soracom/tree/main/examples" target="_blank" rel="noopener noreferrer">examples</a> を実行していただくと雰囲気がつかめるはずです。<br>
<!-- -->SORACOM 向けの Terraform Provider の実装作業として、大きく 2 つのソフトウェア開発をしました。</p><ul><li>Step 1. API クライアントライブラリ <a href="https://github.com/ks6088ts/soracom-sdk-go" target="_blank" rel="noopener noreferrer">ks6088ts/soracom-sdk-go</a> の開発</li><li>Step 2. カスタムプロバイダ本体 <a href="https://github.com/ks6088ts/terraform-provider-soracom" target="_blank" rel="noopener noreferrer">ks6088ts/terraform-provider-soracom</a> の開発</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-api-クライアントライブラリの開発"><strong>Step 1. API クライアントライブラリの開発</strong><a href="#step-1-api-クライアントライブラリの開発" class="hash-link" aria-label="Direct link to step-1-api-クライアントライブラリの開発" title="Direct link to step-1-api-クライアントライブラリの開発">​</a></h3><p>OpenAPI v3 に対応した <a href="https://users.soracom.io/ja-jp/tools/api/reference/" target="_blank" rel="noopener noreferrer">SORACOM API リファレンス</a> が公開されていますので、このスキーマファイルから機械的に Go のクライアントライブラリを生成してみましょう。<br>
<!-- -->たった 2 steps です。</p><p>1．スキーマファイル <a href="https://users.soracom.io/swagger/soracom-api.ja.yaml" target="_blank" rel="noopener noreferrer">soracom-api.ja.yaml</a> をダウンロードして、<code>specs/api.yaml</code> に置きます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> -sSfL https://users.soracom.io/swagger/soracom-api.ja.yaml --output specs/api.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>2．<a href="https://openapi-generator.tech/" target="_blank" rel="noopener noreferrer">OpenAPI Generator</a> を使って 1 でダウンロードした仕様書から下記コマンドを実行しクライアントライブラリを生成します。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npx @openapitools/openapi-generator-cli generate </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --input-spec specs/api.yaml </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --generator-name go </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --output generated/api </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --package-name api </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --git-host github.com </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --git-user-id ks6088ts </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --git-repo-id soracom-sdk-go </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        --http-user-agent ks6088ts/soracom-sdk-go/0.0.3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>コマンドラインオプションを見ていただくと、結構柔軟に所望の設定を注入することが出来ます。<br>
<!-- -->ここでは user agent やパッケージ名を好みの設定にしてコード生成しています。<br>
<code>generated/api</code> 以下に *.go ファイルが生成されれば成功です。ここで生成されたライブラリは <a href="https://github.com/ks6088ts/soracom-sdk-go" target="_blank" rel="noopener noreferrer">ks6088ts/soracom-sdk-go</a> で公開しています。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="github-actions-を使ってクライアントライブラリの-ci-をまわしてみる">GitHub Actions を使ってクライアントライブラリの CI をまわしてみる<a href="#github-actions-を使ってクライアントライブラリの-ci-をまわしてみる" class="hash-link" aria-label="Direct link to GitHub Actions を使ってクライアントライブラリの CI をまわしてみる" title="Direct link to GitHub Actions を使ってクライアントライブラリの CI をまわしてみる">​</a></h4><p>自動生成したクライアントライブラリは割とすぐ使えましたが、念のためライブラリの単体テストもしておきます。私は commit をトリガーとして、クライアントライブラリの E2E テストを GitHub Actions で実行するようにしています。</p><p>自動生成したライブラリを使って CI インフラ上で API コールするテストを実施するためには、認証情報(SORACOM でいうと auth key, auth key id)を渡す必要があります。認証キーは当然秘匿する必要がありますので、GitHub の Encrypted secrets を利用します。手順は <a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets" target="_blank" rel="noopener noreferrer">GitHub Docs / Encrypted secrets</a> に書かれています。GitHub 側の設定が終われば、以下のような形で参照するだけです。
<code>.github/workflows/</code> に <a href="https://github.com/ks6088ts/soracom-sdk-go/blob/main/.github/workflows/test.yml" target="_blank" rel="noopener noreferrer">test.yml</a> を置くだけで CI が回ります。便利な世の中になったものですね。</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">.github/workflows/test.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 一部を抜粋</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Run CI test</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">run</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> make ci</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">test GOPATH=/home/runner/go</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">SORACOM_AUTH_KEY</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.SORACOM_AUTH_KEY </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">SORACOM_AUTH_KEY_ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.SORACOM_AUTH_KEY_ID </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">COVERAGE_TYPE</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> secrets.COVERAGE_TYPE </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="テスト用の-soracom-認証キーの権限は最小に">テスト用の SORACOM 認証キーの権限は最小に<a href="#テスト用の-soracom-認証キーの権限は最小に" class="hash-link" aria-label="Direct link to テスト用の SORACOM 認証キーの権限は最小に" title="Direct link to テスト用の SORACOM 認証キーの権限は最小に">​</a></h4><p>SORACOM では SAM ユーザというリソースに対して API の実行権限を制御したキーを払いだすことができます。SAM ユーザの権限設定方法は <a href="https://users.soracom.io/ja-jp/docs/sam/permission/#" target="_blank" rel="noopener noreferrer">SORACOM User ドキュメント / 権限設定のためのパーミッション構文</a>を参照ください。<br>
<!-- -->セキュリティリスクを最小限にするためにも権限は必要最低限のものにします。実リソースに対する細かい操作を CI で実行することに懸念がある場合は、検証を目的として使える <a href="https://users.soracom.io/ja-jp/tools/api-sandbox/" target="_blank" rel="noopener noreferrer">SORACOM API Sandbox</a> を使ってもよいかもしれません。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-カスタムプロバイダ本体の開発"><strong>Step 2. カスタムプロバイダ本体の開発</strong><a href="#step-2-カスタムプロバイダ本体の開発" class="hash-link" aria-label="Direct link to step-2-カスタムプロバイダ本体の開発" title="Direct link to step-2-カスタムプロバイダ本体の開発">​</a></h3><p>まずは、ユーザが触る HCL の外部仕様を設計することから開発を始めます。<br>
<!-- -->基本的には、対象となるクラウドプロバイダの API そのものと一対一対応させたスキーマを定義することが多いです。ただ、場合によってはカスタムプロバイダの外部仕様として露出すべきではないパラメータがある場合があります。のちの使い勝手や後方互換性担保のことを考えて、利用者観点で不要なものは削除して必要十分なインタフェースになるまでダイエットさせると小回りが利く仕様に収束すると思います。  </p><p>外部仕様の設計をしていく中で、<strong>依存関係にある複数のリソースの関係をどう表現するか</strong> というところも少し悩みました。<br>
<!-- -->例えばリソース A とリソース B が依存関係にあることを表現するにはどうすればよいか？といった点です。<br>
<!-- -->実はこの手の悩みも既に解決されていて、クラウドサービスの世界でよく見かける「リソース A をリソース B にアタッチするリソース C」を新たに定義することが多いようです。プロビジョニング対象のウェブサービスには C というリソースの物理的な実体はないのですが、カスタムプロバイダの外部仕様においてのみ存在する仮想的なリソース C を定義することで、A と B が直接依存関係を持たないようにするのです。<br>
<code>e.g. aws_internet_gateway_attachment, azurerm_virtual_machine_data_disk_attachment</code></p><p>ドキュメントに関しては、<a href="https://github.com/hashicorp/terraform-plugin-docs" target="_blank" rel="noopener noreferrer">tfplugindocs</a> を使うとカスタムプロバイダの Go のコードからドキュメントが生成され、<strong>コードとドキュメントが同期</strong> されます。<br>
<!-- -->ドキュメントの更新は忘れがちなので、CI 上でドキュメント生成して commit 済みのドキュメントと diff を取るなどして、仕組みでヒューマンエラーを撲滅するアクションを採ると精神衛生上良いです。私は CI パイプラインの中に <a href="https://github.com/ks6088ts/terraform-provider-soracom/blob/main/terraform.mk#L26" target="_blank" rel="noopener noreferrer">docs-diff</a> コマンドにあるような形で、CI 上でドキュメント生成処理を実行したあと git diff を実行して更新忘れを検知するようにしてみました。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-soracom-funk-x-azure-functions-の利用例"><strong>3. SORACOM Funk x Azure Functions の利用例</strong><a href="#3-soracom-funk-x-azure-functions-の利用例" class="hash-link" aria-label="Direct link to 3-soracom-funk-x-azure-functions-の利用例" title="Direct link to 3-soracom-funk-x-azure-functions-の利用例">​</a></h2><p>最後に、SORACOM Funk と Azure Functions の連携を Terraform で構築したサンプルを紹介します。サンプルコードは <a href="https://github.com/ks6088ts/terraform-provider-soracom/tree/main/examples/group_configuration_funk_azure_functions_python" target="_blank" rel="noopener noreferrer">group_configuration_funk_azure_functions_python</a> にあります。<br>
<!-- -->構成図は以下の通りです。</p><p><img loading="lazy" alt="group_configuration_funk_azure_functions_python" src="/en/assets/images/group_configuration_funk_azure_functions_python-6829a8af601072972e5dcbf5abab3d1e.svg" width="1000" height="640" class="img_ev3q"></p><p>実行にはSORACOM の認証情報のセットアップと、Azure の認証情報のセットアップが必要になります。アカウントのセットアップやリソースの設定などは各社ユーザサイトを参照してください。</p><ul><li><a href="https://users.soracom.io/ja-jp/tools/cli/getting-started/#%E3%82%B9%E3%83%86%E3%83%83%E3%83%97-2-%E8%AA%8D%E8%A8%BC%E6%83%85%E5%A0%B1%E3%82%92%E6%BA%96%E5%82%99%E3%81%99%E3%82%8B" target="_blank" rel="noopener noreferrer">SORACOM CLI をインストールする / ステップ 2: 認証情報を準備する</a></li><li><a href="https://learn.microsoft.com/ja-jp/azure/developer/terraform/authenticate-to-azure?tabs=bash" target="_blank" rel="noopener noreferrer">Azure に対して Terraform を認証する</a></li></ul><p>以下の操作でインフラリソースが構築/削除ができます。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># サンプルコードの取得</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> clone git@github.com:ks6088ts/terraform-provider-soracom.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> terraform-provider-soracom/examples/group_configuration_funk_azure_functions_python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># リソースの構築</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform apply</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># リソースの削除</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">terraform destroy -auto-approve</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="azure-のリソース">Azure のリソース<a href="#azure-のリソース" class="hash-link" aria-label="Direct link to Azure のリソース" title="Direct link to Azure のリソース">​</a></h3><ul><li>リソースグループ</li><li>ストレージアカウント</li><li>サービスプラン</li><li>関数アプリ</li></ul><p>を生成します。サンプルコードは以下の通りです。</p><div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">azure.tf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">provider "azurerm" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  features {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "azurerm_resource_group" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name     = "${var.azure_prefix}-rg"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location = var.azure_resource_location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "azurerm_storage_account" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name                     = "${var.azure_prefix}storageacct"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resource_group_name      = azurerm_resource_group.example.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location                 = azurerm_resource_group.example.location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  account_tier             = "Standard"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  account_replication_type = "LRS"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "azurerm_service_plan" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name                = "${var.azure_prefix}-sp"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location            = azurerm_resource_group.example.location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resource_group_name = azurerm_resource_group.example.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  os_type             = "Linux"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sku_name            = "S1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "azurerm_linux_function_app" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name                = "${var.azure_prefix}exampleapp"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  location            = azurerm_resource_group.example.location</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resource_group_name = azurerm_resource_group.example.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  service_plan_id     = azurerm_service_plan.example.id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  storage_account_name       = azurerm_storage_account.example.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  storage_account_access_key = azurerm_storage_account.example.primary_access_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  site_config {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    application_stack {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      python_version = "3.9"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "azurerm_function_app_function" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name            = "example-python-function"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  function_app_id = azurerm_linux_function_app.example.id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  language        = "Python"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  file {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name    = "__init__.py"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    content = file("./app/__init__.py")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  test_data = jsonencode({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "name" = "Azure"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  config_json = jsonencode({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "scriptFile" = "__init__.py"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "bindings" = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "authLevel" = "function"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "direction" = "in"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "methods" = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "get",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          "post",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "name" = "req"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type" = "httpTrigger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "direction" = "out"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "name"      = "$return"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type"      = "http"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  })</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">data "azurerm_function_app_host_keys" "example" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name                = "${var.azure_prefix}exampleapp"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resource_group_name = azurerm_resource_group.example.name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # https://github.com/hashicorp/terraform-provider-azurerm/issues/9869</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  depends_on = [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    azurerm_linux_function_app.example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="soracom-のリソース">SORACOM のリソース<a href="#soracom-のリソース" class="hash-link" aria-label="Direct link to SORACOM のリソース" title="Direct link to SORACOM のリソース">​</a></h3><ul><li>SIM グループ</li><li>認証情報</li><li>SORACOM Funk の設定</li></ul><p>を生成します。認証情報と SORACOM Funk の設定には、上述した Azure 側のリソース設定を反映させて連携します。</p><div class="language-tf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">soracom.tf</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-tf codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">terraform {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  required_providers {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    soracom = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      source = "ks6088ts/soracom"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">provider "soracom" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  profile = var.soracom_profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "soracom_group" "group" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tags = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name = var.soracom_group_name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "soracom_credentials" "credentials" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  credentials_id = var.credentials_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  description    = "API Token credentials via terraform-provider-soracom"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  type           = "api-token-credentials"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  credentials = {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # Azure Functions の設定を参照</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    token = data.azurerm_function_app_host_keys.example.default_function_key</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">resource "soracom_group_configuration_funk" "group_configuration_funk" {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  group_id       = soracom_group.group.id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  enabled        = true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  credentials_id = soracom_credentials.credentials.credentials_id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  content_type   = "json"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  # Azure Functions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  destination {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    provider     = "azure"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    service      = "function-app"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # Azure Functions の呼び出し URL を参照</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resource_url = azurerm_function_app_function.example.invocation_url</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上でサンプルの紹介は終了です。</p><p>これまでは Azure のリソースを作成してパラメータ設定を確認したあと、SORACOM 側の認証情報と SORACOM Funk の SIM グループの設定をウェブコンソールか SORACOM CLI で指定する必要がありました。Terraform 対応することで、そういった手作業も無くなり <code>terraform apply -auto-approve</code> すればサクッと Azure・SORACOM 双方を連携したリソースが生成できます。後片付けも <code>terraform destroy</code> でさっと終わります。より一層 SORACOM を便利に使うことができるようになりました。</p><hr><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ポエム-ツール開発からの学び"><strong>ポエム: ツール開発からの学び</strong><a href="#ポエム-ツール開発からの学び" class="hash-link" aria-label="Direct link to ポエム-ツール開発からの学び" title="Direct link to ポエム-ツール開発からの学び">​</a></h2><p>この手のツールを開発してみて、改めて感じたことをポエム的に 2 点書き留めておきます。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-サンプルコードから書き始めること"><strong>1. サンプルコードから書き始めること</strong><a href="#1-サンプルコードから書き始めること" class="hash-link" aria-label="Direct link to 1-サンプルコードから書き始めること" title="Direct link to 1-サンプルコードから書き始めること">​</a></h3><p>今回実装したカスタムプロバイダや、API・SDK といった、プラットフォームを形成するためのソフトウェアに関して、一番注意を払うべきポイントは外部仕様であると思います。細かな内部実装上のバグなんかは都度直せますが、外部仕様は一度出すとクライアントに影響が出るため、容易に変更しづらいことが理由です。<br>
<!-- -->「なに当たり前のことを言っているんだ？」と思われる方もいらっしゃるかもしれません。しかしながら、依存する他のコンポーネントの仕様や内部実装上の制約などに気が向いてしまうと、それらに無意識的に引きずられてしまい最終的にユーザに提供する外部仕様がぎこちなくなることって意外と多くないでしょうか。カプセル化が不十分で不要なパラメータを晒したり、リソース間に不要な依存が発生していたり、直観的ではない操作を要求したり、、、少なくとも私はそういう失敗を何度もしました。こういった問題を踏んでは、<a href="https://amzn.to/3GgZt8x" target="_blank" rel="noopener noreferrer">C++のためのAPIデザイン</a> の <code>第2章 優れたAPIの特徴</code> に事細かに書いてある原理原則を何回も読み返したりしていました。</p><p>これまでの経験の中の学びの一つに、<strong>サンプルから書き始める(⇔外部仕様を先に策定する)</strong> ことがあります。これは常日頃意識するようにしています。<br>
<!-- -->サンプルコードから書き始めると、嫌でもユーザの利便性や後方互換性の考慮を最初にすることになります。実装上の制約といったノイズを排除して考えることもできます。仕様のちゃぶ台返しがあっても、内部実装に着手する前なら手戻りは少なくて済みます。最初にサンプルを書いておけば、後々ユーザから「サンプルください」なんてことも言われません。メリットのほうが多いのです。<br>
<!-- -->外部仕様の検討は、真面目にやると意外に時間がかかります。動作するコードとしての成果物がなかなか出てこない分、プログラマとしては焦燥感に駆られて実装に着手してしまうのも往々にしてあると思います。<br>
<!-- -->「意識しましょう」という努力目標のルールは大抵機能しないことが多いので、内部実装を始めるより前に API のレビューや(動作しない状態の)サンプルコードのレビューを必須とする開発フローを取り入れるのも、組織の規模や提供するソフトウェアの特性によってはフィットするのかもしれません。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-自分以外の視点で良いフィードバックをくれる人を見つけること"><strong>2. 自分以外の視点で良いフィードバックをくれる人を見つけること</strong><a href="#2-自分以外の視点で良いフィードバックをくれる人を見つけること" class="hash-link" aria-label="Direct link to 2-自分以外の視点で良いフィードバックをくれる人を見つけること" title="Direct link to 2-自分以外の視点で良いフィードバックをくれる人を見つけること">​</a></h3><p>個人開発をしていると、目線が一つだけになり結果的に良いものができないのを思い知りました。ある程度品質や方向性が固まった段階で、早期にできるだけいろんな人に dogfooding をお願いして、率直でストレートな意見をもらうことは非常に大事であると思いました。<br>
<!-- -->特に、知識豊富なヘビーユーザーや事前知識がそこまでないライトユーザーなど、様々な人にお願いすると面白いです。前者はセキュリティ上の懸念点を見つけてくださいましたし、後者は「サンプルみれば理解できるでしょ？」みたいなマッチョな思想がイケてないことを教えてくれたりと、他者からのフィードバックで多くの気づきと改善ができました。<br>
<!-- -->今回開発したカスタムプロバイダもそうした人達との協業を通して改善していった経緯もあります。改めてこの場を借りて感謝申し上げます。</p><p>(完)</p>]]></content>
        <author>
            <name>ks6088ts</name>
            <uri>https://github.com/ks6088ts</uri>
        </author>
        <category label="terraform" term="terraform"/>
        <category label="azure" term="azure"/>
    </entry>
</feed>